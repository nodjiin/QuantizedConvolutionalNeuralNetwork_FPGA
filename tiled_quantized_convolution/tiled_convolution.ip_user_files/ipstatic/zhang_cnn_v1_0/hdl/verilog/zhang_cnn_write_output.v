// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module zhang_cnn_write_output (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        curr_layer_out_w_dout,
        curr_layer_out_w_empty_n,
        curr_layer_out_w_read,
        curr_layer_out_h_dout,
        curr_layer_out_h_empty_n,
        curr_layer_out_h_read,
        curr_layer_out_ch_dout,
        curr_layer_out_ch_empty_n,
        curr_layer_out_ch_read,
        m_axi_out_r_AWVALID,
        m_axi_out_r_AWREADY,
        m_axi_out_r_AWADDR,
        m_axi_out_r_AWID,
        m_axi_out_r_AWLEN,
        m_axi_out_r_AWSIZE,
        m_axi_out_r_AWBURST,
        m_axi_out_r_AWLOCK,
        m_axi_out_r_AWCACHE,
        m_axi_out_r_AWPROT,
        m_axi_out_r_AWQOS,
        m_axi_out_r_AWREGION,
        m_axi_out_r_AWUSER,
        m_axi_out_r_WVALID,
        m_axi_out_r_WREADY,
        m_axi_out_r_WDATA,
        m_axi_out_r_WSTRB,
        m_axi_out_r_WLAST,
        m_axi_out_r_WID,
        m_axi_out_r_WUSER,
        m_axi_out_r_ARVALID,
        m_axi_out_r_ARREADY,
        m_axi_out_r_ARADDR,
        m_axi_out_r_ARID,
        m_axi_out_r_ARLEN,
        m_axi_out_r_ARSIZE,
        m_axi_out_r_ARBURST,
        m_axi_out_r_ARLOCK,
        m_axi_out_r_ARCACHE,
        m_axi_out_r_ARPROT,
        m_axi_out_r_ARQOS,
        m_axi_out_r_ARREGION,
        m_axi_out_r_ARUSER,
        m_axi_out_r_RVALID,
        m_axi_out_r_RREADY,
        m_axi_out_r_RDATA,
        m_axi_out_r_RLAST,
        m_axi_out_r_RID,
        m_axi_out_r_RUSER,
        m_axi_out_r_RRESP,
        m_axi_out_r_BVALID,
        m_axi_out_r_BREADY,
        m_axi_out_r_BRESP,
        m_axi_out_r_BID,
        m_axi_out_r_BUSER,
        out5_dout,
        out5_empty_n,
        out5_read,
        to_r_dout,
        to_r_empty_n,
        to_r_read,
        row_dout,
        row_empty_n,
        row_read,
        col_dout,
        col_empty_n,
        col_read,
        biasbuf_V_address0,
        biasbuf_V_ce0,
        biasbuf_V_q0,
        outputfm_V_15_address0,
        outputfm_V_15_ce0,
        outputfm_V_15_q0,
        outputfm_V_0_address0,
        outputfm_V_0_ce0,
        outputfm_V_0_q0,
        outputfm_V_3_address0,
        outputfm_V_3_ce0,
        outputfm_V_3_q0,
        outputfm_V_7_address0,
        outputfm_V_7_ce0,
        outputfm_V_7_q0,
        outputfm_V_14_address0,
        outputfm_V_14_ce0,
        outputfm_V_14_q0,
        outputfm_V_13_address0,
        outputfm_V_13_ce0,
        outputfm_V_13_q0,
        outputfm_V_10_address0,
        outputfm_V_10_ce0,
        outputfm_V_10_q0,
        outputfm_V_2_address0,
        outputfm_V_2_ce0,
        outputfm_V_2_q0,
        outputfm_V_4_address0,
        outputfm_V_4_ce0,
        outputfm_V_4_q0,
        outputfm_V_5_address0,
        outputfm_V_5_ce0,
        outputfm_V_5_q0,
        outputfm_V_11_address0,
        outputfm_V_11_ce0,
        outputfm_V_11_q0,
        outputfm_V_6_address0,
        outputfm_V_6_ce0,
        outputfm_V_6_q0,
        outputfm_V_8_address0,
        outputfm_V_8_ce0,
        outputfm_V_8_q0,
        outputfm_V_12_address0,
        outputfm_V_12_ce0,
        outputfm_V_12_q0,
        outputfm_V_1_address0,
        outputfm_V_1_ce0,
        outputfm_V_1_q0,
        outputfm_V_9_address0,
        outputfm_V_9_ce0,
        outputfm_V_9_q0
);

parameter    ap_ST_st1_fsm_0 = 16'b1;
parameter    ap_ST_st2_fsm_1 = 16'b10;
parameter    ap_ST_st3_fsm_2 = 16'b100;
parameter    ap_ST_st4_fsm_3 = 16'b1000;
parameter    ap_ST_st5_fsm_4 = 16'b10000;
parameter    ap_ST_st6_fsm_5 = 16'b100000;
parameter    ap_ST_st7_fsm_6 = 16'b1000000;
parameter    ap_ST_st8_fsm_7 = 16'b10000000;
parameter    ap_ST_st9_fsm_8 = 16'b100000000;
parameter    ap_ST_st10_fsm_9 = 16'b1000000000;
parameter    ap_ST_st11_fsm_10 = 16'b10000000000;
parameter    ap_ST_st12_fsm_11 = 16'b100000000000;
parameter    ap_ST_st13_fsm_12 = 16'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 16'b10000000000000;
parameter    ap_ST_pp0_stg0_fsm_14 = 16'b100000000000000;
parameter    ap_ST_st31_fsm_15 = 16'b1000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv96_0 = 96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv16_14 = 16'b10100;
parameter    ap_const_lv16_10 = 16'b10000;
parameter    ap_const_lv96_1 = 96'b1;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv49_0 = 49'b0000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_D6 = 8'b11010110;
parameter    ap_const_lv32_F = 32'b1111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] curr_layer_out_w_dout;
input   curr_layer_out_w_empty_n;
output   curr_layer_out_w_read;
input  [15:0] curr_layer_out_h_dout;
input   curr_layer_out_h_empty_n;
output   curr_layer_out_h_read;
input  [15:0] curr_layer_out_ch_dout;
input   curr_layer_out_ch_empty_n;
output   curr_layer_out_ch_read;
output   m_axi_out_r_AWVALID;
input   m_axi_out_r_AWREADY;
output  [31:0] m_axi_out_r_AWADDR;
output  [0:0] m_axi_out_r_AWID;
output  [31:0] m_axi_out_r_AWLEN;
output  [2:0] m_axi_out_r_AWSIZE;
output  [1:0] m_axi_out_r_AWBURST;
output  [1:0] m_axi_out_r_AWLOCK;
output  [3:0] m_axi_out_r_AWCACHE;
output  [2:0] m_axi_out_r_AWPROT;
output  [3:0] m_axi_out_r_AWQOS;
output  [3:0] m_axi_out_r_AWREGION;
output  [0:0] m_axi_out_r_AWUSER;
output   m_axi_out_r_WVALID;
input   m_axi_out_r_WREADY;
output  [31:0] m_axi_out_r_WDATA;
output  [3:0] m_axi_out_r_WSTRB;
output   m_axi_out_r_WLAST;
output  [0:0] m_axi_out_r_WID;
output  [0:0] m_axi_out_r_WUSER;
output   m_axi_out_r_ARVALID;
input   m_axi_out_r_ARREADY;
output  [31:0] m_axi_out_r_ARADDR;
output  [0:0] m_axi_out_r_ARID;
output  [31:0] m_axi_out_r_ARLEN;
output  [2:0] m_axi_out_r_ARSIZE;
output  [1:0] m_axi_out_r_ARBURST;
output  [1:0] m_axi_out_r_ARLOCK;
output  [3:0] m_axi_out_r_ARCACHE;
output  [2:0] m_axi_out_r_ARPROT;
output  [3:0] m_axi_out_r_ARQOS;
output  [3:0] m_axi_out_r_ARREGION;
output  [0:0] m_axi_out_r_ARUSER;
input   m_axi_out_r_RVALID;
output   m_axi_out_r_RREADY;
input  [31:0] m_axi_out_r_RDATA;
input   m_axi_out_r_RLAST;
input  [0:0] m_axi_out_r_RID;
input  [0:0] m_axi_out_r_RUSER;
input  [1:0] m_axi_out_r_RRESP;
input   m_axi_out_r_BVALID;
output   m_axi_out_r_BREADY;
input  [1:0] m_axi_out_r_BRESP;
input  [0:0] m_axi_out_r_BID;
input  [0:0] m_axi_out_r_BUSER;
input  [29:0] out5_dout;
input   out5_empty_n;
output   out5_read;
input  [31:0] to_r_dout;
input   to_r_empty_n;
output   to_r_read;
input  [31:0] row_dout;
input   row_empty_n;
output   row_read;
input  [31:0] col_dout;
input   col_empty_n;
output   col_read;
output  [6:0] biasbuf_V_address0;
output   biasbuf_V_ce0;
input  [47:0] biasbuf_V_q0;
output  [8:0] outputfm_V_15_address0;
output   outputfm_V_15_ce0;
input  [47:0] outputfm_V_15_q0;
output  [8:0] outputfm_V_0_address0;
output   outputfm_V_0_ce0;
input  [47:0] outputfm_V_0_q0;
output  [8:0] outputfm_V_3_address0;
output   outputfm_V_3_ce0;
input  [47:0] outputfm_V_3_q0;
output  [8:0] outputfm_V_7_address0;
output   outputfm_V_7_ce0;
input  [47:0] outputfm_V_7_q0;
output  [8:0] outputfm_V_14_address0;
output   outputfm_V_14_ce0;
input  [47:0] outputfm_V_14_q0;
output  [8:0] outputfm_V_13_address0;
output   outputfm_V_13_ce0;
input  [47:0] outputfm_V_13_q0;
output  [8:0] outputfm_V_10_address0;
output   outputfm_V_10_ce0;
input  [47:0] outputfm_V_10_q0;
output  [8:0] outputfm_V_2_address0;
output   outputfm_V_2_ce0;
input  [47:0] outputfm_V_2_q0;
output  [8:0] outputfm_V_4_address0;
output   outputfm_V_4_ce0;
input  [47:0] outputfm_V_4_q0;
output  [8:0] outputfm_V_5_address0;
output   outputfm_V_5_ce0;
input  [47:0] outputfm_V_5_q0;
output  [8:0] outputfm_V_11_address0;
output   outputfm_V_11_ce0;
input  [47:0] outputfm_V_11_q0;
output  [8:0] outputfm_V_6_address0;
output   outputfm_V_6_ce0;
input  [47:0] outputfm_V_6_q0;
output  [8:0] outputfm_V_8_address0;
output   outputfm_V_8_ce0;
input  [47:0] outputfm_V_8_q0;
output  [8:0] outputfm_V_12_address0;
output   outputfm_V_12_ce0;
input  [47:0] outputfm_V_12_q0;
output  [8:0] outputfm_V_1_address0;
output   outputfm_V_1_ce0;
input  [47:0] outputfm_V_1_q0;
output  [8:0] outputfm_V_9_address0;
output   outputfm_V_9_ce0;
input  [47:0] outputfm_V_9_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg curr_layer_out_w_read;
reg curr_layer_out_h_read;
reg curr_layer_out_ch_read;
reg m_axi_out_r_AWVALID;
reg m_axi_out_r_WVALID;
reg m_axi_out_r_BREADY;
reg out5_read;
reg to_r_read;
reg row_read;
reg col_read;
reg biasbuf_V_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_34;
reg    curr_layer_out_w_blk_n;
reg    curr_layer_out_h_blk_n;
reg    curr_layer_out_ch_blk_n;
reg    out_r_blk_n_AW;
reg    ap_reg_ppiten_pp0_it9;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg    ap_reg_ppiten_pp0_it6;
reg    ap_reg_ppiten_pp0_it7;
reg    ap_reg_ppiten_pp0_it8;
reg    ap_reg_ppiten_pp0_it10;
reg    ap_reg_ppiten_pp0_it11;
reg    ap_reg_ppiten_pp0_it12;
reg    ap_reg_ppiten_pp0_it13;
reg    ap_reg_ppiten_pp0_it14;
reg    ap_reg_ppiten_pp0_it15;
reg   [0:0] exitcond_flatten1_i_reg_979;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8;
reg    out_r_blk_n_W;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9;
reg    out_r_blk_n_B;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter14;
reg    out5_blk_n;
reg    to_r_blk_n;
reg    row_blk_n;
reg    col_blk_n;
reg   [95:0] indvar_flatten1_i_reg_297;
reg   [30:0] o_i_i_i_reg_308;
reg   [63:0] indvar_flatten_i_reg_319;
reg   [30:0] r_i_i_i_reg_330;
reg   [30:0] ap_reg_ppstg_r_i_i_i_reg_330_pp0_iter1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_14;
reg    ap_sig_297;
reg    ap_sig_ioackin_m_axi_out_r_AWREADY;
reg    ap_sig_ioackin_m_axi_out_r_WREADY;
reg    ap_sig_310;
reg   [30:0] c_i_i_i_reg_342;
reg   [29:0] out5_read_reg_843;
reg    ap_sig_334;
reg   [15:0] curr_layer_out_w_read_reg_848;
reg   [15:0] curr_layer_out_h_read_reg_854;
reg   [15:0] curr_layer_out_ch_read_reg_860;
reg   [31:0] to_read_reg_867;
reg   [31:0] row_read_reg_875;
reg   [31:0] col_read_reg_882;
wire   [0:0] tmp_34_i_i_i_fu_395_p2;
reg   [0:0] tmp_34_i_i_i_reg_889;
wire   [0:0] tmp_35_i_i_i_fu_401_p2;
reg   [0:0] tmp_35_i_i_i_reg_894;
wire  signed [31:0] tmp_i_i_i_fu_407_p1;
reg  signed [31:0] tmp_i_i_i_reg_899;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_360;
wire  signed [31:0] tmp_33_i_i_i_fu_410_p1;
reg  signed [31:0] tmp_33_i_i_i_reg_904;
wire   [31:0] n_rows_1_fu_449_p3;
reg   [31:0] n_rows_1_reg_910;
wire   [31:0] n_cols_1_fu_473_p3;
reg   [31:0] n_cols_1_reg_915;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_375;
wire   [0:0] tmp_36_i_i_i_fu_493_p2;
reg   [0:0] tmp_36_i_i_i_reg_932;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_386;
wire   [31:0] n_depth_o_1_fu_527_p3;
reg   [31:0] n_depth_o_1_reg_937;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_395;
wire   [63:0] grp_fu_487_p2;
reg   [63:0] bound_i_reg_942;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_406;
wire   [95:0] grp_fu_541_p2;
reg   [95:0] bound5_i_reg_958;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_417;
wire   [0:0] tmp_54_i_i_mid_i_fu_547_p2;
reg   [0:0] tmp_54_i_i_mid_i_reg_963;
wire   [32:0] sext_cast_i_fu_552_p1;
reg   [32:0] sext_cast_i_reg_968;
wire  signed [31:0] tmp_49_i_i_i_fu_559_p2;
reg  signed [31:0] tmp_49_i_i_i_reg_973;
wire   [0:0] exitcond_flatten1_i_fu_578_p2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter4;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter5;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter6;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter7;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter10;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter11;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter12;
reg   [0:0] ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter13;
wire   [95:0] indvar_flatten_next1_i_fu_583_p2;
wire   [0:0] exitcond_flatten15_i_fu_595_p2;
reg   [0:0] exitcond_flatten15_i_reg_988;
reg   [0:0] ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter3;
wire  signed [31:0] tmp_49_i_i_mid1_i_fu_620_p2;
reg  signed [31:0] tmp_49_i_i_mid1_i_reg_995;
wire   [30:0] o_t_i_i_mid2_v_i_fu_625_p3;
reg   [30:0] o_t_i_i_mid2_v_i_reg_1001;
wire   [3:0] tmp_fu_633_p1;
reg   [3:0] tmp_reg_1006;
wire   [0:0] tmp_54_i_i_mid1_i_fu_637_p3;
reg   [0:0] tmp_54_i_i_mid1_i_reg_1011;
reg   [0:0] ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter1;
reg   [0:0] ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter2;
reg   [0:0] ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter3;
wire   [30:0] r_i_fu_644_p2;
reg   [30:0] r_i_reg_1016;
reg   [30:0] ap_reg_ppstg_r_i_reg_1016_pp0_iter1;
reg   [30:0] ap_reg_ppstg_r_i_reg_1016_pp0_iter2;
wire   [30:0] c_i_i_mid2_i_fu_650_p3;
reg   [30:0] c_i_i_mid2_i_reg_1021;
reg   [30:0] ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter1;
reg   [30:0] ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter2;
reg   [30:0] ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter3;
reg   [30:0] ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter4;
reg   [30:0] ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter5;
reg   [30:0] ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter6;
wire   [30:0] r_i_i_mid2_i_fu_658_p3;
reg   [30:0] r_i_i_mid2_i_reg_1027;
wire   [30:0] c_fu_666_p2;
wire   [63:0] indvar_flatten_next_i_fu_678_p3;
wire   [31:0] grp_fu_564_p2;
reg   [31:0] tmp5_i_i_i_reg_1048;
wire   [31:0] tmp_i_fu_704_p2;
reg   [31:0] tmp_i_reg_1053;
reg   [31:0] ap_reg_ppstg_tmp_i_reg_1053_pp0_iter3;
wire   [48:0] tmp_59_i_i_i_fu_718_p2;
reg   [48:0] tmp_59_i_i_i_reg_1058;
wire   [31:0] grp_fu_696_p2;
reg   [31:0] tmp5_i_i_mid1_i_reg_1064;
wire   [31:0] tmp_mid1_i_fu_733_p2;
reg   [31:0] tmp_mid1_i_reg_1069;
wire   [0:0] tmp_60_i_i_i_fu_739_p2;
reg   [0:0] tmp_60_i_i_i_reg_1074;
reg   [0:0] ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter4;
reg   [0:0] ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter5;
reg   [0:0] ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter6;
reg   [0:0] ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter7;
reg   [0:0] ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter8;
wire   [31:0] grp_fu_764_p2;
reg   [31:0] tmp2_i_i_mid2_i_reg_1089;
reg   [31:0] out_addr_reg_1094;
reg   [31:0] ap_reg_ppstg_out_addr_reg_1094_pp0_iter8;
wire   [31:0] grp_fu_392_p1;
reg   [31:0] dp_reg_1099;
wire   [31:0] p_0_i_i_i_i_fu_836_p3;
reg   [31:0] p_0_i_i_i_i_reg_1104;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_done;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_idle;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_ready;
reg    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_ce;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_15_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_15_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_0_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_0_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_3_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_3_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_7_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_7_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_14_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_14_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_13_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_13_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_10_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_10_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_2_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_2_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_4_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_4_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_5_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_5_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_11_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_11_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_6_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_6_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_8_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_8_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_12_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_12_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_1_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_1_ce0;
wire   [8:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_9_address0;
wire    grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_9_ce0;
wire   [47:0] grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_return;
reg   [30:0] o_i_i_i_phi_fu_312_p4;
reg   [30:0] r_i_i_i_phi_fu_334_p4;
reg    ap_reg_grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start;
wire  signed [63:0] tmp_50_i_i_mid2_i_fu_691_p1;
wire  signed [63:0] sum_cast_i_fu_791_p1;
reg    ap_reg_ioackin_m_axi_out_r_AWREADY;
reg    ap_reg_ioackin_m_axi_out_r_WREADY;
wire  signed [63:0] grp_fu_392_p0;
wire   [15:0] n_rows_fu_413_p3;
wire   [15:0] n_cols_fu_423_p3;
wire  signed [31:0] n_rows_cast_i_i_i_fu_419_p1;
wire   [31:0] tmp_38_i_i_i_fu_433_p2;
wire   [0:0] tmp_39_i_i_i_fu_438_p2;
wire   [31:0] tmp_40_i_i_i_fu_444_p2;
wire  signed [31:0] n_cols_cast_i_i_i_fu_429_p1;
wire   [31:0] tmp_41_i_i_i_fu_457_p2;
wire   [0:0] tmp_42_i_i_i_fu_462_p2;
wire   [31:0] tmp_43_i_i_i_fu_468_p2;
wire   [31:0] grp_fu_487_p0;
wire   [31:0] grp_fu_487_p1;
wire   [15:0] n_depth_o_fu_501_p3;
wire  signed [31:0] n_depth_o_cast_i_i_i_fu_507_p1;
wire   [31:0] tmp_44_i_i_i_fu_511_p2;
wire  signed [31:0] tmp_37_i_i_i_fu_498_p1;
wire   [0:0] tmp_45_i_i_i_fu_516_p2;
wire   [31:0] tmp_46_i_i_i_fu_522_p2;
wire   [63:0] grp_fu_541_p0;
wire   [31:0] grp_fu_541_p1;
wire   [31:0] o_cast_i_i_mid1_i_fu_555_p1;
wire  signed [15:0] grp_fu_564_p0;
wire  signed [31:0] grp_fu_564_p1;
wire   [31:0] c_cast_i_i_i_fu_569_p1;
wire   [30:0] o_i_fu_589_p2;
wire   [31:0] p_mid_i_fu_616_p1;
wire   [0:0] tmp_54_i_i_i_fu_573_p2;
wire   [30:0] r_i_i_mid_i_fu_600_p3;
wire   [30:0] c_i_i_mid_i_fu_608_p3;
wire   [63:0] indvar_flatten_op_i_fu_672_p2;
wire   [31:0] tmp_50_i_i_mid2_v_i_fu_686_p3;
wire  signed [15:0] grp_fu_696_p0;
wire   [31:0] tmp_32_i_fu_700_p1;
wire  signed [48:0] tmp_58_i_i_i_fu_714_p1;
wire  signed [48:0] tmp_57_i_i_i_fu_710_p1;
wire   [31:0] p_mid1_i_fu_730_p1;
wire   [31:0] tmp5_i_i_mid2_i_fu_724_p3;
wire   [31:0] tmp2_i_i_mid220_v_v_i_fu_748_p3;
wire   [31:0] tmp2_i_i_mid2_v_v_i_fu_753_p3;
wire  signed [15:0] grp_fu_764_p0;
wire  signed [31:0] grp_fu_764_p1;
wire   [31:0] c_cast_i_i_mid2_cast_i_fu_769_p1;
wire   [31:0] tmp1_i_fu_772_p2;
wire   [31:0] tmp_62_i_i_i_fu_777_p2;
wire  signed [32:0] tmp_63_i_i_cast_i_fu_782_p1;
wire   [32:0] sum_i_fu_786_p2;
wire   [31:0] res_V_1_fu_801_p1;
wire   [7:0] exp_V_fu_804_p4;
wire   [7:0] exp_V_2_fu_814_p2;
wire   [31:0] p_Result_s_fu_820_p5;
wire   [31:0] dp_1_fu_832_p1;
reg    grp_fu_392_ce;
reg    grp_fu_564_ce;
reg    grp_fu_696_ce;
reg    grp_fu_764_ce;
reg    ap_sig_cseq_ST_st31_fsm_15;
reg    ap_sig_1001;
reg   [15:0] ap_NS_fsm;
wire   [63:0] grp_fu_487_p00;
wire   [63:0] grp_fu_487_p10;
wire   [95:0] grp_fu_541_p00;
wire   [95:0] grp_fu_541_p10;
reg    ap_sig_1054;
reg    ap_sig_271;
reg    ap_sig_1057;
reg    ap_sig_275;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'b1;
#0 ap_reg_ppiten_pp0_it9 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
#0 ap_reg_ppiten_pp0_it6 = 1'b0;
#0 ap_reg_ppiten_pp0_it7 = 1'b0;
#0 ap_reg_ppiten_pp0_it8 = 1'b0;
#0 ap_reg_ppiten_pp0_it10 = 1'b0;
#0 ap_reg_ppiten_pp0_it11 = 1'b0;
#0 ap_reg_ppiten_pp0_it12 = 1'b0;
#0 ap_reg_ppiten_pp0_it13 = 1'b0;
#0 ap_reg_ppiten_pp0_it14 = 1'b0;
#0 ap_reg_ppiten_pp0_it15 = 1'b0;
#0 ap_reg_grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start = 1'b0;
#0 ap_reg_ioackin_m_axi_out_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_out_r_WREADY = 1'b0;
end

zhang_cnn_aesl_mux_load_16_20_x_20_x_i4 grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start),
    .ap_done(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_done),
    .ap_idle(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_idle),
    .ap_ready(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_ready),
    .ap_ce(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_ce),
    .empty_11(tmp_reg_1006),
    .empty_12(r_i_i_mid2_i_reg_1027),
    .empty(c_i_i_mid2_i_reg_1021),
    .outputfm_V_15_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_15_address0),
    .outputfm_V_15_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_15_ce0),
    .outputfm_V_15_q0(outputfm_V_15_q0),
    .outputfm_V_0_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_0_address0),
    .outputfm_V_0_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_0_ce0),
    .outputfm_V_0_q0(outputfm_V_0_q0),
    .outputfm_V_3_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_3_address0),
    .outputfm_V_3_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_3_ce0),
    .outputfm_V_3_q0(outputfm_V_3_q0),
    .outputfm_V_7_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_7_address0),
    .outputfm_V_7_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_7_ce0),
    .outputfm_V_7_q0(outputfm_V_7_q0),
    .outputfm_V_14_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_14_address0),
    .outputfm_V_14_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_14_ce0),
    .outputfm_V_14_q0(outputfm_V_14_q0),
    .outputfm_V_13_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_13_address0),
    .outputfm_V_13_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_13_ce0),
    .outputfm_V_13_q0(outputfm_V_13_q0),
    .outputfm_V_10_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_10_address0),
    .outputfm_V_10_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_10_ce0),
    .outputfm_V_10_q0(outputfm_V_10_q0),
    .outputfm_V_2_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_2_address0),
    .outputfm_V_2_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_2_ce0),
    .outputfm_V_2_q0(outputfm_V_2_q0),
    .outputfm_V_4_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_4_address0),
    .outputfm_V_4_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_4_ce0),
    .outputfm_V_4_q0(outputfm_V_4_q0),
    .outputfm_V_5_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_5_address0),
    .outputfm_V_5_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_5_ce0),
    .outputfm_V_5_q0(outputfm_V_5_q0),
    .outputfm_V_11_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_11_address0),
    .outputfm_V_11_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_11_ce0),
    .outputfm_V_11_q0(outputfm_V_11_q0),
    .outputfm_V_6_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_6_address0),
    .outputfm_V_6_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_6_ce0),
    .outputfm_V_6_q0(outputfm_V_6_q0),
    .outputfm_V_8_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_8_address0),
    .outputfm_V_8_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_8_ce0),
    .outputfm_V_8_q0(outputfm_V_8_q0),
    .outputfm_V_12_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_12_address0),
    .outputfm_V_12_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_12_ce0),
    .outputfm_V_12_q0(outputfm_V_12_q0),
    .outputfm_V_1_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_1_address0),
    .outputfm_V_1_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_1_ce0),
    .outputfm_V_1_q0(outputfm_V_1_q0),
    .outputfm_V_9_address0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_9_address0),
    .outputfm_V_9_ce0(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_9_ce0),
    .outputfm_V_9_q0(outputfm_V_9_q0),
    .ap_return(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_return)
);

zhang_cnn_sitofp_64s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
zhang_cnn_sitofp_64s_32_6_U430(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_392_p0),
    .ce(grp_fu_392_ce),
    .dout(grp_fu_392_p1)
);

zhang_cnn_mul_32ns_32ns_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
zhang_cnn_mul_32ns_32ns_64_6_U431(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_487_p0),
    .din1(grp_fu_487_p1),
    .ce(1'b1),
    .dout(grp_fu_487_p2)
);

zhang_cnn_mul_64ns_32ns_96_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 96 ))
zhang_cnn_mul_64ns_32ns_96_6_U432(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_541_p0),
    .din1(grp_fu_541_p1),
    .ce(1'b1),
    .dout(grp_fu_541_p2)
);

zhang_cnn_mul_16s_32s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
zhang_cnn_mul_16s_32s_32_3_U433(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_564_p0),
    .din1(grp_fu_564_p1),
    .ce(grp_fu_564_ce),
    .dout(grp_fu_564_p2)
);

zhang_cnn_mul_16s_32s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
zhang_cnn_mul_16s_32s_32_3_U434(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_696_p0),
    .din1(tmp_49_i_i_mid1_i_reg_995),
    .ce(grp_fu_696_ce),
    .dout(grp_fu_696_p2)
);

zhang_cnn_mul_16s_32s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
zhang_cnn_mul_16s_32s_32_3_U435(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_764_p0),
    .din1(grp_fu_764_p1),
    .ce(grp_fu_764_ce),
    .dout(grp_fu_764_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_15)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_fu_578_p2))) begin
            ap_reg_grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start <= 1'b1;
        end else if ((1'b1 == grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_ready)) begin
            ap_reg_grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_out_r_AWREADY <= 1'b0;
    end else begin
        if (ap_sig_271) begin
            if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
                ap_reg_ioackin_m_axi_out_r_AWREADY <= 1'b0;
            end else if (ap_sig_1054) begin
                ap_reg_ioackin_m_axi_out_r_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_out_r_WREADY <= 1'b0;
    end else begin
        if (ap_sig_275) begin
            if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
                ap_reg_ioackin_m_axi_out_r_WREADY <= 1'b0;
            end else if (ap_sig_1057) begin
                ap_reg_ioackin_m_axi_out_r_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & ~(1'b0 == exitcond_flatten1_i_fu_578_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
            ap_reg_ppiten_pp0_it15 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            if (~(1'b1 == ap_reg_ppiten_pp0_it1)) begin
                ap_reg_ppiten_pp0_it3 <= 1'b0;
            end else if ((1'b1 == ap_reg_ppiten_pp0_it1)) begin
                ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_fu_578_p2))) begin
        c_i_i_i_reg_342 <= c_fu_666_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        c_i_i_i_reg_342 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_fu_578_p2))) begin
        indvar_flatten1_i_reg_297 <= indvar_flatten_next1_i_fu_583_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        indvar_flatten1_i_reg_297 <= ap_const_lv96_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_fu_578_p2))) begin
        indvar_flatten_i_reg_319 <= indvar_flatten_next_i_fu_678_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        indvar_flatten_i_reg_319 <= ap_const_lv64_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_reg_979))) begin
        o_i_i_i_reg_308 <= o_t_i_i_mid2_v_i_reg_1001;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        o_i_i_i_reg_308 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_reg_979))) begin
        r_i_i_i_reg_330 <= r_i_i_mid2_i_reg_1027;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        r_i_i_i_reg_330 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter1 <= c_i_i_mid2_i_reg_1021;
        ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter1 <= exitcond_flatten15_i_reg_988;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter1 <= exitcond_flatten1_i_reg_979;
        ap_reg_ppstg_r_i_i_i_reg_330_pp0_iter1 <= r_i_i_i_reg_330;
        ap_reg_ppstg_r_i_reg_1016_pp0_iter1 <= r_i_reg_1016;
        ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter1 <= tmp_54_i_i_mid1_i_reg_1011;
        exitcond_flatten1_i_reg_979 <= exitcond_flatten1_i_fu_578_p2;
        tmp_49_i_i_i_reg_973 <= tmp_49_i_i_i_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310))) begin
        ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter2 <= ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter1;
        ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter3 <= ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter2;
        ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter4 <= ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter3;
        ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter5 <= ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter4;
        ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter6 <= ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter5;
        ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter1;
        ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter3 <= ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter2;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter10 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter11 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter10;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter12 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter11;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter13 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter12;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter14 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter13;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter1;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter3 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter2;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter4 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter3;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter5 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter4;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter6 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter5;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter7 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter6;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter7;
        ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9 <= ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8;
        ap_reg_ppstg_out_addr_reg_1094_pp0_iter8 <= out_addr_reg_1094;
        ap_reg_ppstg_r_i_reg_1016_pp0_iter2 <= ap_reg_ppstg_r_i_reg_1016_pp0_iter1;
        ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter2 <= ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter1;
        ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter3 <= ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter2;
        ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter4 <= tmp_60_i_i_i_reg_1074;
        ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter5 <= ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter4;
        ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter6 <= ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter5;
        ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter7 <= ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter6;
        ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter8 <= ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter7;
        ap_reg_ppstg_tmp_i_reg_1053_pp0_iter3 <= tmp_i_reg_1053;
        tmp5_i_i_i_reg_1048 <= grp_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        bound5_i_reg_958 <= grp_fu_541_p2;
        sext_cast_i_reg_968[29 : 0] <= sext_cast_i_fu_552_p1[29 : 0];
        tmp_54_i_i_mid_i_reg_963 <= tmp_54_i_i_mid_i_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        bound_i_reg_942 <= grp_fu_487_p2;
        n_depth_o_1_reg_937 <= n_depth_o_1_fu_527_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_fu_578_p2))) begin
        c_i_i_mid2_i_reg_1021 <= c_i_i_mid2_i_fu_650_p3;
        exitcond_flatten15_i_reg_988 <= exitcond_flatten15_i_fu_595_p2;
        r_i_reg_1016 <= r_i_fu_644_p2;
        tmp_49_i_i_mid1_i_reg_995 <= tmp_49_i_i_mid1_i_fu_620_p2;
        tmp_54_i_i_mid1_i_reg_1011 <= tmp_54_i_i_mid1_i_fu_637_p3;
        tmp_reg_1006 <= tmp_fu_633_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        col_read_reg_882 <= col_dout;
        curr_layer_out_ch_read_reg_860 <= curr_layer_out_ch_dout;
        curr_layer_out_h_read_reg_854 <= curr_layer_out_h_dout;
        curr_layer_out_w_read_reg_848 <= curr_layer_out_w_dout;
        out5_read_reg_843 <= out5_dout;
        row_read_reg_875 <= row_dout;
        tmp_34_i_i_i_reg_889 <= tmp_34_i_i_i_fu_395_p2;
        tmp_35_i_i_i_reg_894 <= tmp_35_i_i_i_fu_401_p2;
        to_read_reg_867 <= to_r_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter7))) begin
        dp_reg_1099 <= grp_fu_392_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        n_cols_1_reg_915 <= n_cols_1_fu_473_p3;
        n_rows_1_reg_910 <= n_rows_1_fu_449_p3;
        tmp_33_i_i_i_reg_904 <= tmp_33_i_i_i_fu_410_p1;
        tmp_i_i_i_reg_899 <= tmp_i_i_i_fu_407_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == exitcond_flatten1_i_fu_578_p2))) begin
        o_t_i_i_mid2_v_i_reg_1001 <= o_t_i_i_mid2_v_i_fu_625_p3;
        r_i_i_mid2_i_reg_1027 <= r_i_i_mid2_i_fu_658_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter6))) begin
        out_addr_reg_1094 <= sum_cast_i_fu_791_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        p_0_i_i_i_i_reg_1104 <= p_0_i_i_i_i_fu_836_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter5))) begin
        tmp2_i_i_mid2_i_reg_1089 <= grp_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter2))) begin
        tmp5_i_i_mid1_i_reg_1064 <= grp_fu_696_p2;
        tmp_60_i_i_i_reg_1074 <= tmp_60_i_i_i_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_36_i_i_i_reg_932 <= tmp_36_i_i_i_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter1))) begin
        tmp_59_i_i_i_reg_1058 <= tmp_59_i_i_i_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter1) & ~(1'b0 == ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter1))) begin
        tmp_i_reg_1053 <= tmp_i_fu_704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter2) & (1'b0 == ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter2))) begin
        tmp_mid1_i_reg_1069 <= tmp_mid1_i_fu_733_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | (1'b1 == ap_sig_cseq_ST_st31_fsm_15))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st31_fsm_15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_297) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_417) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_34) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_360) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1001) begin
        ap_sig_cseq_ST_st31_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_375) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_386) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_395) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_406) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_out_r_AWREADY)) begin
        ap_sig_ioackin_m_axi_out_r_AWREADY = m_axi_out_r_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_out_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_out_r_WREADY)) begin
        ap_sig_ioackin_m_axi_out_r_WREADY = m_axi_out_r_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_out_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        biasbuf_V_ce0 = 1'b1;
    end else begin
        biasbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        col_blk_n = col_empty_n;
    end else begin
        col_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        col_read = 1'b1;
    end else begin
        col_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        curr_layer_out_ch_blk_n = curr_layer_out_ch_empty_n;
    end else begin
        curr_layer_out_ch_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        curr_layer_out_ch_read = 1'b1;
    end else begin
        curr_layer_out_ch_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        curr_layer_out_h_blk_n = curr_layer_out_h_empty_n;
    end else begin
        curr_layer_out_h_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        curr_layer_out_h_read = 1'b1;
    end else begin
        curr_layer_out_h_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        curr_layer_out_w_blk_n = curr_layer_out_w_empty_n;
    end else begin
        curr_layer_out_w_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        curr_layer_out_w_read = 1'b1;
    end else begin
        curr_layer_out_w_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        grp_fu_392_ce = 1'b1;
    end else begin
        grp_fu_392_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        grp_fu_564_ce = 1'b1;
    end else begin
        grp_fu_564_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        grp_fu_696_ce = 1'b1;
    end else begin
        grp_fu_696_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        grp_fu_764_ce = 1'b1;
    end else begin
        grp_fu_764_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_ce = 1'b1;
    end else begin
        grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & ~((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310) & (1'b0 == ap_reg_ioackin_m_axi_out_r_AWREADY))) begin
        m_axi_out_r_AWVALID = 1'b1;
    end else begin
        m_axi_out_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it15) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter14) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)))) begin
        m_axi_out_r_BREADY = 1'b1;
    end else begin
        m_axi_out_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & ~((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310) & (1'b0 == ap_reg_ioackin_m_axi_out_r_WREADY))) begin
        m_axi_out_r_WVALID = 1'b1;
    end else begin
        m_axi_out_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (1'b0 == exitcond_flatten1_i_reg_979))) begin
        o_i_i_i_phi_fu_312_p4 = o_t_i_i_mid2_v_i_reg_1001;
    end else begin
        o_i_i_i_phi_fu_312_p4 = o_i_i_i_reg_308;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        out5_blk_n = out5_empty_n;
    end else begin
        out5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        out5_read = 1'b1;
    end else begin
        out5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8))) begin
        out_r_blk_n_AW = m_axi_out_r_AWREADY;
    end else begin
        out_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it15) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter14))) begin
        out_r_blk_n_B = m_axi_out_r_BVALID;
    end else begin
        out_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9))) begin
        out_r_blk_n_W = m_axi_out_r_WREADY;
    end else begin
        out_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (1'b0 == exitcond_flatten1_i_reg_979))) begin
        r_i_i_i_phi_fu_334_p4 = r_i_i_mid2_i_reg_1027;
    end else begin
        r_i_i_i_phi_fu_334_p4 = r_i_i_i_reg_330;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        row_blk_n = row_empty_n;
    end else begin
        row_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        row_read = 1'b1;
    end else begin
        row_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        to_r_blk_n = to_r_empty_n;
    end else begin
        to_r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_334)) begin
        to_r_read = 1'b1;
    end else begin
        to_r_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_334) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_14;
        end
        ap_ST_pp0_stg0_fsm_14 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it15) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & ~(1'b1 == ap_reg_ppiten_pp0_it14)) & ~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & ~(1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b1 == ap_reg_ppiten_pp0_it3)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_14;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it15) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & ~(1'b1 == ap_reg_ppiten_pp0_it14)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8) & (1'b0 == ap_sig_ioackin_m_axi_out_r_AWREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9) & (1'b0 == ap_sig_ioackin_m_axi_out_r_WREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310)) & ~(1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b1 == ap_reg_ppiten_pp0_it3)))) begin
                ap_NS_fsm = ap_ST_st31_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_14;
            end
        end
        ap_ST_st31_fsm_15 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_1001 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_1054 = ((1'b1 == m_axi_out_r_AWREADY) & ~((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310));
end

always @ (*) begin
    ap_sig_1057 = (~((1'b1 == ap_reg_ppiten_pp0_it15) & ap_sig_310) & (1'b1 == m_axi_out_r_WREADY));
end

always @ (*) begin
    ap_sig_271 = ((1'b1 == ap_reg_ppiten_pp0_it9) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter8));
end

always @ (*) begin
    ap_sig_275 = ((1'b1 == ap_reg_ppiten_pp0_it10) & (1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter9));
end

always @ (*) begin
    ap_sig_297 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_310 = ((1'b0 == ap_reg_ppstg_exitcond_flatten1_i_reg_979_pp0_iter14) & (m_axi_out_r_BVALID == 1'b0));
end

always @ (*) begin
    ap_sig_334 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (out5_empty_n == 1'b0) | (curr_layer_out_w_empty_n == 1'b0) | (curr_layer_out_h_empty_n == 1'b0) | (curr_layer_out_ch_empty_n == 1'b0) | (to_r_empty_n == 1'b0) | (row_empty_n == 1'b0) | (col_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_34 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_360 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_375 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_386 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_395 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_406 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_417 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

assign biasbuf_V_address0 = tmp_50_i_i_mid2_i_fu_691_p1;

assign c_cast_i_i_i_fu_569_p1 = c_i_i_i_reg_342;

assign c_cast_i_i_mid2_cast_i_fu_769_p1 = ap_reg_ppstg_c_i_i_mid2_i_reg_1021_pp0_iter6;

assign c_fu_666_p2 = (ap_const_lv31_1 + c_i_i_mid2_i_fu_650_p3);

assign c_i_i_mid2_i_fu_650_p3 = ((tmp_54_i_i_mid1_i_fu_637_p3[0:0] === 1'b1) ? c_i_i_mid_i_fu_608_p3 : ap_const_lv31_0);

assign c_i_i_mid_i_fu_608_p3 = ((exitcond_flatten15_i_fu_595_p2[0:0] === 1'b1) ? ap_const_lv31_0 : c_i_i_i_reg_342);

assign dp_1_fu_832_p1 = p_Result_s_fu_820_p5;

assign exitcond_flatten15_i_fu_595_p2 = ((indvar_flatten_i_reg_319 == bound_i_reg_942) ? 1'b1 : 1'b0);

assign exitcond_flatten1_i_fu_578_p2 = ((indvar_flatten1_i_reg_297 == bound5_i_reg_958) ? 1'b1 : 1'b0);

assign exp_V_2_fu_814_p2 = ($signed(ap_const_lv8_D6) + $signed(exp_V_fu_804_p4));

assign exp_V_fu_804_p4 = {{res_V_1_fu_801_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign grp_fu_392_p0 = $signed(tmp_59_i_i_i_reg_1058);

assign grp_fu_487_p0 = grp_fu_487_p00;

assign grp_fu_487_p00 = n_cols_1_reg_915;

assign grp_fu_487_p1 = grp_fu_487_p10;

assign grp_fu_487_p10 = n_rows_1_reg_910;

assign grp_fu_541_p0 = grp_fu_541_p00;

assign grp_fu_541_p00 = bound_i_reg_942;

assign grp_fu_541_p1 = grp_fu_541_p10;

assign grp_fu_541_p10 = n_depth_o_1_reg_937;

assign grp_fu_564_p0 = tmp_33_i_i_i_reg_904;

assign grp_fu_564_p1 = (o_cast_i_i_mid1_i_fu_555_p1 + to_read_reg_867);

assign grp_fu_696_p0 = tmp_33_i_i_i_reg_904;

assign grp_fu_764_p0 = tmp_i_i_i_reg_899;

assign grp_fu_764_p1 = (row_read_reg_875 + tmp2_i_i_mid2_v_v_i_fu_753_p3);

assign grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start = ap_reg_grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_start;

assign indvar_flatten_next1_i_fu_583_p2 = (indvar_flatten1_i_reg_297 + ap_const_lv96_1);

assign indvar_flatten_next_i_fu_678_p3 = ((exitcond_flatten15_i_fu_595_p2[0:0] === 1'b1) ? ap_const_lv64_1 : indvar_flatten_op_i_fu_672_p2);

assign indvar_flatten_op_i_fu_672_p2 = (ap_const_lv64_1 + indvar_flatten_i_reg_319);

assign m_axi_out_r_ARADDR = ap_const_lv32_0;

assign m_axi_out_r_ARBURST = ap_const_lv2_0;

assign m_axi_out_r_ARCACHE = ap_const_lv4_0;

assign m_axi_out_r_ARID = 1'b0;

assign m_axi_out_r_ARLEN = ap_const_lv32_0;

assign m_axi_out_r_ARLOCK = ap_const_lv2_0;

assign m_axi_out_r_ARPROT = ap_const_lv3_0;

assign m_axi_out_r_ARQOS = ap_const_lv4_0;

assign m_axi_out_r_ARREGION = ap_const_lv4_0;

assign m_axi_out_r_ARSIZE = ap_const_lv3_0;

assign m_axi_out_r_ARUSER = 1'b0;

assign m_axi_out_r_ARVALID = 1'b0;

assign m_axi_out_r_AWADDR = ap_reg_ppstg_out_addr_reg_1094_pp0_iter8;

assign m_axi_out_r_AWBURST = ap_const_lv2_0;

assign m_axi_out_r_AWCACHE = ap_const_lv4_0;

assign m_axi_out_r_AWID = 1'b0;

assign m_axi_out_r_AWLEN = ap_const_lv32_1;

assign m_axi_out_r_AWLOCK = ap_const_lv2_0;

assign m_axi_out_r_AWPROT = ap_const_lv3_0;

assign m_axi_out_r_AWQOS = ap_const_lv4_0;

assign m_axi_out_r_AWREGION = ap_const_lv4_0;

assign m_axi_out_r_AWSIZE = ap_const_lv3_0;

assign m_axi_out_r_AWUSER = 1'b0;

assign m_axi_out_r_RREADY = 1'b0;

assign m_axi_out_r_WDATA = p_0_i_i_i_i_reg_1104;

assign m_axi_out_r_WID = 1'b0;

assign m_axi_out_r_WLAST = 1'b0;

assign m_axi_out_r_WSTRB = ap_const_lv4_F;

assign m_axi_out_r_WUSER = 1'b0;

assign n_cols_1_fu_473_p3 = ((tmp_42_i_i_i_fu_462_p2[0:0] === 1'b1) ? tmp_43_i_i_i_fu_468_p2 : n_cols_cast_i_i_i_fu_429_p1);

assign n_cols_cast_i_i_i_fu_429_p1 = $signed(n_cols_fu_423_p3);

assign n_cols_fu_423_p3 = ((tmp_35_i_i_i_reg_894[0:0] === 1'b1) ? ap_const_lv16_14 : curr_layer_out_w_read_reg_848);

assign n_depth_o_1_fu_527_p3 = ((tmp_45_i_i_i_fu_516_p2[0:0] === 1'b1) ? tmp_46_i_i_i_fu_522_p2 : n_depth_o_cast_i_i_i_fu_507_p1);

assign n_depth_o_cast_i_i_i_fu_507_p1 = $signed(n_depth_o_fu_501_p3);

assign n_depth_o_fu_501_p3 = ((tmp_36_i_i_i_reg_932[0:0] === 1'b1) ? ap_const_lv16_10 : curr_layer_out_ch_read_reg_860);

assign n_rows_1_fu_449_p3 = ((tmp_39_i_i_i_fu_438_p2[0:0] === 1'b1) ? tmp_40_i_i_i_fu_444_p2 : n_rows_cast_i_i_i_fu_419_p1);

assign n_rows_cast_i_i_i_fu_419_p1 = $signed(n_rows_fu_413_p3);

assign n_rows_fu_413_p3 = ((tmp_34_i_i_i_reg_889[0:0] === 1'b1) ? ap_const_lv16_14 : curr_layer_out_h_read_reg_854);

assign o_cast_i_i_mid1_i_fu_555_p1 = o_i_i_i_phi_fu_312_p4;

assign o_i_fu_589_p2 = (ap_const_lv31_1 + o_i_i_i_phi_fu_312_p4);

assign o_t_i_i_mid2_v_i_fu_625_p3 = ((exitcond_flatten15_i_fu_595_p2[0:0] === 1'b1) ? o_i_fu_589_p2 : o_i_i_i_phi_fu_312_p4);

assign outputfm_V_0_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_0_address0;

assign outputfm_V_0_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_0_ce0;

assign outputfm_V_10_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_10_address0;

assign outputfm_V_10_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_10_ce0;

assign outputfm_V_11_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_11_address0;

assign outputfm_V_11_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_11_ce0;

assign outputfm_V_12_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_12_address0;

assign outputfm_V_12_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_12_ce0;

assign outputfm_V_13_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_13_address0;

assign outputfm_V_13_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_13_ce0;

assign outputfm_V_14_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_14_address0;

assign outputfm_V_14_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_14_ce0;

assign outputfm_V_15_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_15_address0;

assign outputfm_V_15_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_15_ce0;

assign outputfm_V_1_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_1_address0;

assign outputfm_V_1_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_1_ce0;

assign outputfm_V_2_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_2_address0;

assign outputfm_V_2_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_2_ce0;

assign outputfm_V_3_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_3_address0;

assign outputfm_V_3_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_3_ce0;

assign outputfm_V_4_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_4_address0;

assign outputfm_V_4_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_4_ce0;

assign outputfm_V_5_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_5_address0;

assign outputfm_V_5_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_5_ce0;

assign outputfm_V_6_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_6_address0;

assign outputfm_V_6_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_6_ce0;

assign outputfm_V_7_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_7_address0;

assign outputfm_V_7_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_7_ce0;

assign outputfm_V_8_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_8_address0;

assign outputfm_V_8_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_8_ce0;

assign outputfm_V_9_address0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_9_address0;

assign outputfm_V_9_ce0 = grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_outputfm_V_9_ce0;

assign p_0_i_i_i_i_fu_836_p3 = ((ap_reg_ppstg_tmp_60_i_i_i_reg_1074_pp0_iter8[0:0] === 1'b1) ? ap_const_lv32_0 : dp_1_fu_832_p1);

assign p_Result_s_fu_820_p5 = {{res_V_1_fu_801_p1[32'd31 : 32'd31]}, {exp_V_2_fu_814_p2}, {res_V_1_fu_801_p1[32'd22 : 32'd0]}};

assign p_mid1_i_fu_730_p1 = ap_reg_ppstg_r_i_reg_1016_pp0_iter2;

assign p_mid_i_fu_616_p1 = o_i_fu_589_p2;

assign r_i_fu_644_p2 = (ap_const_lv31_1 + r_i_i_mid_i_fu_600_p3);

assign r_i_i_mid2_i_fu_658_p3 = ((tmp_54_i_i_mid1_i_fu_637_p3[0:0] === 1'b1) ? r_i_i_mid_i_fu_600_p3 : r_i_fu_644_p2);

assign r_i_i_mid_i_fu_600_p3 = ((exitcond_flatten15_i_fu_595_p2[0:0] === 1'b1) ? ap_const_lv31_0 : r_i_i_i_phi_fu_334_p4);

assign res_V_1_fu_801_p1 = dp_reg_1099;

assign sext_cast_i_fu_552_p1 = out5_read_reg_843;

assign sum_cast_i_fu_791_p1 = $signed(sum_i_fu_786_p2);

assign sum_i_fu_786_p2 = ($signed(sext_cast_i_reg_968) + $signed(tmp_63_i_i_cast_i_fu_782_p1));

assign tmp1_i_fu_772_p2 = (c_cast_i_i_mid2_cast_i_fu_769_p1 + tmp2_i_i_mid2_i_reg_1089);

assign tmp2_i_i_mid220_v_v_i_fu_748_p3 = ((ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter3[0:0] === 1'b1) ? tmp5_i_i_mid1_i_reg_1064 : ap_reg_ppstg_tmp_i_reg_1053_pp0_iter3);

assign tmp2_i_i_mid2_v_v_i_fu_753_p3 = ((ap_reg_ppstg_tmp_54_i_i_mid1_i_reg_1011_pp0_iter3[0:0] === 1'b1) ? tmp2_i_i_mid220_v_v_i_fu_748_p3 : tmp_mid1_i_reg_1069);

assign tmp5_i_i_mid2_i_fu_724_p3 = ((ap_reg_ppstg_exitcond_flatten15_i_reg_988_pp0_iter2[0:0] === 1'b1) ? grp_fu_696_p2 : tmp5_i_i_i_reg_1048);

assign tmp_32_i_fu_700_p1 = ap_reg_ppstg_r_i_i_i_reg_330_pp0_iter1;

assign tmp_33_i_i_i_fu_410_p1 = $signed(curr_layer_out_h_read_reg_854);

assign tmp_34_i_i_i_fu_395_p2 = (($signed(curr_layer_out_h_dout) > $signed(16'b10100)) ? 1'b1 : 1'b0);

assign tmp_35_i_i_i_fu_401_p2 = (($signed(curr_layer_out_w_dout) > $signed(16'b10100)) ? 1'b1 : 1'b0);

assign tmp_36_i_i_i_fu_493_p2 = (($signed(curr_layer_out_ch_read_reg_860) > $signed(16'b10000)) ? 1'b1 : 1'b0);

assign tmp_37_i_i_i_fu_498_p1 = $signed(curr_layer_out_ch_read_reg_860);

assign tmp_38_i_i_i_fu_433_p2 = ($signed(row_read_reg_875) + $signed(n_rows_cast_i_i_i_fu_419_p1));

assign tmp_39_i_i_i_fu_438_p2 = (($signed(tmp_38_i_i_i_fu_433_p2) > $signed(tmp_33_i_i_i_fu_410_p1)) ? 1'b1 : 1'b0);

assign tmp_40_i_i_i_fu_444_p2 = ($signed(tmp_33_i_i_i_fu_410_p1) - $signed(row_read_reg_875));

assign tmp_41_i_i_i_fu_457_p2 = ($signed(col_read_reg_882) + $signed(n_cols_cast_i_i_i_fu_429_p1));

assign tmp_42_i_i_i_fu_462_p2 = (($signed(tmp_41_i_i_i_fu_457_p2) > $signed(tmp_i_i_i_fu_407_p1)) ? 1'b1 : 1'b0);

assign tmp_43_i_i_i_fu_468_p2 = ($signed(tmp_i_i_i_fu_407_p1) - $signed(col_read_reg_882));

assign tmp_44_i_i_i_fu_511_p2 = ($signed(to_read_reg_867) + $signed(n_depth_o_cast_i_i_i_fu_507_p1));

assign tmp_45_i_i_i_fu_516_p2 = (($signed(tmp_44_i_i_i_fu_511_p2) > $signed(tmp_37_i_i_i_fu_498_p1)) ? 1'b1 : 1'b0);

assign tmp_46_i_i_i_fu_522_p2 = ($signed(tmp_37_i_i_i_fu_498_p1) - $signed(to_read_reg_867));

assign tmp_49_i_i_i_fu_559_p2 = (o_cast_i_i_mid1_i_fu_555_p1 + to_read_reg_867);

assign tmp_49_i_i_mid1_i_fu_620_p2 = (p_mid_i_fu_616_p1 + to_read_reg_867);

assign tmp_50_i_i_mid2_i_fu_691_p1 = $signed(tmp_50_i_i_mid2_v_i_fu_686_p3);

assign tmp_50_i_i_mid2_v_i_fu_686_p3 = ((exitcond_flatten15_i_reg_988[0:0] === 1'b1) ? tmp_49_i_i_mid1_i_reg_995 : tmp_49_i_i_i_reg_973);

assign tmp_54_i_i_i_fu_573_p2 = (($signed(c_cast_i_i_i_fu_569_p1) < $signed(n_cols_1_reg_915)) ? 1'b1 : 1'b0);

assign tmp_54_i_i_mid1_i_fu_637_p3 = ((exitcond_flatten15_i_fu_595_p2[0:0] === 1'b1) ? tmp_54_i_i_mid_i_reg_963 : tmp_54_i_i_i_fu_573_p2);

assign tmp_54_i_i_mid_i_fu_547_p2 = (($signed(n_cols_1_reg_915) > $signed(32'b00000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign tmp_57_i_i_i_fu_710_p1 = $signed(grp_zhang_cnn_aesl_mux_load_16_20_x_20_x_i4_fu_353_ap_return);

assign tmp_58_i_i_i_fu_714_p1 = $signed(biasbuf_V_q0);

assign tmp_59_i_i_i_fu_718_p2 = ($signed(tmp_58_i_i_i_fu_714_p1) + $signed(tmp_57_i_i_i_fu_710_p1));

assign tmp_60_i_i_i_fu_739_p2 = ((tmp_59_i_i_i_reg_1058 == ap_const_lv49_0) ? 1'b1 : 1'b0);

assign tmp_62_i_i_i_fu_777_p2 = (col_read_reg_882 + tmp1_i_fu_772_p2);

assign tmp_63_i_i_cast_i_fu_782_p1 = $signed(tmp_62_i_i_i_fu_777_p2);

assign tmp_fu_633_p1 = o_t_i_i_mid2_v_i_fu_625_p3[3:0];

assign tmp_i_fu_704_p2 = (tmp_32_i_fu_700_p1 + grp_fu_564_p2);

assign tmp_i_i_i_fu_407_p1 = $signed(curr_layer_out_w_read_reg_848);

assign tmp_mid1_i_fu_733_p2 = (p_mid1_i_fu_730_p1 + tmp5_i_i_mid2_i_fu_724_p3);

always @ (posedge ap_clk) begin
    sext_cast_i_reg_968[32:30] <= 3'b000;
end

endmodule //zhang_cnn_write_output
