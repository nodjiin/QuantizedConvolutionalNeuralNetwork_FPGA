// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module zhang_cnn_set_out_buffer_to_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outputfm_0_V_address1,
        outputfm_0_V_ce1,
        outputfm_0_V_we1,
        outputfm_0_V_d1,
        outputfm_1_V_address1,
        outputfm_1_V_ce1,
        outputfm_1_V_we1,
        outputfm_1_V_d1,
        outputfm_2_V_address1,
        outputfm_2_V_ce1,
        outputfm_2_V_we1,
        outputfm_2_V_d1,
        outputfm_3_V_address1,
        outputfm_3_V_ce1,
        outputfm_3_V_we1,
        outputfm_3_V_d1,
        outputfm_4_V_address1,
        outputfm_4_V_ce1,
        outputfm_4_V_we1,
        outputfm_4_V_d1,
        outputfm_5_V_address1,
        outputfm_5_V_ce1,
        outputfm_5_V_we1,
        outputfm_5_V_d1,
        outputfm_6_V_address1,
        outputfm_6_V_ce1,
        outputfm_6_V_we1,
        outputfm_6_V_d1,
        outputfm_7_V_address1,
        outputfm_7_V_ce1,
        outputfm_7_V_we1,
        outputfm_7_V_d1,
        outputfm_8_V_address1,
        outputfm_8_V_ce1,
        outputfm_8_V_we1,
        outputfm_8_V_d1,
        outputfm_9_V_address1,
        outputfm_9_V_ce1,
        outputfm_9_V_we1,
        outputfm_9_V_d1,
        outputfm_10_V_address1,
        outputfm_10_V_ce1,
        outputfm_10_V_we1,
        outputfm_10_V_d1,
        outputfm_11_V_address1,
        outputfm_11_V_ce1,
        outputfm_11_V_we1,
        outputfm_11_V_d1,
        outputfm_12_V_address1,
        outputfm_12_V_ce1,
        outputfm_12_V_we1,
        outputfm_12_V_d1,
        outputfm_13_V_address1,
        outputfm_13_V_ce1,
        outputfm_13_V_we1,
        outputfm_13_V_d1,
        outputfm_14_V_address1,
        outputfm_14_V_ce1,
        outputfm_14_V_we1,
        outputfm_14_V_d1,
        outputfm_15_V_address1,
        outputfm_15_V_ce1,
        outputfm_15_V_we1,
        outputfm_15_V_d1
);

parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st5_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv4_E = 4'b1110;
parameter    ap_const_lv48_0 = 48'b000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_D = 4'b1101;
parameter    ap_const_lv4_C = 4'b1100;
parameter    ap_const_lv4_B = 4'b1011;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv4_5 = 4'b101;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv16_C800 = 16'b1100100000000000;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv13_C80 = 13'b110010000000;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv10_190 = 10'b110010000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] outputfm_0_V_address1;
output   outputfm_0_V_ce1;
output   outputfm_0_V_we1;
output  [47:0] outputfm_0_V_d1;
output  [8:0] outputfm_1_V_address1;
output   outputfm_1_V_ce1;
output   outputfm_1_V_we1;
output  [47:0] outputfm_1_V_d1;
output  [8:0] outputfm_2_V_address1;
output   outputfm_2_V_ce1;
output   outputfm_2_V_we1;
output  [47:0] outputfm_2_V_d1;
output  [8:0] outputfm_3_V_address1;
output   outputfm_3_V_ce1;
output   outputfm_3_V_we1;
output  [47:0] outputfm_3_V_d1;
output  [8:0] outputfm_4_V_address1;
output   outputfm_4_V_ce1;
output   outputfm_4_V_we1;
output  [47:0] outputfm_4_V_d1;
output  [8:0] outputfm_5_V_address1;
output   outputfm_5_V_ce1;
output   outputfm_5_V_we1;
output  [47:0] outputfm_5_V_d1;
output  [8:0] outputfm_6_V_address1;
output   outputfm_6_V_ce1;
output   outputfm_6_V_we1;
output  [47:0] outputfm_6_V_d1;
output  [8:0] outputfm_7_V_address1;
output   outputfm_7_V_ce1;
output   outputfm_7_V_we1;
output  [47:0] outputfm_7_V_d1;
output  [8:0] outputfm_8_V_address1;
output   outputfm_8_V_ce1;
output   outputfm_8_V_we1;
output  [47:0] outputfm_8_V_d1;
output  [8:0] outputfm_9_V_address1;
output   outputfm_9_V_ce1;
output   outputfm_9_V_we1;
output  [47:0] outputfm_9_V_d1;
output  [8:0] outputfm_10_V_address1;
output   outputfm_10_V_ce1;
output   outputfm_10_V_we1;
output  [47:0] outputfm_10_V_d1;
output  [8:0] outputfm_11_V_address1;
output   outputfm_11_V_ce1;
output   outputfm_11_V_we1;
output  [47:0] outputfm_11_V_d1;
output  [8:0] outputfm_12_V_address1;
output   outputfm_12_V_ce1;
output   outputfm_12_V_we1;
output  [47:0] outputfm_12_V_d1;
output  [8:0] outputfm_13_V_address1;
output   outputfm_13_V_ce1;
output   outputfm_13_V_we1;
output  [47:0] outputfm_13_V_d1;
output  [8:0] outputfm_14_V_address1;
output   outputfm_14_V_ce1;
output   outputfm_14_V_we1;
output  [47:0] outputfm_14_V_d1;
output  [8:0] outputfm_15_V_address1;
output   outputfm_15_V_ce1;
output   outputfm_15_V_we1;
output  [47:0] outputfm_15_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outputfm_0_V_ce1;
reg outputfm_0_V_we1;
reg outputfm_1_V_ce1;
reg outputfm_1_V_we1;
reg outputfm_2_V_ce1;
reg outputfm_2_V_we1;
reg outputfm_3_V_ce1;
reg outputfm_3_V_we1;
reg outputfm_4_V_ce1;
reg outputfm_4_V_we1;
reg outputfm_5_V_ce1;
reg outputfm_5_V_we1;
reg outputfm_6_V_ce1;
reg outputfm_6_V_we1;
reg outputfm_7_V_ce1;
reg outputfm_7_V_we1;
reg outputfm_8_V_ce1;
reg outputfm_8_V_we1;
reg outputfm_9_V_ce1;
reg outputfm_9_V_we1;
reg outputfm_10_V_ce1;
reg outputfm_10_V_we1;
reg outputfm_11_V_ce1;
reg outputfm_11_V_we1;
reg outputfm_12_V_ce1;
reg outputfm_12_V_we1;
reg outputfm_13_V_ce1;
reg outputfm_13_V_we1;
reg outputfm_14_V_ce1;
reg outputfm_14_V_we1;
reg outputfm_15_V_ce1;
reg outputfm_15_V_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
reg   [15:0] indvar_flatten2_reg_378;
reg   [4:0] i_reg_389;
reg   [12:0] indvar_flatten3_reg_400;
reg   [9:0] indvar_flatten_reg_411;
reg   [4:0] r_reg_422;
reg   [4:0] c_reg_434;
wire   [0:0] exitcond_flatten3_fu_445_p2;
reg   [0:0] exitcond_flatten3_reg_666;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_156;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten3_reg_666_pp0_iter1;
wire   [15:0] indvar_flatten_next3_fu_451_p2;
wire   [4:0] i_t_mid2_v_fu_469_p3;
reg   [4:0] i_t_mid2_v_reg_675;
wire   [3:0] tmp_44_fu_477_p1;
reg   [3:0] tmp_44_reg_680;
reg   [3:0] ap_reg_ppstg_tmp_44_reg_680_pp0_iter1;
wire   [0:0] tmp_s_fu_511_p2;
reg   [0:0] tmp_s_reg_684;
wire   [0:0] exitcond_mid1_fu_529_p2;
reg   [0:0] exitcond_mid1_reg_689;
wire   [4:0] c_mid2_fu_547_p3;
reg   [4:0] c_mid2_reg_694;
reg   [4:0] ap_reg_ppstg_c_mid2_reg_694_pp0_iter1;
wire   [4:0] c_1_fu_555_p2;
wire   [9:0] indvar_flatten_next_fu_567_p3;
wire   [12:0] indvar_flatten_next2_fu_581_p3;
wire   [4:0] tmp_mid2_fu_602_p3;
reg   [4:0] tmp_mid2_reg_714;
reg   [4:0] i_phi_fu_393_p4;
reg   [4:0] r_phi_fu_426_p4;
wire   [63:0] tmp_39_cast_fu_646_p1;
wire   [0:0] exitcond_flatten_fu_463_p2;
wire   [4:0] i_1_fu_457_p2;
wire   [0:0] exitcond_fu_487_p2;
wire   [0:0] not_exitcond_flatten_fu_481_p2;
wire   [0:0] exitcond_flatten1_fu_499_p2;
wire   [0:0] exitcond_flatten_mid_fu_505_p2;
wire   [0:0] exitcond_flatten_not_fu_517_p2;
wire   [0:0] exitcond_mid_fu_493_p2;
wire   [0:0] not_exitcond_flatten_mid_fu_523_p2;
wire   [0:0] tmp_28_fu_535_p2;
wire   [0:0] tmp_45_fu_541_p2;
wire   [9:0] indvar_flatten_op_fu_561_p2;
wire   [12:0] indvar_flatten13_op_fu_575_p2;
wire   [4:0] r_mid_fu_589_p3;
wire   [4:0] r_1_fu_596_p2;
wire   [8:0] tmp_46_fu_609_p3;
wire   [6:0] tmp_47_fu_620_p3;
wire   [9:0] p_shl2_cast_fu_627_p1;
wire   [9:0] p_shl_cast_fu_616_p1;
wire   [9:0] tmp_29_fu_631_p2;
wire   [9:0] tmp_28_cast_fu_637_p1;
wire   [9:0] tmp_30_fu_640_p2;
reg    ap_sig_cseq_ST_st5_fsm_2;
reg    ap_sig_437;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten3_fu_445_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten3_fu_445_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten3_fu_445_p2 == 1'b0)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten3_fu_445_p2 == 1'b0))) begin
        c_reg_434 <= c_1_fu_555_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        c_reg_434 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten3_reg_666 == 1'b0))) begin
        i_reg_389 <= i_t_mid2_v_reg_675;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_389 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten3_fu_445_p2 == 1'b0))) begin
        indvar_flatten2_reg_378 <= indvar_flatten_next3_fu_451_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        indvar_flatten2_reg_378 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten3_fu_445_p2 == 1'b0))) begin
        indvar_flatten3_reg_400 <= indvar_flatten_next2_fu_581_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        indvar_flatten3_reg_400 <= ap_const_lv13_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten3_fu_445_p2 == 1'b0))) begin
        indvar_flatten_reg_411 <= indvar_flatten_next_fu_567_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_411 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten3_reg_666_pp0_iter1 == 1'b0))) begin
        r_reg_422 <= tmp_mid2_reg_714;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        r_reg_422 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_c_mid2_reg_694_pp0_iter1 <= c_mid2_reg_694;
        ap_reg_ppstg_exitcond_flatten3_reg_666_pp0_iter1 <= exitcond_flatten3_reg_666;
        ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 <= tmp_44_reg_680;
        exitcond_flatten3_reg_666 <= exitcond_flatten3_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten3_fu_445_p2 == 1'b0))) begin
        c_mid2_reg_694 <= c_mid2_fu_547_p3;
        exitcond_mid1_reg_689 <= exitcond_mid1_fu_529_p2;
        tmp_44_reg_680 <= tmp_44_fu_477_p1;
        tmp_s_reg_684 <= tmp_s_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten3_fu_445_p2 == 1'b0))) begin
        i_t_mid2_v_reg_675 <= i_t_mid2_v_fu_469_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten3_reg_666 == 1'b0))) begin
        tmp_mid2_reg_714 <= tmp_mid2_fu_602_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st5_fsm_2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_156) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_437) begin
        ap_sig_cseq_ST_st5_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten3_reg_666 == 1'b0))) begin
        i_phi_fu_393_p4 = i_t_mid2_v_reg_675;
    end else begin
        i_phi_fu_393_p4 = i_reg_389;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_0_V_ce1 = 1'b1;
    end else begin
        outputfm_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_0))) begin
        outputfm_0_V_we1 = 1'b1;
    end else begin
        outputfm_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_10_V_ce1 = 1'b1;
    end else begin
        outputfm_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_A))) begin
        outputfm_10_V_we1 = 1'b1;
    end else begin
        outputfm_10_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_11_V_ce1 = 1'b1;
    end else begin
        outputfm_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_B))) begin
        outputfm_11_V_we1 = 1'b1;
    end else begin
        outputfm_11_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_12_V_ce1 = 1'b1;
    end else begin
        outputfm_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_C))) begin
        outputfm_12_V_we1 = 1'b1;
    end else begin
        outputfm_12_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_13_V_ce1 = 1'b1;
    end else begin
        outputfm_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_D))) begin
        outputfm_13_V_we1 = 1'b1;
    end else begin
        outputfm_13_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_14_V_ce1 = 1'b1;
    end else begin
        outputfm_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_E))) begin
        outputfm_14_V_we1 = 1'b1;
    end else begin
        outputfm_14_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_15_V_ce1 = 1'b1;
    end else begin
        outputfm_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_F))) begin
        outputfm_15_V_we1 = 1'b1;
    end else begin
        outputfm_15_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_1_V_ce1 = 1'b1;
    end else begin
        outputfm_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_1))) begin
        outputfm_1_V_we1 = 1'b1;
    end else begin
        outputfm_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_2_V_ce1 = 1'b1;
    end else begin
        outputfm_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_2))) begin
        outputfm_2_V_we1 = 1'b1;
    end else begin
        outputfm_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_3_V_ce1 = 1'b1;
    end else begin
        outputfm_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_3))) begin
        outputfm_3_V_we1 = 1'b1;
    end else begin
        outputfm_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_4_V_ce1 = 1'b1;
    end else begin
        outputfm_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_4))) begin
        outputfm_4_V_we1 = 1'b1;
    end else begin
        outputfm_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_5_V_ce1 = 1'b1;
    end else begin
        outputfm_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_5))) begin
        outputfm_5_V_we1 = 1'b1;
    end else begin
        outputfm_5_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_6_V_ce1 = 1'b1;
    end else begin
        outputfm_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_6))) begin
        outputfm_6_V_we1 = 1'b1;
    end else begin
        outputfm_6_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_7_V_ce1 = 1'b1;
    end else begin
        outputfm_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_7))) begin
        outputfm_7_V_we1 = 1'b1;
    end else begin
        outputfm_7_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_8_V_ce1 = 1'b1;
    end else begin
        outputfm_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_8))) begin
        outputfm_8_V_we1 = 1'b1;
    end else begin
        outputfm_8_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        outputfm_9_V_ce1 = 1'b1;
    end else begin
        outputfm_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_tmp_44_reg_680_pp0_iter1 == ap_const_lv4_9))) begin
        outputfm_9_V_we1 = 1'b1;
    end else begin
        outputfm_9_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten3_reg_666_pp0_iter1 == 1'b0))) begin
        r_phi_fu_426_p4 = tmp_mid2_reg_714;
    end else begin
        r_phi_fu_426_p4 = r_reg_422;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten3_fu_445_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten3_fu_445_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end
        end
        ap_ST_st5_fsm_2 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_156 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_437 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign c_1_fu_555_p2 = (c_mid2_fu_547_p3 + ap_const_lv5_1);

assign c_mid2_fu_547_p3 = ((tmp_45_fu_541_p2[0:0] === 1'b1) ? ap_const_lv5_0 : c_reg_434);

assign exitcond_flatten1_fu_499_p2 = ((indvar_flatten_reg_411 == ap_const_lv10_190) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_445_p2 = ((indvar_flatten2_reg_378 == ap_const_lv16_C800) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_463_p2 = ((indvar_flatten3_reg_400 == ap_const_lv13_C80) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_505_p2 = (exitcond_flatten1_fu_499_p2 & not_exitcond_flatten_fu_481_p2);

assign exitcond_flatten_not_fu_517_p2 = (exitcond_flatten1_fu_499_p2 ^ 1'b1);

assign exitcond_fu_487_p2 = ((c_reg_434 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond_mid1_fu_529_p2 = (exitcond_mid_fu_493_p2 & not_exitcond_flatten_mid_fu_523_p2);

assign exitcond_mid_fu_493_p2 = (exitcond_fu_487_p2 & not_exitcond_flatten_fu_481_p2);

assign i_1_fu_457_p2 = (ap_const_lv5_1 + i_phi_fu_393_p4);

assign i_t_mid2_v_fu_469_p3 = ((exitcond_flatten_fu_463_p2[0:0] === 1'b1) ? i_1_fu_457_p2 : i_phi_fu_393_p4);

assign indvar_flatten13_op_fu_575_p2 = (indvar_flatten3_reg_400 + ap_const_lv13_1);

assign indvar_flatten_next2_fu_581_p3 = ((exitcond_flatten_fu_463_p2[0:0] === 1'b1) ? ap_const_lv13_1 : indvar_flatten13_op_fu_575_p2);

assign indvar_flatten_next3_fu_451_p2 = (indvar_flatten2_reg_378 + ap_const_lv16_1);

assign indvar_flatten_next_fu_567_p3 = ((tmp_s_fu_511_p2[0:0] === 1'b1) ? ap_const_lv10_1 : indvar_flatten_op_fu_561_p2);

assign indvar_flatten_op_fu_561_p2 = (indvar_flatten_reg_411 + ap_const_lv10_1);

assign not_exitcond_flatten_fu_481_p2 = (exitcond_flatten_fu_463_p2 ^ 1'b1);

assign not_exitcond_flatten_mid_fu_523_p2 = (exitcond_flatten_fu_463_p2 | exitcond_flatten_not_fu_517_p2);

assign outputfm_0_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_0_V_d1 = ap_const_lv48_0;

assign outputfm_10_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_10_V_d1 = ap_const_lv48_0;

assign outputfm_11_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_11_V_d1 = ap_const_lv48_0;

assign outputfm_12_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_12_V_d1 = ap_const_lv48_0;

assign outputfm_13_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_13_V_d1 = ap_const_lv48_0;

assign outputfm_14_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_14_V_d1 = ap_const_lv48_0;

assign outputfm_15_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_15_V_d1 = ap_const_lv48_0;

assign outputfm_1_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_1_V_d1 = ap_const_lv48_0;

assign outputfm_2_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_2_V_d1 = ap_const_lv48_0;

assign outputfm_3_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_3_V_d1 = ap_const_lv48_0;

assign outputfm_4_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_4_V_d1 = ap_const_lv48_0;

assign outputfm_5_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_5_V_d1 = ap_const_lv48_0;

assign outputfm_6_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_6_V_d1 = ap_const_lv48_0;

assign outputfm_7_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_7_V_d1 = ap_const_lv48_0;

assign outputfm_8_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_8_V_d1 = ap_const_lv48_0;

assign outputfm_9_V_address1 = tmp_39_cast_fu_646_p1;

assign outputfm_9_V_d1 = ap_const_lv48_0;

assign p_shl2_cast_fu_627_p1 = tmp_47_fu_620_p3;

assign p_shl_cast_fu_616_p1 = tmp_46_fu_609_p3;

assign r_1_fu_596_p2 = (ap_const_lv5_1 + r_mid_fu_589_p3);

assign r_mid_fu_589_p3 = ((tmp_s_reg_684[0:0] === 1'b1) ? ap_const_lv5_0 : r_phi_fu_426_p4);

assign tmp_28_cast_fu_637_p1 = ap_reg_ppstg_c_mid2_reg_694_pp0_iter1;

assign tmp_28_fu_535_p2 = (exitcond_mid1_fu_529_p2 | exitcond_flatten_mid_fu_505_p2);

assign tmp_29_fu_631_p2 = (p_shl2_cast_fu_627_p1 + p_shl_cast_fu_616_p1);

assign tmp_30_fu_640_p2 = (tmp_29_fu_631_p2 + tmp_28_cast_fu_637_p1);

assign tmp_39_cast_fu_646_p1 = tmp_30_fu_640_p2;

assign tmp_44_fu_477_p1 = i_t_mid2_v_fu_469_p3[3:0];

assign tmp_45_fu_541_p2 = (tmp_28_fu_535_p2 | exitcond_flatten_fu_463_p2);

assign tmp_46_fu_609_p3 = {{tmp_mid2_reg_714}, {ap_const_lv4_0}};

assign tmp_47_fu_620_p3 = {{tmp_mid2_reg_714}, {ap_const_lv2_0}};

assign tmp_mid2_fu_602_p3 = ((exitcond_mid1_reg_689[0:0] === 1'b1) ? r_1_fu_596_p2 : r_mid_fu_589_p3);

assign tmp_s_fu_511_p2 = (exitcond_flatten_mid_fu_505_p2 | exitcond_flatten_fu_463_p2);

endmodule //zhang_cnn_set_out_buffer_to_0
