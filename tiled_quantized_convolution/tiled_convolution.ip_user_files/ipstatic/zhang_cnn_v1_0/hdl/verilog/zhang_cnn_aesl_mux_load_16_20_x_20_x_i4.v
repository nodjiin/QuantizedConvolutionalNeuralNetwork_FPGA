// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module zhang_cnn_aesl_mux_load_16_20_x_20_x_i4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        empty_11,
        empty_12,
        empty,
        outputfm_V_15_address0,
        outputfm_V_15_ce0,
        outputfm_V_15_q0,
        outputfm_V_0_address0,
        outputfm_V_0_ce0,
        outputfm_V_0_q0,
        outputfm_V_3_address0,
        outputfm_V_3_ce0,
        outputfm_V_3_q0,
        outputfm_V_7_address0,
        outputfm_V_7_ce0,
        outputfm_V_7_q0,
        outputfm_V_14_address0,
        outputfm_V_14_ce0,
        outputfm_V_14_q0,
        outputfm_V_13_address0,
        outputfm_V_13_ce0,
        outputfm_V_13_q0,
        outputfm_V_10_address0,
        outputfm_V_10_ce0,
        outputfm_V_10_q0,
        outputfm_V_2_address0,
        outputfm_V_2_ce0,
        outputfm_V_2_q0,
        outputfm_V_4_address0,
        outputfm_V_4_ce0,
        outputfm_V_4_q0,
        outputfm_V_5_address0,
        outputfm_V_5_ce0,
        outputfm_V_5_q0,
        outputfm_V_11_address0,
        outputfm_V_11_ce0,
        outputfm_V_11_q0,
        outputfm_V_6_address0,
        outputfm_V_6_ce0,
        outputfm_V_6_q0,
        outputfm_V_8_address0,
        outputfm_V_8_ce0,
        outputfm_V_8_q0,
        outputfm_V_12_address0,
        outputfm_V_12_ce0,
        outputfm_V_12_q0,
        outputfm_V_1_address0,
        outputfm_V_1_ce0,
        outputfm_V_1_q0,
        outputfm_V_9_address0,
        outputfm_V_9_ce0,
        outputfm_V_9_q0,
        ap_return
);

parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv4_5 = 4'b101;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_B = 4'b1011;
parameter    ap_const_lv4_C = 4'b1100;
parameter    ap_const_lv4_D = 4'b1101;
parameter    ap_const_lv4_E = 4'b1110;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv2_0 = 2'b00;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [3:0] empty_11;
input  [30:0] empty_12;
input  [30:0] empty;
output  [8:0] outputfm_V_15_address0;
output   outputfm_V_15_ce0;
input  [47:0] outputfm_V_15_q0;
output  [8:0] outputfm_V_0_address0;
output   outputfm_V_0_ce0;
input  [47:0] outputfm_V_0_q0;
output  [8:0] outputfm_V_3_address0;
output   outputfm_V_3_ce0;
input  [47:0] outputfm_V_3_q0;
output  [8:0] outputfm_V_7_address0;
output   outputfm_V_7_ce0;
input  [47:0] outputfm_V_7_q0;
output  [8:0] outputfm_V_14_address0;
output   outputfm_V_14_ce0;
input  [47:0] outputfm_V_14_q0;
output  [8:0] outputfm_V_13_address0;
output   outputfm_V_13_ce0;
input  [47:0] outputfm_V_13_q0;
output  [8:0] outputfm_V_10_address0;
output   outputfm_V_10_ce0;
input  [47:0] outputfm_V_10_q0;
output  [8:0] outputfm_V_2_address0;
output   outputfm_V_2_ce0;
input  [47:0] outputfm_V_2_q0;
output  [8:0] outputfm_V_4_address0;
output   outputfm_V_4_ce0;
input  [47:0] outputfm_V_4_q0;
output  [8:0] outputfm_V_5_address0;
output   outputfm_V_5_ce0;
input  [47:0] outputfm_V_5_q0;
output  [8:0] outputfm_V_11_address0;
output   outputfm_V_11_ce0;
input  [47:0] outputfm_V_11_q0;
output  [8:0] outputfm_V_6_address0;
output   outputfm_V_6_ce0;
input  [47:0] outputfm_V_6_q0;
output  [8:0] outputfm_V_8_address0;
output   outputfm_V_8_ce0;
input  [47:0] outputfm_V_8_q0;
output  [8:0] outputfm_V_12_address0;
output   outputfm_V_12_ce0;
input  [47:0] outputfm_V_12_q0;
output  [8:0] outputfm_V_1_address0;
output   outputfm_V_1_ce0;
input  [47:0] outputfm_V_1_q0;
output  [8:0] outputfm_V_9_address0;
output   outputfm_V_9_ce0;
input  [47:0] outputfm_V_9_q0;
output  [47:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outputfm_V_15_ce0;
reg outputfm_V_0_ce0;
reg outputfm_V_3_ce0;
reg outputfm_V_7_ce0;
reg outputfm_V_14_ce0;
reg outputfm_V_13_ce0;
reg outputfm_V_10_ce0;
reg outputfm_V_2_ce0;
reg outputfm_V_4_ce0;
reg outputfm_V_5_ce0;
reg outputfm_V_11_ce0;
reg outputfm_V_6_ce0;
reg outputfm_V_8_ce0;
reg outputfm_V_12_ce0;
reg outputfm_V_1_ce0;
reg outputfm_V_9_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_18;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg   [3:0] tmp_135_reg_399;
wire   [47:0] ap_reg_phiprechg_UnifiedRetVal_i_reg_290pp0_it1;
reg   [47:0] UnifiedRetVal_i_phi_fu_293_p32;
wire   [63:0] tmp_46_fu_377_p2;
wire   [34:0] tmp_fu_347_p3;
wire   [32:0] tmp_s_fu_359_p3;
wire   [63:0] p_shl_fu_355_p1;
wire   [63:0] p_shl1_fu_367_p1;
wire   [63:0] p_cast1_fu_343_p1;
wire   [63:0] tmp_45_fu_371_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_184;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) | ~(1'b1 == ap_ce)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        tmp_135_reg_399 <= empty_11;
    end
end

always @ (*) begin
    if (ap_sig_184) begin
        if ((tmp_135_reg_399 == ap_const_lv4_F)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_15_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_E)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_14_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_D)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_13_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_C)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_12_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_B)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_11_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_A)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_10_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_9)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_9_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_8)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_8_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_7)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_7_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_6)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_6_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_5)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_5_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_4)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_4_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_3)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_3_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_2)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_2_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_1)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_1_q0;
        end else if ((tmp_135_reg_399 == ap_const_lv4_0)) begin
            UnifiedRetVal_i_phi_fu_293_p32 = outputfm_V_0_q0;
        end else begin
            UnifiedRetVal_i_phi_fu_293_p32 = ap_reg_phiprechg_UnifiedRetVal_i_reg_290pp0_it1;
        end
    end else begin
        UnifiedRetVal_i_phi_fu_293_p32 = ap_reg_phiprechg_UnifiedRetVal_i_reg_290pp0_it1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b0 == ap_reg_ppiten_pp0_it0) & (1'b0 == ap_reg_ppiten_pp0_it1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_18) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b0 == ap_reg_ppiten_pp0_it0))) begin
        ap_sig_pprstidle_pp0 = 1'b1;
    end else begin
        ap_sig_pprstidle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_0_ce0 = 1'b1;
    end else begin
        outputfm_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_10_ce0 = 1'b1;
    end else begin
        outputfm_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_11_ce0 = 1'b1;
    end else begin
        outputfm_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_12_ce0 = 1'b1;
    end else begin
        outputfm_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_13_ce0 = 1'b1;
    end else begin
        outputfm_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_14_ce0 = 1'b1;
    end else begin
        outputfm_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_15_ce0 = 1'b1;
    end else begin
        outputfm_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_1_ce0 = 1'b1;
    end else begin
        outputfm_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_2_ce0 = 1'b1;
    end else begin
        outputfm_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_3_ce0 = 1'b1;
    end else begin
        outputfm_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_4_ce0 = 1'b1;
    end else begin
        outputfm_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_5_ce0 = 1'b1;
    end else begin
        outputfm_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_6_ce0 = 1'b1;
    end else begin
        outputfm_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_7_ce0 = 1'b1;
    end else begin
        outputfm_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_8_ce0 = 1'b1;
    end else begin
        outputfm_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        outputfm_V_9_ce0 = 1'b1;
    end else begin
        outputfm_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_phiprechg_UnifiedRetVal_i_reg_290pp0_it1 = 'bx;

assign ap_reg_ppiten_pp0_it0 = ap_start;

assign ap_return = UnifiedRetVal_i_phi_fu_293_p32;

always @ (*) begin
    ap_sig_18 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_184 = ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1));
end

assign outputfm_V_0_address0 = tmp_46_fu_377_p2;

assign outputfm_V_10_address0 = tmp_46_fu_377_p2;

assign outputfm_V_11_address0 = tmp_46_fu_377_p2;

assign outputfm_V_12_address0 = tmp_46_fu_377_p2;

assign outputfm_V_13_address0 = tmp_46_fu_377_p2;

assign outputfm_V_14_address0 = tmp_46_fu_377_p2;

assign outputfm_V_15_address0 = tmp_46_fu_377_p2;

assign outputfm_V_1_address0 = tmp_46_fu_377_p2;

assign outputfm_V_2_address0 = tmp_46_fu_377_p2;

assign outputfm_V_3_address0 = tmp_46_fu_377_p2;

assign outputfm_V_4_address0 = tmp_46_fu_377_p2;

assign outputfm_V_5_address0 = tmp_46_fu_377_p2;

assign outputfm_V_6_address0 = tmp_46_fu_377_p2;

assign outputfm_V_7_address0 = tmp_46_fu_377_p2;

assign outputfm_V_8_address0 = tmp_46_fu_377_p2;

assign outputfm_V_9_address0 = tmp_46_fu_377_p2;

assign p_cast1_fu_343_p1 = empty;

assign p_shl1_fu_367_p1 = tmp_s_fu_359_p3;

assign p_shl_fu_355_p1 = tmp_fu_347_p3;

assign tmp_45_fu_371_p2 = (p_shl_fu_355_p1 + p_shl1_fu_367_p1);

assign tmp_46_fu_377_p2 = (p_cast1_fu_343_p1 + tmp_45_fu_371_p2);

assign tmp_fu_347_p3 = {{empty_12}, {ap_const_lv4_0}};

assign tmp_s_fu_359_p3 = {{empty_12}, {ap_const_lv2_0}};

endmodule //zhang_cnn_aesl_mux_load_16_20_x_20_x_i4
