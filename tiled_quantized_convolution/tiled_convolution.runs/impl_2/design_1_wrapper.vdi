#-----------------------------------------------------------
# Vivado v2017.3 (64-bit)
# SW Build 2018833 on Wed Oct  4 19:58:07 MDT 2017
# IP Build 2016188 on Wed Oct  4 21:52:56 MDT 2017
# Start of session at: Wed Nov 22 12:26:03 2017
# Process ID: 14788
# Current directory: /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper.vdi
# Journal file: /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/studio/Prova_casa'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/media/dati/dante/Xilinx/Vivado/2017.3/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg484-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Netlist 29-17] Analyzing 1968 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
WARNING: [Netlist 29-101] Netlist 'design_1_wrapper' is not ideal for floorplanning, since the cellview 'design_1_zhang_cnn_0_0' contains a large number of primitives.  Please consider enabling hierarchy in synthesis if you want to do floorplanning.
INFO: [Project 1-479] Netlist was created with Vivado 2017.3
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0_board.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0_board.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Timing 38-35] Done setting XDC timing constraints. [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl:2]
all_registers: Time (s): cpu = 00:00:27 ; elapsed = 00:00:43 . Memory (MB): peak = 2080.840 ; gain = 539.508 ; free physical = 841 ; free virtual = 7598
Finished Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 171 instances were transformed.
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 170 instances
  RAM32X1D => RAM32X1D (RAMD32, RAMD32): 1 instances

11 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:56 ; elapsed = 00:01:43 . Memory (MB): peak = 2080.848 ; gain = 921.086 ; free physical = 958 ; free virtual = 7658
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2112.855 ; gain = 32.008 ; free physical = 953 ; free virtual = 7654
INFO: [Timing 38-35] Done setting XDC timing constraints.

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 4 inverter(s) to 14 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 18041bfb6

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 2112.855 ; gain = 0.000 ; free physical = 951 ; free virtual = 7652
INFO: [Opt 31-389] Phase Retarget created 16 cells and removed 67 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 7 inverter(s) to 13 load pin(s).
Phase 2 Constant propagation | Checksum: 13b051acb

Time (s): cpu = 00:00:07 ; elapsed = 00:00:05 . Memory (MB): peak = 2112.855 ; gain = 0.000 ; free physical = 951 ; free virtual = 7652
INFO: [Opt 31-389] Phase Constant propagation created 186 cells and removed 694 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 1d703f252

Time (s): cpu = 00:00:10 ; elapsed = 00:00:08 . Memory (MB): peak = 2112.855 ; gain = 0.000 ; free physical = 944 ; free virtual = 7648
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 459 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 1d703f252

Time (s): cpu = 00:00:11 ; elapsed = 00:00:09 . Memory (MB): peak = 2112.855 ; gain = 0.000 ; free physical = 943 ; free virtual = 7647
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 1d703f252

Time (s): cpu = 00:00:12 ; elapsed = 00:00:10 . Memory (MB): peak = 2112.855 ; gain = 0.000 ; free physical = 946 ; free virtual = 7650
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.08 . Memory (MB): peak = 2112.855 ; gain = 0.000 ; free physical = 944 ; free virtual = 7648
Ending Logic Optimization Task | Checksum: 1b3ef9740

Time (s): cpu = 00:00:14 ; elapsed = 00:00:12 . Memory (MB): peak = 2112.855 ; gain = 0.000 ; free physical = 944 ; free virtual = 7648

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=1.392 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 62 BRAM(s) out of a total of 92 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-201] Structural ODC has moved 8 WE to EN ports
Number of BRAM Ports augmented: 55 newly gated: 9 Total Ports: 184
Ending PowerOpt Patch Enables Task | Checksum: 15dbc8fc9

Time (s): cpu = 00:00:09 ; elapsed = 00:00:04 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 858 ; free virtual = 7569
Ending Power Optimization Task | Checksum: 15dbc8fc9

Time (s): cpu = 00:01:10 ; elapsed = 00:00:29 . Memory (MB): peak = 2595.188 ; gain = 482.332 ; free physical = 886 ; free virtual = 7596

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 1 Remap
Phase 1 Remap | Checksum: 1b0bf57cd

Time (s): cpu = 00:00:13 ; elapsed = 00:00:05 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 883 ; free virtual = 7594
INFO: [Opt 31-389] Phase Remap created 54 cells and removed 108 cells
Ending Logic Optimization Task | Checksum: 1b0bf57cd

Time (s): cpu = 00:00:13 ; elapsed = 00:00:05 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 883 ; free virtual = 7594
INFO: [Common 17-83] Releasing license: Implementation
35 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:52 ; elapsed = 00:00:54 . Memory (MB): peak = 2595.188 ; gain = 514.340 ; free physical = 883 ; free virtual = 7594
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.32 ; elapsed = 00:00:00.09 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 881 ; free virtual = 7595
INFO: [Common 17-1381] The checkpoint '/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 883 ; free virtual = 7600
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 882 ; free virtual = 7599
INFO: [Chipscope 16-241] No debug cores found in the current design.
Before running the implement_debug_core command, either use the Set Up Debug wizard (GUI mode)
or use the create_debug_core and connect_debug_core Tcl commands to insert debug cores into the design.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 4 threads
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[0] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[1] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[2] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[3] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 12 Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.09 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 882 ; free virtual = 7599
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: de9d511d

Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.17 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 882 ; free virtual = 7599
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.05 ; elapsed = 00:00:00.05 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 875 ; free virtual = 7597

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 2059675e

Time (s): cpu = 00:00:22 ; elapsed = 00:00:13 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 825 ; free virtual = 7548

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: b02ccec5

Time (s): cpu = 00:00:46 ; elapsed = 00:00:24 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 779 ; free virtual = 7507

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: b02ccec5

Time (s): cpu = 00:00:46 ; elapsed = 00:00:24 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 779 ; free virtual = 7507
Phase 1 Placer Initialization | Checksum: b02ccec5

Time (s): cpu = 00:00:46 ; elapsed = 00:00:24 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 779 ; free virtual = 7507

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: 13c46c48a

Time (s): cpu = 00:02:01 ; elapsed = 00:01:02 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 763 ; free virtual = 7489

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 13c46c48a

Time (s): cpu = 00:02:01 ; elapsed = 00:01:02 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 763 ; free virtual = 7489

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 18cfa5629

Time (s): cpu = 00:02:21 ; elapsed = 00:01:11 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 748 ; free virtual = 7481

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1d15d6f9c

Time (s): cpu = 00:02:22 ; elapsed = 00:01:12 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 748 ; free virtual = 7481

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 19e79a2f9

Time (s): cpu = 00:02:22 ; elapsed = 00:01:12 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 748 ; free virtual = 7481

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: cc92d740

Time (s): cpu = 00:02:30 ; elapsed = 00:01:19 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 731 ; free virtual = 7471

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: c337ea3b

Time (s): cpu = 00:02:31 ; elapsed = 00:01:21 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 729 ; free virtual = 7472

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 154378ac3

Time (s): cpu = 00:02:32 ; elapsed = 00:01:21 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 729 ; free virtual = 7472
Phase 3 Detail Placement | Checksum: 154378ac3

Time (s): cpu = 00:02:32 ; elapsed = 00:01:22 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 730 ; free virtual = 7472

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 15498c472

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 4 CPUs
INFO: [Place 46-33] Processed net design_1_i/zhang_cnn_0/inst/ap_rst_n_inv, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-31] BUFG insertion identified 1 candidate nets, 0 success, 1 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 15498c472

Time (s): cpu = 00:03:02 ; elapsed = 00:01:33 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 734 ; free virtual = 7477
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.518. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: b0878431

Time (s): cpu = 00:03:03 ; elapsed = 00:01:34 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 733 ; free virtual = 7477
Phase 4.1 Post Commit Optimization | Checksum: b0878431

Time (s): cpu = 00:03:04 ; elapsed = 00:01:34 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 733 ; free virtual = 7477

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: b0878431

Time (s): cpu = 00:03:04 ; elapsed = 00:01:35 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 733 ; free virtual = 7477

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: b0878431

Time (s): cpu = 00:03:05 ; elapsed = 00:01:35 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 734 ; free virtual = 7478

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: ac9faa8c

Time (s): cpu = 00:03:05 ; elapsed = 00:01:36 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 734 ; free virtual = 7478
Phase 4 Post Placement Optimization and Clean-Up | Checksum: ac9faa8c

Time (s): cpu = 00:03:05 ; elapsed = 00:01:36 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 734 ; free virtual = 7478
Ending Placer Task | Checksum: 7fc59e01

Time (s): cpu = 00:03:05 ; elapsed = 00:01:36 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 754 ; free virtual = 7497
INFO: [Common 17-83] Releasing license: Implementation
57 Infos, 13 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:03:13 ; elapsed = 00:01:41 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 754 ; free virtual = 7498
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 715 ; free virtual = 7494
INFO: [Common 17-1381] The checkpoint '/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 748 ; free virtual = 7500
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.26 ; elapsed = 00:00:00.31 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 735 ; free virtual = 7488
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
report_utilization: Time (s): cpu = 00:00:00.47 ; elapsed = 00:00:00.54 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 745 ; free virtual = 7498
INFO: [runtcl-4] Executing : report_control_sets -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.20 ; elapsed = 00:00:00.24 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 744 ; free virtual = 7497
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs
Checksum: PlaceDB: 6241ece ConstDB: 0 ShapeSum: 79a17f33 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 80f01668

Time (s): cpu = 00:00:38 ; elapsed = 00:00:27 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 589 ; free virtual = 7346
Post Restoration Checksum: NetGraph: 2bca1971 NumContArr: 5525fcf7 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 80f01668

Time (s): cpu = 00:00:38 ; elapsed = 00:00:28 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 584 ; free virtual = 7341

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 80f01668

Time (s): cpu = 00:00:39 ; elapsed = 00:00:28 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 567 ; free virtual = 7324

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 80f01668

Time (s): cpu = 00:00:39 ; elapsed = 00:00:28 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 567 ; free virtual = 7324
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 13328418a

Time (s): cpu = 00:01:13 ; elapsed = 00:00:41 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 520 ; free virtual = 7277
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.570  | TNS=0.000  | WHS=-0.186 | THS=-231.534|

Phase 2 Router Initialization | Checksum: 10b44d752

Time (s): cpu = 00:01:26 ; elapsed = 00:00:45 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 517 ; free virtual = 7274

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 15bb96519

Time (s): cpu = 00:02:21 ; elapsed = 00:01:03 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 509 ; free virtual = 7269

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 1712
 Number of Nodes with overlaps = 148
 Number of Nodes with overlaps = 21
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.059  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1bd9b0c77

Time (s): cpu = 00:03:14 ; elapsed = 00:01:26 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 509 ; free virtual = 7274

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 14
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.059  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: fc74f940

Time (s): cpu = 00:03:17 ; elapsed = 00:01:28 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 507 ; free virtual = 7273
Phase 4 Rip-up And Reroute | Checksum: fc74f940

Time (s): cpu = 00:03:17 ; elapsed = 00:01:28 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 507 ; free virtual = 7273

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: fc74f940

Time (s): cpu = 00:03:17 ; elapsed = 00:01:28 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 507 ; free virtual = 7273

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: fc74f940

Time (s): cpu = 00:03:17 ; elapsed = 00:01:29 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 507 ; free virtual = 7273
Phase 5 Delay and Skew Optimization | Checksum: fc74f940

Time (s): cpu = 00:03:18 ; elapsed = 00:01:29 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 507 ; free virtual = 7273

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 111520700

Time (s): cpu = 00:03:23 ; elapsed = 00:01:31 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 508 ; free virtual = 7274
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.063  | TNS=0.000  | WHS=0.020  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1a43df2d8

Time (s): cpu = 00:03:23 ; elapsed = 00:01:31 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 508 ; free virtual = 7274
Phase 6 Post Hold Fix | Checksum: 1a43df2d8

Time (s): cpu = 00:03:24 ; elapsed = 00:01:31 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 508 ; free virtual = 7274

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 10.7209 %
  Global Horizontal Routing Utilization  = 11.589 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 198198a09

Time (s): cpu = 00:03:24 ; elapsed = 00:01:31 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 508 ; free virtual = 7273

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 198198a09

Time (s): cpu = 00:03:24 ; elapsed = 00:01:32 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 507 ; free virtual = 7273

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 16fa95c6c

Time (s): cpu = 00:03:27 ; elapsed = 00:01:34 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 505 ; free virtual = 7271

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.063  | TNS=0.000  | WHS=0.020  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 16fa95c6c

Time (s): cpu = 00:03:27 ; elapsed = 00:01:34 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 509 ; free virtual = 7275
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:03:27 ; elapsed = 00:01:34 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 547 ; free virtual = 7312

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
74 Infos, 13 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:03:38 ; elapsed = 00:01:40 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 547 ; free virtual = 7312
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:12 ; elapsed = 00:00:05 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 497 ; free virtual = 7310
INFO: [Common 17-1381] The checkpoint '/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:16 ; elapsed = 00:00:10 . Memory (MB): peak = 2595.188 ; gain = 0.000 ; free physical = 536 ; free virtual = 7312
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:22 ; elapsed = 00:00:08 . Memory (MB): peak = 2604.195 ; gain = 9.008 ; free physical = 508 ; free virtual = 7287
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 4 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:53 ; elapsed = 00:00:18 . Memory (MB): peak = 2604.195 ; gain = 0.000 ; free physical = 357 ; free virtual = 7138
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
85 Infos, 13 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:22 ; elapsed = 00:00:11 . Memory (MB): peak = 2604.195 ; gain = 0.000 ; free physical = 310 ; free virtual = 7100
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -file design_1_wrapper_timing_summary_routed.rpt -warn_on_violation  -rpx design_1_wrapper_timing_summary_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-545] No incremental reuse to report, no incremental placement and routing data was found.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [Common 17-206] Exiting Vivado at Wed Nov 22 12:33:38 2017...
#-----------------------------------------------------------
# Vivado v2017.3 (64-bit)
# SW Build 2018833 on Wed Oct  4 19:58:07 MDT 2017
# IP Build 2016188 on Wed Oct  4 21:52:56 MDT 2017
# Start of session at: Wed Nov 22 13:57:18 2017
# Process ID: 18844
# Current directory: /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/design_1_wrapper.vdi
# Journal file: /home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.14 . Memory (MB): peak = 1157.746 ; gain = 0.000 ; free physical = 1049 ; free virtual = 8423
INFO: [Netlist 29-17] Analyzing 1946 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
WARNING: [Netlist 29-101] Netlist 'design_1_wrapper' is not ideal for floorplanning, since the cellview 'design_1_zhang_cnn_0_0' contains a large number of primitives.  Please consider enabling hierarchy in synthesis if you want to do floorplanning.
INFO: [Project 1-479] Netlist was created with Vivado 2017.3
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/.Xil/Vivado-18844-dante-X55C/dcp3/design_1_wrapper_board.xdc]
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/.Xil/Vivado-18844-dante-X55C/dcp3/design_1_wrapper_board.xdc]
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/.Xil/Vivado-18844-dante-X55C/dcp3/design_1_wrapper_early.xdc]
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/.Xil/Vivado-18844-dante-X55C/dcp3/design_1_wrapper_early.xdc]
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/.Xil/Vivado-18844-dante-X55C/dcp3/design_1_wrapper_late.xdc]
INFO: [Timing 38-35] Done setting XDC timing constraints. [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl:2]
all_registers: Time (s): cpu = 00:00:26 ; elapsed = 00:00:43 . Memory (MB): peak = 2019.602 ; gain = 533.508 ; free physical = 188 ; free virtual = 7611
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution_CASA/tiled_convolution.runs/impl_2/.Xil/Vivado-18844-dante-X55C/dcp3/design_1_wrapper_late.xdc]
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2063.289 ; gain = 43.688 ; free physical = 151 ; free virtual = 7575
Restored from archive | CPU: 3.170000 secs | Memory: 34.441299 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2063.289 ; gain = 43.688 ; free physical = 151 ; free virtual = 7575
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 171 instances were transformed.
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 170 instances
  RAM32X1D => RAM32X1D (RAMD32, RAMD32): 1 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2017.3 (64-bit) build 2018833
open_checkpoint: Time (s): cpu = 00:00:55 ; elapsed = 00:01:43 . Memory (MB): peak = 2063.289 ; gain = 905.543 ; free physical = 204 ; free virtual = 7580
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [DRC 23-27] Running DRC with 4 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_0_1_i_i_reg_5020_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_0_1_i_i_reg_5020_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_10_1_i_i_reg_5125_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_10_1_i_i_reg_5125_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_11_1_i_i_reg_5135_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_11_1_i_i_reg_5135_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_12_1_i_i_reg_5145_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_12_1_i_i_reg_5145_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_13_1_i_i_reg_5155_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_13_1_i_i_reg_5155_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_14_1_i_i_reg_5165_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_14_1_i_i_reg_5165_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_15_1_i_i_reg_5175_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_15_1_i_i_reg_5175_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_16_1_i_i_reg_5185_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_16_1_i_i_reg_5185_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_17_1_i_i_reg_5195_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_17_1_i_i_reg_5195_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_18_1_i_i_reg_5205_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_18_1_i_i_reg_5205_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_19_1_i_i_reg_5215_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_19_1_i_i_reg_5215_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_1_1_i_i_reg_5035_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_1_1_i_i_reg_5035_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_20_1_i_i_reg_5225_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_20_1_i_i_reg_5225_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_21_1_i_i_reg_5235_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_21_1_i_i_reg_5235_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_22_1_i_i_reg_5245_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_22_1_i_i_reg_5245_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_23_1_i_i_reg_5255_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_23_1_i_i_reg_5255_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_24_1_i_i_reg_5265_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_24_1_i_i_reg_5265_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_25_1_i_i_reg_5275_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_25_1_i_i_reg_5275_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_26_1_i_i_reg_5285_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_26_1_i_i_reg_5285_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_27_1_i_i_reg_5295_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_27_1_i_i_reg_5295_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_2_1_i_i_reg_5045_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_2_1_i_i_reg_5045_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_3_1_i_i_reg_5055_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_3_1_i_i_reg_5055_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_4_1_i_i_reg_5065_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_4_1_i_i_reg_5065_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_5_1_i_i_reg_5075_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_5_1_i_i_reg_5075_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_6_1_i_i_reg_5085_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_6_1_i_i_reg_5085_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_7_1_i_i_reg_5095_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_7_1_i_i_reg_5095_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_8_1_i_i_reg_5105_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_8_1_i_i_reg_5105_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_9_1_i_i_reg_5115_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_9_1_i_i_reg_5115_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_81_fu_2730_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_81_fu_2730_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_reg_799_reg__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_reg_799_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_46_reg_894_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_46_reg_894_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_46_reg_894_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_46_reg_894_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_13_reg_2294_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_13_reg_2294_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_17_reg_2304_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_17_reg_2304_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_reg_2182_reg__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_reg_2182_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_reg_2187_reg__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_reg_2187_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_reg_2187_reg__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_reg_2187_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_reg_956_reg__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_reg_956_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_19_i_i_i_reg_1039_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_19_i_i_i_reg_1039_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2__0 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_81_fu_2730_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_81_fu_2730_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_88_fu_2761_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_88_fu_2761_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_95_reg_4328_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_95_reg_4328_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mac_mulbkb_U231/zhang_cnn_mac_mulbkb_DSP48_0_U/p output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mac_mulbkb_U231/zhang_cnn_mac_mulbkb_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_64ndEe_U228/zhang_cnn_mul_64ndEe_MulnS_0_U/buff0_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_64ndEe_U228/zhang_cnn_mul_64ndEe_MulnS_0_U/buff0_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_64ndEe_U228/zhang_cnn_mul_64ndEe_MulnS_0_U/buff0_reg__1 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_64ndEe_U228/zhang_cnn_mul_64ndEe_MulnS_0_U/buff0_reg__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_64ndEe_U228/zhang_cnn_mul_64ndEe_MulnS_0_U/tmp_product output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_64ndEe_U228/zhang_cnn_mul_64ndEe_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/buff0_reg__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/buff0_reg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/buff0_reg__2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/buff0_reg__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/tmp_product output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/tmp_product__1 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mul_96neOg_U229/zhang_cnn_mul_96neOg_MulnS_1_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_fu_456_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_fu_456_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_fu_472_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_fu_472_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_fu_335_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_fu_335_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_fu_341_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_fu_341_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_43_reg_889_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_43_reg_889_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_46_reg_894_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_46_reg_894_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_fu_329_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_fu_329_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_fu_1559_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_fu_1559_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_fu_1564_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_fu_1564_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_13_reg_2294_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_13_reg_2294_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_15_reg_2299_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_15_reg_2299_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_17_reg_2304_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_17_reg_2304_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_fu_1489_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_fu_1489_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/zhang_cnn_mac_mulcud_U112/zhang_cnn_mac_mulcud_DSP48_1_U/p output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/zhang_cnn_mac_mulcud_U112/zhang_cnn_mac_mulcud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_fu_387_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_fu_387_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_fu_488_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_fu_488_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_17_i_i_i_reg_1034_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_17_i_i_i_reg_1034_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_19_i_i_i_reg_1039_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_19_i_i_i_reg_1039_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_fu_456_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_fu_456_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_set_out_buffer_to_0_fu_876/zhang_cnn_mac_mulcud_U752/zhang_cnn_mac_mulcud_DSP48_1_U/p output design_1_i/zhang_cnn_0/inst/grp_set_out_buffer_to_0_fu_876/zhang_cnn_mac_mulcud_U752/zhang_cnn_mac_mulcud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_fu_2406_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_reg_4154_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_reg_4154_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_reg_4154_reg__2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/bound_reg_4154_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_0_2_s_reg_5305_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_0_2_s_reg_5305_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_10_2_reg_5405_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_10_2_reg_5405_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_11_2_reg_5415_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_11_2_reg_5415_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_12_2_reg_5425_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_12_2_reg_5425_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_13_2_reg_5435_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_13_2_reg_5435_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_14_2_reg_5445_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_14_2_reg_5445_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_15_2_reg_5455_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_15_2_reg_5455_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_16_2_reg_5465_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_16_2_reg_5465_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_17_2_reg_5475_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_17_2_reg_5475_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_18_2_reg_5485_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_18_2_reg_5485_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_19_2_reg_5495_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_19_2_reg_5495_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_1_2_s_reg_5315_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_1_2_s_reg_5315_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_20_2_reg_5505_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_20_2_reg_5505_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_21_2_reg_5515_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_21_2_reg_5515_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_22_2_reg_5525_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_22_2_reg_5525_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_23_2_reg_5535_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_23_2_reg_5535_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_24_2_reg_5545_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_24_2_reg_5545_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_25_2_reg_5555_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_25_2_reg_5555_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_26_2_reg_5565_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_26_2_reg_5565_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_27_2_reg_5575_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_27_2_reg_5575_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_2_2_s_reg_5325_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_2_2_s_reg_5325_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_3_2_s_reg_5335_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_3_2_s_reg_5335_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_4_2_s_reg_5345_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_4_2_s_reg_5345_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_5_2_s_reg_5355_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_5_2_s_reg_5355_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_6_2_s_reg_5365_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_6_2_s_reg_5365_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_7_2_s_reg_5375_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_7_2_s_reg_5375_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_8_2_s_reg_5385_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_8_2_s_reg_5385_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_9_2_s_reg_5395_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/out_value_tot_1_9_2_s_reg_5395_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_87_reg_4333_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/tmp_87_reg_4333_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mac_mulbkb_U231/zhang_cnn_mac_mulbkb_DSP48_0_U/p multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/convolve4_U0/zhang_cnn_mac_mulbkb_U231/zhang_cnn_mac_mulbkb_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_fu_456_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_fu_456_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_fu_456_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_fu_456_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_reg_789_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp14_reg_789_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp15_fu_476_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp15_fu_476_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_fu_472_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_fu_472_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_fu_472_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_fu_472_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_reg_809_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp6_reg_809_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_fu_335_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_fu_335_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_fu_335_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_fu_335_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_reg_756_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_23_reg_756_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_fu_341_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_fu_341_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_fu_341_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_fu_341_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_reg_761_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_24_reg_761_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_fu_464_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_reg_799_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_39_reg_799_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_51_reg_899_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_51_reg_899_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_fu_329_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_fu_329_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_fu_329_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_fu_329_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_reg_751_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_s_reg_751_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_fu_1559_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_fu_1559_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_fu_1559_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_fu_1559_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_reg_2165_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_size_reg_2165_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_fu_1554_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_reg_2159_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/kernel_stack_size_reg_2159_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_fu_1564_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_fu_1564_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_fu_1564_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_fu_1564_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_reg_2172_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp7_reg_2172_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_fu_1572_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_reg_2182_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_2_reg_2182_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_fu_1576_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_reg_2187_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_4_reg_2187_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_fu_1489_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_fu_1489_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_fu_1489_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_fu_1489_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_reg_2137_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_reg_2137_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_fu_1568_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_reg_2177_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_s_reg_2177_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/zhang_cnn_mac_mulcud_U112/zhang_cnn_mac_mulcud_DSP48_1_U/p multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/zhang_cnn_mac_mulcud_U112/zhang_cnn_mac_mulcud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_fu_695_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_reg_1070_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_reg_1070_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_reg_1070_reg__2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/ab_64_reg_1070_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_fu_387_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_fu_387_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_fu_387_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_fu_387_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_reg_913_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/out_size_reg_913_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_fu_488_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_fu_488_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_fu_488_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_fu_488_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_reg_951_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp1_i_reg_951_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_fu_492_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_reg_956_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_14_i_i_i_reg_956_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_fu_456_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_fu_456_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_fu_456_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_fu_456_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_reg_940_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_17_reg_940_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_fu_452_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_reg_935_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_i_i_i_reg_935_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_set_out_buffer_to_0_fu_876/zhang_cnn_mac_mulcud_U752/zhang_cnn_mac_mulcud_DSP48_1_U/p multiplier stage design_1_i/zhang_cnn_0/inst/grp_set_out_buffer_to_0_fu_876/zhang_cnn_mac_mulcud_U752/zhang_cnn_mac_mulcud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPREG-4] DSP48E1_PregDynOpmodeZmuxP:: The DSP48E1 cell design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_input_fu_1863/tmp_46_reg_894_reg with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
WARNING: [DRC DPREG-4] DSP48E1_PregDynOpmodeZmuxP:: The DSP48E1 cell design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_13_reg_2294_reg with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
WARNING: [DRC DPREG-4] DSP48E1_PregDynOpmodeZmuxP:: The DSP48E1 cell design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_614/read_in_wh45_U0/grp_read_weights_fu_1681/tmp_17_reg_2304_reg with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
WARNING: [DRC DPREG-4] DSP48E1_PregDynOpmodeZmuxP:: The DSP48E1 cell design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_558/write_output_U0/tmp_19_i_i_i_reg_1039_reg with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[0] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[1] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[2] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[3] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[10] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[11] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[4] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[5] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[6] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[7] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[8] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRBWRADDR[9] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC RTSTAT-10] No routable loads: 15 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, and design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 210 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 4 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
17 Infos, 211 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:26 ; elapsed = 00:00:51 . Memory (MB): peak = 2537.883 ; gain = 474.594 ; free physical = 471 ; free virtual = 7513
INFO: [Common 17-206] Exiting Vivado at Wed Nov 22 14:00:06 2017...
