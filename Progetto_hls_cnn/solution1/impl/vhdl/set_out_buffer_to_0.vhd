-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity set_out_buffer_to_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    partial_outputfm_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_0_ce1 : OUT STD_LOGIC;
    partial_outputfm_0_we1 : OUT STD_LOGIC;
    partial_outputfm_0_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_1_ce1 : OUT STD_LOGIC;
    partial_outputfm_1_we1 : OUT STD_LOGIC;
    partial_outputfm_1_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_2_ce1 : OUT STD_LOGIC;
    partial_outputfm_2_we1 : OUT STD_LOGIC;
    partial_outputfm_2_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_3_ce1 : OUT STD_LOGIC;
    partial_outputfm_3_we1 : OUT STD_LOGIC;
    partial_outputfm_3_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_4_ce1 : OUT STD_LOGIC;
    partial_outputfm_4_we1 : OUT STD_LOGIC;
    partial_outputfm_4_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_5_ce1 : OUT STD_LOGIC;
    partial_outputfm_5_we1 : OUT STD_LOGIC;
    partial_outputfm_5_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_6_ce1 : OUT STD_LOGIC;
    partial_outputfm_6_we1 : OUT STD_LOGIC;
    partial_outputfm_6_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_7_ce1 : OUT STD_LOGIC;
    partial_outputfm_7_we1 : OUT STD_LOGIC;
    partial_outputfm_7_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_8_ce1 : OUT STD_LOGIC;
    partial_outputfm_8_we1 : OUT STD_LOGIC;
    partial_outputfm_8_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_9_ce1 : OUT STD_LOGIC;
    partial_outputfm_9_we1 : OUT STD_LOGIC;
    partial_outputfm_9_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_10_ce1 : OUT STD_LOGIC;
    partial_outputfm_10_we1 : OUT STD_LOGIC;
    partial_outputfm_10_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_11_ce1 : OUT STD_LOGIC;
    partial_outputfm_11_we1 : OUT STD_LOGIC;
    partial_outputfm_11_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_12_ce1 : OUT STD_LOGIC;
    partial_outputfm_12_we1 : OUT STD_LOGIC;
    partial_outputfm_12_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_13_ce1 : OUT STD_LOGIC;
    partial_outputfm_13_we1 : OUT STD_LOGIC;
    partial_outputfm_13_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_14_ce1 : OUT STD_LOGIC;
    partial_outputfm_14_we1 : OUT STD_LOGIC;
    partial_outputfm_14_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_15_ce1 : OUT STD_LOGIC;
    partial_outputfm_15_we1 : OUT STD_LOGIC;
    partial_outputfm_15_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_16_ce1 : OUT STD_LOGIC;
    partial_outputfm_16_we1 : OUT STD_LOGIC;
    partial_outputfm_16_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_17_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_17_ce1 : OUT STD_LOGIC;
    partial_outputfm_17_we1 : OUT STD_LOGIC;
    partial_outputfm_17_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_18_ce1 : OUT STD_LOGIC;
    partial_outputfm_18_we1 : OUT STD_LOGIC;
    partial_outputfm_18_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_19_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_19_ce1 : OUT STD_LOGIC;
    partial_outputfm_19_we1 : OUT STD_LOGIC;
    partial_outputfm_19_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_20_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_20_ce1 : OUT STD_LOGIC;
    partial_outputfm_20_we1 : OUT STD_LOGIC;
    partial_outputfm_20_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_21_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_21_ce1 : OUT STD_LOGIC;
    partial_outputfm_21_we1 : OUT STD_LOGIC;
    partial_outputfm_21_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_22_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_22_ce1 : OUT STD_LOGIC;
    partial_outputfm_22_we1 : OUT STD_LOGIC;
    partial_outputfm_22_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_23_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_23_ce1 : OUT STD_LOGIC;
    partial_outputfm_23_we1 : OUT STD_LOGIC;
    partial_outputfm_23_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_24_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_24_ce1 : OUT STD_LOGIC;
    partial_outputfm_24_we1 : OUT STD_LOGIC;
    partial_outputfm_24_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_25_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_25_ce1 : OUT STD_LOGIC;
    partial_outputfm_25_we1 : OUT STD_LOGIC;
    partial_outputfm_25_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_26_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_26_ce1 : OUT STD_LOGIC;
    partial_outputfm_26_we1 : OUT STD_LOGIC;
    partial_outputfm_26_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_27_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_27_ce1 : OUT STD_LOGIC;
    partial_outputfm_27_we1 : OUT STD_LOGIC;
    partial_outputfm_27_d1 : OUT STD_LOGIC_VECTOR (26 downto 0) );
end;


architecture behav of set_out_buffer_to_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv10_3E7 : STD_LOGIC_VECTOR (9 downto 0) := "1111100111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv11_1B : STD_LOGIC_VECTOR (10 downto 0) := "00000011011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_550 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_reg_561 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_reg_572 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_675 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_589_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal c_mid2_fu_607_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_mid2_reg_684 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_fu_615_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_reg_689 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_1_fu_623_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_phi_mux_r_phi_fu_565_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_2_cast_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_595_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_666_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_666_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_666_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_666_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_666_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_666_p20 : STD_LOGIC_VECTOR (10 downto 0);

    component zhang_cnn_mac_mulcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    zhang_cnn_mac_mulcud_U752 : component zhang_cnn_mac_mulcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 5,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_666_p0,
        din1 => grp_fu_666_p1,
        din2 => grp_fu_666_p2,
        dout => grp_fu_666_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                elsif ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_reg_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c_reg_572 <= c_1_fu_623_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_reg_572 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_550 <= indvar_flatten_next_fu_589_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_550 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    r_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                r_reg_561 <= tmp_mid2_v_reg_689;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_reg_561 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                c_mid2_reg_684 <= c_mid2_fu_607_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_675 <= exitcond_flatten_fu_583_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_mid2_v_reg_689 <= tmp_mid2_v_fu_615_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten_fu_583_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (exitcond_flatten_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (exitcond_flatten_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_583_p2)
    begin
        if ((exitcond_flatten_fu_583_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_r_phi_fu_565_p4_assign_proc : process(r_reg_561, exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_689, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_block_pp0_stage0 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_r_phi_fu_565_p4 <= tmp_mid2_v_reg_689;
        else 
            ap_phi_mux_r_phi_fu_565_p4 <= r_reg_561;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_1_fu_623_p2 <= std_logic_vector(unsigned(c_mid2_fu_607_p3) + unsigned(ap_const_lv5_1));
    c_mid2_fu_607_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_601_p2(0) = '1') else 
        c_reg_572;
    exitcond_flatten_fu_583_p2 <= "1" when (indvar_flatten_reg_550 = ap_const_lv10_3E7) else "0";
    exitcond_fu_601_p2 <= "1" when (c_reg_572 = ap_const_lv5_1B) else "0";
    grp_fu_666_p0 <= grp_fu_666_p00(6 - 1 downto 0);
    grp_fu_666_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_reg_689),11));
    grp_fu_666_p1 <= ap_const_lv11_1B(6 - 1 downto 0);
    grp_fu_666_p2 <= grp_fu_666_p20(5 - 1 downto 0);
    grp_fu_666_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_mid2_reg_684),11));
    indvar_flatten_next_fu_589_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_550) + unsigned(ap_const_lv10_1));
    partial_outputfm_0_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_0_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_0_d1 <= ap_const_lv27_0;

    partial_outputfm_0_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_0_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_10_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_10_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_10_d1 <= ap_const_lv27_0;

    partial_outputfm_10_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_10_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_11_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_11_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_11_d1 <= ap_const_lv27_0;

    partial_outputfm_11_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_11_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_12_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_12_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_12_d1 <= ap_const_lv27_0;

    partial_outputfm_12_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_12_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_12_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_13_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_13_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_13_d1 <= ap_const_lv27_0;

    partial_outputfm_13_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_13_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_13_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_14_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_14_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_14_d1 <= ap_const_lv27_0;

    partial_outputfm_14_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_14_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_14_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_15_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_15_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_15_d1 <= ap_const_lv27_0;

    partial_outputfm_15_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_15_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_15_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_16_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_16_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_16_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_16_d1 <= ap_const_lv27_0;

    partial_outputfm_16_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_16_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_16_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_17_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_17_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_17_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_17_d1 <= ap_const_lv27_0;

    partial_outputfm_17_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_17_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_17_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_18_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_18_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_18_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_18_d1 <= ap_const_lv27_0;

    partial_outputfm_18_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_18_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_18_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_19_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_19_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_19_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_19_d1 <= ap_const_lv27_0;

    partial_outputfm_19_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_19_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_19_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_1_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_1_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_1_d1 <= ap_const_lv27_0;

    partial_outputfm_1_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_1_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_20_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_20_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_20_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_20_d1 <= ap_const_lv27_0;

    partial_outputfm_20_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_20_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_20_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_21_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_21_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_21_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_21_d1 <= ap_const_lv27_0;

    partial_outputfm_21_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_21_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_21_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_22_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_22_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_22_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_22_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_22_d1 <= ap_const_lv27_0;

    partial_outputfm_22_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_22_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_22_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_23_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_23_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_23_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_23_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_23_d1 <= ap_const_lv27_0;

    partial_outputfm_23_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_23_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_23_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_24_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_24_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_24_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_24_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_24_d1 <= ap_const_lv27_0;

    partial_outputfm_24_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_24_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_24_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_25_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_25_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_25_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_25_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_25_d1 <= ap_const_lv27_0;

    partial_outputfm_25_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_25_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_25_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_26_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_26_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_26_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_26_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_26_d1 <= ap_const_lv27_0;

    partial_outputfm_26_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_26_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_26_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_27_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_27_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_27_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_27_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_27_d1 <= ap_const_lv27_0;

    partial_outputfm_27_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_27_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_27_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_2_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_2_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_2_d1 <= ap_const_lv27_0;

    partial_outputfm_2_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_2_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_3_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_3_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_3_d1 <= ap_const_lv27_0;

    partial_outputfm_3_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_3_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_4_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_4_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_4_d1 <= ap_const_lv27_0;

    partial_outputfm_4_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_4_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_5_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_5_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_5_d1 <= ap_const_lv27_0;

    partial_outputfm_5_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_5_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_6_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_6_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_6_d1 <= ap_const_lv27_0;

    partial_outputfm_6_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_6_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_7_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_7_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_7_d1 <= ap_const_lv27_0;

    partial_outputfm_7_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_7_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_8_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_8_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_8_d1 <= ap_const_lv27_0;

    partial_outputfm_8_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_8_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_9_address1 <= tmp_2_cast_fu_635_p1(10 - 1 downto 0);

    partial_outputfm_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_9_ce1 <= ap_const_logic_1;
        else 
            partial_outputfm_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    partial_outputfm_9_d1 <= ap_const_lv27_0;

    partial_outputfm_9_we1_assign_proc : process(exitcond_flatten_reg_675, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_675 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            partial_outputfm_9_we1 <= ap_const_logic_1;
        else 
            partial_outputfm_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    r_1_fu_595_p2 <= std_logic_vector(unsigned(ap_phi_mux_r_phi_fu_565_p4) + unsigned(ap_const_lv6_1));
        tmp_2_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_666_p3),64));

    tmp_mid2_v_fu_615_p3 <= 
        r_1_fu_595_p2 when (exitcond_fu_601_p2(0) = '1') else 
        ap_phi_mux_r_phi_fu_565_p4;
end behav;
