-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dataflow_out_channel_1 is
port (
    m_axi_weights_AWVALID : OUT STD_LOGIC;
    m_axi_weights_AWREADY : IN STD_LOGIC;
    m_axi_weights_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_WVALID : OUT STD_LOGIC;
    m_axi_weights_WREADY : IN STD_LOGIC;
    m_axi_weights_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weights_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_WLAST : OUT STD_LOGIC;
    m_axi_weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_ARVALID : OUT STD_LOGIC;
    m_axi_weights_ARREADY : IN STD_LOGIC;
    m_axi_weights_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_RVALID : IN STD_LOGIC;
    m_axi_weights_RREADY : OUT STD_LOGIC;
    m_axi_weights_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weights_RLAST : IN STD_LOGIC;
    m_axi_weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_BVALID : IN STD_LOGIC;
    m_axi_weights_BREADY : OUT STD_LOGIC;
    m_axi_weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    weights_offset : IN STD_LOGIC_VECTOR (31 downto 0);
    image_offset : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_in_w : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_in_h : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_out_w : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_out_h : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_in_ch : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_out_ch : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_ker_w : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_ker_h : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_str_w : IN STD_LOGIC_VECTOR (31 downto 0);
    curr_layer_str_h : IN STD_LOGIC_VECTOR (31 downto 0);
    out_offset : IN STD_LOGIC_VECTOR (31 downto 0);
    to_r : IN STD_LOGIC_VECTOR (31 downto 0);
    row : IN STD_LOGIC_VECTOR (31 downto 0);
    col : IN STD_LOGIC_VECTOR (31 downto 0);
    partial_outputfm_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_0_ce0 : OUT STD_LOGIC;
    partial_outputfm_0_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_0_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_0_we0 : OUT STD_LOGIC;
    partial_outputfm_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_0_ce1 : OUT STD_LOGIC;
    partial_outputfm_0_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_0_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_0_we1 : OUT STD_LOGIC;
    partial_outputfm_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_1_ce0 : OUT STD_LOGIC;
    partial_outputfm_1_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_1_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_1_we0 : OUT STD_LOGIC;
    partial_outputfm_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_1_ce1 : OUT STD_LOGIC;
    partial_outputfm_1_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_1_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_1_we1 : OUT STD_LOGIC;
    partial_outputfm_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_2_ce0 : OUT STD_LOGIC;
    partial_outputfm_2_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_2_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_2_we0 : OUT STD_LOGIC;
    partial_outputfm_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_2_ce1 : OUT STD_LOGIC;
    partial_outputfm_2_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_2_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_2_we1 : OUT STD_LOGIC;
    partial_outputfm_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_3_ce0 : OUT STD_LOGIC;
    partial_outputfm_3_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_3_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_3_we0 : OUT STD_LOGIC;
    partial_outputfm_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_3_ce1 : OUT STD_LOGIC;
    partial_outputfm_3_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_3_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_3_we1 : OUT STD_LOGIC;
    partial_outputfm_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_4_ce0 : OUT STD_LOGIC;
    partial_outputfm_4_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_4_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_4_we0 : OUT STD_LOGIC;
    partial_outputfm_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_4_ce1 : OUT STD_LOGIC;
    partial_outputfm_4_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_4_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_4_we1 : OUT STD_LOGIC;
    partial_outputfm_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_5_ce0 : OUT STD_LOGIC;
    partial_outputfm_5_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_5_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_5_we0 : OUT STD_LOGIC;
    partial_outputfm_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_5_ce1 : OUT STD_LOGIC;
    partial_outputfm_5_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_5_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_5_we1 : OUT STD_LOGIC;
    partial_outputfm_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_6_ce0 : OUT STD_LOGIC;
    partial_outputfm_6_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_6_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_6_we0 : OUT STD_LOGIC;
    partial_outputfm_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_6_ce1 : OUT STD_LOGIC;
    partial_outputfm_6_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_6_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_6_we1 : OUT STD_LOGIC;
    partial_outputfm_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_7_ce0 : OUT STD_LOGIC;
    partial_outputfm_7_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_7_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_7_we0 : OUT STD_LOGIC;
    partial_outputfm_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_7_ce1 : OUT STD_LOGIC;
    partial_outputfm_7_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_7_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_7_we1 : OUT STD_LOGIC;
    partial_outputfm_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_8_ce0 : OUT STD_LOGIC;
    partial_outputfm_8_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_8_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_8_we0 : OUT STD_LOGIC;
    partial_outputfm_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_8_ce1 : OUT STD_LOGIC;
    partial_outputfm_8_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_8_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_8_we1 : OUT STD_LOGIC;
    partial_outputfm_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_9_ce0 : OUT STD_LOGIC;
    partial_outputfm_9_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_9_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_9_we0 : OUT STD_LOGIC;
    partial_outputfm_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_9_ce1 : OUT STD_LOGIC;
    partial_outputfm_9_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_9_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_9_we1 : OUT STD_LOGIC;
    partial_outputfm_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_10_ce0 : OUT STD_LOGIC;
    partial_outputfm_10_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_10_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_10_we0 : OUT STD_LOGIC;
    partial_outputfm_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_10_ce1 : OUT STD_LOGIC;
    partial_outputfm_10_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_10_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_10_we1 : OUT STD_LOGIC;
    partial_outputfm_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_11_ce0 : OUT STD_LOGIC;
    partial_outputfm_11_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_11_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_11_we0 : OUT STD_LOGIC;
    partial_outputfm_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_11_ce1 : OUT STD_LOGIC;
    partial_outputfm_11_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_11_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_11_we1 : OUT STD_LOGIC;
    partial_outputfm_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_12_ce0 : OUT STD_LOGIC;
    partial_outputfm_12_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_12_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_12_we0 : OUT STD_LOGIC;
    partial_outputfm_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_12_ce1 : OUT STD_LOGIC;
    partial_outputfm_12_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_12_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_12_we1 : OUT STD_LOGIC;
    partial_outputfm_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_13_ce0 : OUT STD_LOGIC;
    partial_outputfm_13_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_13_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_13_we0 : OUT STD_LOGIC;
    partial_outputfm_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_13_ce1 : OUT STD_LOGIC;
    partial_outputfm_13_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_13_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_13_we1 : OUT STD_LOGIC;
    partial_outputfm_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_14_ce0 : OUT STD_LOGIC;
    partial_outputfm_14_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_14_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_14_we0 : OUT STD_LOGIC;
    partial_outputfm_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_14_ce1 : OUT STD_LOGIC;
    partial_outputfm_14_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_14_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_14_we1 : OUT STD_LOGIC;
    partial_outputfm_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_15_ce0 : OUT STD_LOGIC;
    partial_outputfm_15_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_15_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_15_we0 : OUT STD_LOGIC;
    partial_outputfm_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_15_ce1 : OUT STD_LOGIC;
    partial_outputfm_15_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_15_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_15_we1 : OUT STD_LOGIC;
    partial_outputfm_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_16_ce0 : OUT STD_LOGIC;
    partial_outputfm_16_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_16_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_16_we0 : OUT STD_LOGIC;
    partial_outputfm_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_16_ce1 : OUT STD_LOGIC;
    partial_outputfm_16_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_16_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_16_we1 : OUT STD_LOGIC;
    partial_outputfm_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_17_ce0 : OUT STD_LOGIC;
    partial_outputfm_17_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_17_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_17_we0 : OUT STD_LOGIC;
    partial_outputfm_17_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_17_ce1 : OUT STD_LOGIC;
    partial_outputfm_17_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_17_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_17_we1 : OUT STD_LOGIC;
    partial_outputfm_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_18_ce0 : OUT STD_LOGIC;
    partial_outputfm_18_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_18_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_18_we0 : OUT STD_LOGIC;
    partial_outputfm_18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_18_ce1 : OUT STD_LOGIC;
    partial_outputfm_18_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_18_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_18_we1 : OUT STD_LOGIC;
    partial_outputfm_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_19_ce0 : OUT STD_LOGIC;
    partial_outputfm_19_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_19_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_19_we0 : OUT STD_LOGIC;
    partial_outputfm_19_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_19_ce1 : OUT STD_LOGIC;
    partial_outputfm_19_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_19_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_19_we1 : OUT STD_LOGIC;
    partial_outputfm_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_20_ce0 : OUT STD_LOGIC;
    partial_outputfm_20_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_20_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_20_we0 : OUT STD_LOGIC;
    partial_outputfm_20_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_20_ce1 : OUT STD_LOGIC;
    partial_outputfm_20_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_20_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_20_we1 : OUT STD_LOGIC;
    partial_outputfm_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_21_ce0 : OUT STD_LOGIC;
    partial_outputfm_21_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_21_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_21_we0 : OUT STD_LOGIC;
    partial_outputfm_21_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_21_ce1 : OUT STD_LOGIC;
    partial_outputfm_21_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_21_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_21_we1 : OUT STD_LOGIC;
    partial_outputfm_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_22_ce0 : OUT STD_LOGIC;
    partial_outputfm_22_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_22_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_22_we0 : OUT STD_LOGIC;
    partial_outputfm_22_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_22_ce1 : OUT STD_LOGIC;
    partial_outputfm_22_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_22_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_22_we1 : OUT STD_LOGIC;
    partial_outputfm_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_23_ce0 : OUT STD_LOGIC;
    partial_outputfm_23_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_23_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_23_we0 : OUT STD_LOGIC;
    partial_outputfm_23_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_23_ce1 : OUT STD_LOGIC;
    partial_outputfm_23_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_23_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_23_we1 : OUT STD_LOGIC;
    partial_outputfm_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_24_ce0 : OUT STD_LOGIC;
    partial_outputfm_24_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_24_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_24_we0 : OUT STD_LOGIC;
    partial_outputfm_24_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_24_ce1 : OUT STD_LOGIC;
    partial_outputfm_24_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_24_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_24_we1 : OUT STD_LOGIC;
    partial_outputfm_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_25_ce0 : OUT STD_LOGIC;
    partial_outputfm_25_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_25_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_25_we0 : OUT STD_LOGIC;
    partial_outputfm_25_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_25_ce1 : OUT STD_LOGIC;
    partial_outputfm_25_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_25_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_25_we1 : OUT STD_LOGIC;
    partial_outputfm_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_26_ce0 : OUT STD_LOGIC;
    partial_outputfm_26_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_26_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_26_we0 : OUT STD_LOGIC;
    partial_outputfm_26_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_26_ce1 : OUT STD_LOGIC;
    partial_outputfm_26_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_26_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_26_we1 : OUT STD_LOGIC;
    partial_outputfm_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_27_ce0 : OUT STD_LOGIC;
    partial_outputfm_27_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_27_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_27_we0 : OUT STD_LOGIC;
    partial_outputfm_27_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    partial_outputfm_27_ce1 : OUT STD_LOGIC;
    partial_outputfm_27_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_27_q1 : IN STD_LOGIC_VECTOR (26 downto 0);
    partial_outputfm_27_we1 : OUT STD_LOGIC;
    input_offset : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_offset_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_offset : IN STD_LOGIC_VECTOR (31 downto 0);
    quantized_multiplier : IN STD_LOGIC_VECTOR (31 downto 0);
    right_shift : IN STD_LOGIC_VECTOR (31 downto 0);
    rounding : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    curr_layer_in_ch_ap_vld : IN STD_LOGIC;
    weights_offset_ap_vld : IN STD_LOGIC;
    image_offset_ap_vld : IN STD_LOGIC;
    curr_layer_in_w_ap_vld : IN STD_LOGIC;
    curr_layer_in_h_ap_vld : IN STD_LOGIC;
    curr_layer_out_w_ap_vld : IN STD_LOGIC;
    curr_layer_out_h_ap_vld : IN STD_LOGIC;
    curr_layer_out_ch_ap_vld : IN STD_LOGIC;
    curr_layer_ker_w_ap_vld : IN STD_LOGIC;
    curr_layer_ker_h_ap_vld : IN STD_LOGIC;
    curr_layer_str_w_ap_vld : IN STD_LOGIC;
    curr_layer_str_h_ap_vld : IN STD_LOGIC;
    to_r_ap_vld : IN STD_LOGIC;
    row_ap_vld : IN STD_LOGIC;
    col_ap_vld : IN STD_LOGIC;
    input_offset_ap_vld : IN STD_LOGIC;
    weights_offset_9_ap_vld : IN STD_LOGIC;
    output_offset_ap_vld : IN STD_LOGIC;
    quantized_multiplier_ap_vld : IN STD_LOGIC;
    right_shift_ap_vld : IN STD_LOGIC;
    out_offset_ap_vld : IN STD_LOGIC;
    rounding_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of dataflow_out_channel_1 is 
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal dataflow_out_channel_U0_ap_start : STD_LOGIC;
    signal dataflow_out_channel_U0_ap_done : STD_LOGIC;
    signal dataflow_out_channel_U0_ap_continue : STD_LOGIC;
    signal dataflow_out_channel_U0_ap_idle : STD_LOGIC;
    signal dataflow_out_channel_U0_ap_ready : STD_LOGIC;
    signal dataflow_out_channel_U0_m_axi_weights_AWVALID : STD_LOGIC;
    signal dataflow_out_channel_U0_m_axi_weights_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_WVALID : STD_LOGIC;
    signal dataflow_out_channel_U0_m_axi_weights_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_WLAST : STD_LOGIC;
    signal dataflow_out_channel_U0_m_axi_weights_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARVALID : STD_LOGIC;
    signal dataflow_out_channel_U0_m_axi_weights_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_out_channel_U0_m_axi_weights_RREADY : STD_LOGIC;
    signal dataflow_out_channel_U0_m_axi_weights_BREADY : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_0_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_0_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_0_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_0_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_1_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_1_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_1_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_1_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_2_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_2_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_2_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_2_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_3_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_3_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_3_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_3_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_4_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_4_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_4_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_4_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_5_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_5_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_5_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_5_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_6_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_6_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_6_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_6_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_7_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_7_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_7_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_7_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_8_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_8_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_8_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_8_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_8_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_9_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_9_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_9_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_9_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_9_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_10_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_10_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_10_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_10_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_10_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_11_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_11_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_11_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_11_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_11_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_12_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_12_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_12_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_12_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_12_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_12_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_13_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_13_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_13_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_13_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_13_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_14_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_14_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_14_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_14_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_14_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_14_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_15_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_15_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_15_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_15_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_15_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_15_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_16_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_16_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_16_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_16_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_16_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_16_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_17_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_17_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_17_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_17_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_17_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_17_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_18_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_18_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_18_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_18_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_18_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_19_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_19_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_19_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_19_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_19_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_19_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_20_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_20_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_20_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_20_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_20_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_20_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_21_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_21_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_21_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_21_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_21_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_21_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_22_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_22_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_22_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_22_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_22_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_22_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_23_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_23_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_23_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_23_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_23_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_23_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_24_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_24_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_24_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_24_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_24_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_24_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_25_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_25_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_25_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_25_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_25_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_25_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_26_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_26_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_26_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_26_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_26_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_26_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_27_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_27_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_27_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_partial_outputfm_27_ce1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_27_we1 : STD_LOGIC;
    signal dataflow_out_channel_U0_partial_outputfm_27_d1 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_curr_layer_out_w_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_curr_layer_out_w_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_curr_layer_out_h_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_curr_layer_out_h_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_curr_layer_out_ch_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_curr_layer_out_ch_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_to_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_to_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_row_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_row_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_col_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_col_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_output_offset_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_output_offset_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_quantized_multiplier_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_quantized_multiplier_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_right_shift_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_right_shift_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_out_offset_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_out_channel_U0_out_offset_out_write : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_0_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_0_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_0_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_1_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_1_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_1_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_2_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_2_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_2_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_3_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_3_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_3_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_4_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_4_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_4_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_5_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_5_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_5_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_6_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_6_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_6_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_7_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_7_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_7_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_8_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_8_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_8_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_9_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_9_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_9_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_10_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_10_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_10_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_11_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_11_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_11_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_12_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_12_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_12_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_12_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_13_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_13_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_13_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_14_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_14_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_14_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_14_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_15_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_15_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_15_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_15_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_16_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_16_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_16_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_16_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_17_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_17_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_17_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_17_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_18_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_18_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_18_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_19_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_19_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_19_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_19_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_20_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_20_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_20_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_20_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_21_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_21_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_21_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_21_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_22_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_22_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_22_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_22_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_23_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_23_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_23_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_23_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_24_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_24_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_24_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_24_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_25_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_25_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_25_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_25_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_26_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_26_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_26_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_26_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal dataflow_out_channel_U0_outputfm_27_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dataflow_out_channel_U0_outputfm_27_ce0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_27_we0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_27_d0 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_channel_done_outputfm_27 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_27_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_27 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_27 : STD_LOGIC;
    signal ap_channel_done_outputfm_26 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_26_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_26 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_26 : STD_LOGIC;
    signal ap_channel_done_outputfm_25 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_25_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_25 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_25 : STD_LOGIC;
    signal ap_channel_done_outputfm_24 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_24_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_24 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_24 : STD_LOGIC;
    signal ap_channel_done_outputfm_23 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_23_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_23 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_23 : STD_LOGIC;
    signal ap_channel_done_outputfm_22 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_22_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_22 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_22 : STD_LOGIC;
    signal ap_channel_done_outputfm_21 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_21_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_21 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_21 : STD_LOGIC;
    signal ap_channel_done_outputfm_20 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_20_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_20 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_20 : STD_LOGIC;
    signal ap_channel_done_outputfm_19 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_19_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_19 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_19 : STD_LOGIC;
    signal ap_channel_done_outputfm_18 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_18_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_18 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_18 : STD_LOGIC;
    signal ap_channel_done_outputfm_17 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_17_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_17 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_17 : STD_LOGIC;
    signal ap_channel_done_outputfm_16 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_16_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_16 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_16 : STD_LOGIC;
    signal ap_channel_done_outputfm_15 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_15 : STD_LOGIC;
    signal ap_channel_done_outputfm_14 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_14 : STD_LOGIC;
    signal ap_channel_done_outputfm_13 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_13 : STD_LOGIC;
    signal ap_channel_done_outputfm_12 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_12 : STD_LOGIC;
    signal ap_channel_done_outputfm_11 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_11 : STD_LOGIC;
    signal ap_channel_done_outputfm_10 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_10 : STD_LOGIC;
    signal ap_channel_done_outputfm_9 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_9 : STD_LOGIC;
    signal ap_channel_done_outputfm_8 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_8 : STD_LOGIC;
    signal ap_channel_done_outputfm_7 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_7 : STD_LOGIC;
    signal ap_channel_done_outputfm_6 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_6 : STD_LOGIC;
    signal ap_channel_done_outputfm_5 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_5 : STD_LOGIC;
    signal ap_channel_done_outputfm_4 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_4 : STD_LOGIC;
    signal ap_channel_done_outputfm_3 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_3 : STD_LOGIC;
    signal ap_channel_done_outputfm_2 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_2 : STD_LOGIC;
    signal ap_channel_done_outputfm_1 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_1 : STD_LOGIC;
    signal ap_channel_done_outputfm_0 : STD_LOGIC;
    signal dataflow_out_channel_U0_outputfm_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_outputfm_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_outputfm_0 : STD_LOGIC;
    signal write_output_U0_ap_start : STD_LOGIC;
    signal write_output_U0_ap_done : STD_LOGIC;
    signal write_output_U0_ap_continue : STD_LOGIC;
    signal write_output_U0_ap_idle : STD_LOGIC;
    signal write_output_U0_ap_ready : STD_LOGIC;
    signal write_output_U0_curr_layer_out_w_read : STD_LOGIC;
    signal write_output_U0_curr_layer_out_h_read : STD_LOGIC;
    signal write_output_U0_curr_layer_out_ch_read : STD_LOGIC;
    signal write_output_U0_m_axi_out_r_AWVALID : STD_LOGIC;
    signal write_output_U0_m_axi_out_r_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal write_output_U0_m_axi_out_r_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal write_output_U0_m_axi_out_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal write_output_U0_m_axi_out_r_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal write_output_U0_m_axi_out_r_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal write_output_U0_m_axi_out_r_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal write_output_U0_m_axi_out_r_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal write_output_U0_m_axi_out_r_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal write_output_U0_m_axi_out_r_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal write_output_U0_m_axi_out_r_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal write_output_U0_m_axi_out_r_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal write_output_U0_m_axi_out_r_WVALID : STD_LOGIC;
    signal write_output_U0_m_axi_out_r_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal write_output_U0_m_axi_out_r_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal write_output_U0_m_axi_out_r_WLAST : STD_LOGIC;
    signal write_output_U0_m_axi_out_r_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal write_output_U0_m_axi_out_r_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal write_output_U0_m_axi_out_r_ARVALID : STD_LOGIC;
    signal write_output_U0_m_axi_out_r_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal write_output_U0_m_axi_out_r_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal write_output_U0_m_axi_out_r_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal write_output_U0_m_axi_out_r_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal write_output_U0_m_axi_out_r_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal write_output_U0_m_axi_out_r_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal write_output_U0_m_axi_out_r_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal write_output_U0_m_axi_out_r_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal write_output_U0_m_axi_out_r_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal write_output_U0_m_axi_out_r_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal write_output_U0_m_axi_out_r_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal write_output_U0_m_axi_out_r_RREADY : STD_LOGIC;
    signal write_output_U0_m_axi_out_r_BREADY : STD_LOGIC;
    signal write_output_U0_out_offset_read : STD_LOGIC;
    signal write_output_U0_to_r_read : STD_LOGIC;
    signal write_output_U0_row_read : STD_LOGIC;
    signal write_output_U0_col_read : STD_LOGIC;
    signal write_output_U0_output_offset_read : STD_LOGIC;
    signal write_output_U0_quantized_multiplier_read : STD_LOGIC;
    signal write_output_U0_right_shift_read : STD_LOGIC;
    signal write_output_U0_outputfm_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_0_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_1_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_10_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_11_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_12_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_12_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_13_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_14_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_14_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_15_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_15_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_16_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_16_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_17_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_17_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_18_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_19_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_19_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_2_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_20_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_20_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_21_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_21_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_22_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_22_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_23_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_23_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_24_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_24_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_25_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_25_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_26_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_26_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_27_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_27_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_3_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_4_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_5_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_6_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_7_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_8_ce0 : STD_LOGIC;
    signal write_output_U0_outputfm_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal write_output_U0_outputfm_9_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal outputfm_0_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_0_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_0_i_full_n : STD_LOGIC;
    signal outputfm_0_t_empty_n : STD_LOGIC;
    signal outputfm_1_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_1_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_1_i_full_n : STD_LOGIC;
    signal outputfm_1_t_empty_n : STD_LOGIC;
    signal outputfm_2_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_2_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_2_i_full_n : STD_LOGIC;
    signal outputfm_2_t_empty_n : STD_LOGIC;
    signal outputfm_3_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_3_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_3_i_full_n : STD_LOGIC;
    signal outputfm_3_t_empty_n : STD_LOGIC;
    signal outputfm_4_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_4_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_4_i_full_n : STD_LOGIC;
    signal outputfm_4_t_empty_n : STD_LOGIC;
    signal outputfm_5_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_5_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_5_i_full_n : STD_LOGIC;
    signal outputfm_5_t_empty_n : STD_LOGIC;
    signal outputfm_6_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_6_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_6_i_full_n : STD_LOGIC;
    signal outputfm_6_t_empty_n : STD_LOGIC;
    signal outputfm_7_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_7_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_7_i_full_n : STD_LOGIC;
    signal outputfm_7_t_empty_n : STD_LOGIC;
    signal outputfm_8_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_8_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_8_i_full_n : STD_LOGIC;
    signal outputfm_8_t_empty_n : STD_LOGIC;
    signal outputfm_9_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_9_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_9_i_full_n : STD_LOGIC;
    signal outputfm_9_t_empty_n : STD_LOGIC;
    signal outputfm_10_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_10_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_10_i_full_n : STD_LOGIC;
    signal outputfm_10_t_empty_n : STD_LOGIC;
    signal outputfm_11_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_11_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_11_i_full_n : STD_LOGIC;
    signal outputfm_11_t_empty_n : STD_LOGIC;
    signal outputfm_12_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_12_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_12_i_full_n : STD_LOGIC;
    signal outputfm_12_t_empty_n : STD_LOGIC;
    signal outputfm_13_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_13_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_13_i_full_n : STD_LOGIC;
    signal outputfm_13_t_empty_n : STD_LOGIC;
    signal outputfm_14_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_14_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_14_i_full_n : STD_LOGIC;
    signal outputfm_14_t_empty_n : STD_LOGIC;
    signal outputfm_15_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_15_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_15_i_full_n : STD_LOGIC;
    signal outputfm_15_t_empty_n : STD_LOGIC;
    signal outputfm_16_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_16_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_16_i_full_n : STD_LOGIC;
    signal outputfm_16_t_empty_n : STD_LOGIC;
    signal outputfm_17_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_17_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_17_i_full_n : STD_LOGIC;
    signal outputfm_17_t_empty_n : STD_LOGIC;
    signal outputfm_18_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_18_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_18_i_full_n : STD_LOGIC;
    signal outputfm_18_t_empty_n : STD_LOGIC;
    signal outputfm_19_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_19_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_19_i_full_n : STD_LOGIC;
    signal outputfm_19_t_empty_n : STD_LOGIC;
    signal outputfm_20_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_20_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_20_i_full_n : STD_LOGIC;
    signal outputfm_20_t_empty_n : STD_LOGIC;
    signal outputfm_21_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_21_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_21_i_full_n : STD_LOGIC;
    signal outputfm_21_t_empty_n : STD_LOGIC;
    signal outputfm_22_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_22_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_22_i_full_n : STD_LOGIC;
    signal outputfm_22_t_empty_n : STD_LOGIC;
    signal outputfm_23_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_23_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_23_i_full_n : STD_LOGIC;
    signal outputfm_23_t_empty_n : STD_LOGIC;
    signal outputfm_24_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_24_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_24_i_full_n : STD_LOGIC;
    signal outputfm_24_t_empty_n : STD_LOGIC;
    signal outputfm_25_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_25_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_25_i_full_n : STD_LOGIC;
    signal outputfm_25_t_empty_n : STD_LOGIC;
    signal outputfm_26_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_26_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_26_i_full_n : STD_LOGIC;
    signal outputfm_26_t_empty_n : STD_LOGIC;
    signal outputfm_27_i_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_27_t_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal outputfm_27_i_full_n : STD_LOGIC;
    signal outputfm_27_t_empty_n : STD_LOGIC;
    signal curr_layer_out_w_c_full_n : STD_LOGIC;
    signal curr_layer_out_w_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal curr_layer_out_w_c_empty_n : STD_LOGIC;
    signal curr_layer_out_h_c_full_n : STD_LOGIC;
    signal curr_layer_out_h_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal curr_layer_out_h_c_empty_n : STD_LOGIC;
    signal curr_layer_out_ch_c_full_n : STD_LOGIC;
    signal curr_layer_out_ch_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal curr_layer_out_ch_c_empty_n : STD_LOGIC;
    signal to_c_full_n : STD_LOGIC;
    signal to_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal to_c_empty_n : STD_LOGIC;
    signal row_c_full_n : STD_LOGIC;
    signal row_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal row_c_empty_n : STD_LOGIC;
    signal col_c_full_n : STD_LOGIC;
    signal col_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal col_c_empty_n : STD_LOGIC;
    signal output_offset_c_full_n : STD_LOGIC;
    signal output_offset_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal output_offset_c_empty_n : STD_LOGIC;
    signal quantized_multiplier_2_full_n : STD_LOGIC;
    signal quantized_multiplier_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_multiplier_2_empty_n : STD_LOGIC;
    signal right_shift_c_full_n : STD_LOGIC;
    signal right_shift_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal right_shift_c_empty_n : STD_LOGIC;
    signal out_offset_c_full_n : STD_LOGIC;
    signal out_offset_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal out_offset_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_reg_write_output_U0_ap_done : STD_LOGIC := '0';
    signal ap_reg_dataflow_out_channel_U0_ap_done : STD_LOGIC := '0';
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_dataflow_out_channel_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_dataflow_out_channel_U0_ap_ready : STD_LOGIC;
    signal dataflow_out_channel_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_write_output_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_write_output_U0_ap_ready : STD_LOGIC;
    signal write_output_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal dataflow_out_channel_U0_start_full_n : STD_LOGIC;
    signal dataflow_out_channel_U0_start_write : STD_LOGIC;
    signal write_output_U0_start_full_n : STD_LOGIC;
    signal write_output_U0_start_write : STD_LOGIC;

    component dataflow_out_channel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        curr_layer_in_ch : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_AWVALID : OUT STD_LOGIC;
        m_axi_weights_AWREADY : IN STD_LOGIC;
        m_axi_weights_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_WVALID : OUT STD_LOGIC;
        m_axi_weights_WREADY : IN STD_LOGIC;
        m_axi_weights_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_weights_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_WLAST : OUT STD_LOGIC;
        m_axi_weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_ARVALID : OUT STD_LOGIC;
        m_axi_weights_ARREADY : IN STD_LOGIC;
        m_axi_weights_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_RVALID : IN STD_LOGIC;
        m_axi_weights_RREADY : OUT STD_LOGIC;
        m_axi_weights_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_weights_RLAST : IN STD_LOGIC;
        m_axi_weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_BVALID : IN STD_LOGIC;
        m_axi_weights_BREADY : OUT STD_LOGIC;
        m_axi_weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        weights_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        image_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_in_w : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_in_h : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_w : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_h : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_ch : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_ker_w : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_ker_h : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_str_w : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_str_h : IN STD_LOGIC_VECTOR (31 downto 0);
        to_r : IN STD_LOGIC_VECTOR (31 downto 0);
        row : IN STD_LOGIC_VECTOR (31 downto 0);
        col : IN STD_LOGIC_VECTOR (31 downto 0);
        partial_outputfm_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_0_ce0 : OUT STD_LOGIC;
        partial_outputfm_0_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_0_ce1 : OUT STD_LOGIC;
        partial_outputfm_0_we1 : OUT STD_LOGIC;
        partial_outputfm_0_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_1_ce0 : OUT STD_LOGIC;
        partial_outputfm_1_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_1_ce1 : OUT STD_LOGIC;
        partial_outputfm_1_we1 : OUT STD_LOGIC;
        partial_outputfm_1_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_2_ce0 : OUT STD_LOGIC;
        partial_outputfm_2_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_2_ce1 : OUT STD_LOGIC;
        partial_outputfm_2_we1 : OUT STD_LOGIC;
        partial_outputfm_2_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_3_ce0 : OUT STD_LOGIC;
        partial_outputfm_3_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_3_ce1 : OUT STD_LOGIC;
        partial_outputfm_3_we1 : OUT STD_LOGIC;
        partial_outputfm_3_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_4_ce0 : OUT STD_LOGIC;
        partial_outputfm_4_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_4_ce1 : OUT STD_LOGIC;
        partial_outputfm_4_we1 : OUT STD_LOGIC;
        partial_outputfm_4_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_5_ce0 : OUT STD_LOGIC;
        partial_outputfm_5_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_5_ce1 : OUT STD_LOGIC;
        partial_outputfm_5_we1 : OUT STD_LOGIC;
        partial_outputfm_5_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_6_ce0 : OUT STD_LOGIC;
        partial_outputfm_6_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_6_ce1 : OUT STD_LOGIC;
        partial_outputfm_6_we1 : OUT STD_LOGIC;
        partial_outputfm_6_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_7_ce0 : OUT STD_LOGIC;
        partial_outputfm_7_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_7_ce1 : OUT STD_LOGIC;
        partial_outputfm_7_we1 : OUT STD_LOGIC;
        partial_outputfm_7_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_8_ce0 : OUT STD_LOGIC;
        partial_outputfm_8_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_8_ce1 : OUT STD_LOGIC;
        partial_outputfm_8_we1 : OUT STD_LOGIC;
        partial_outputfm_8_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_9_ce0 : OUT STD_LOGIC;
        partial_outputfm_9_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_9_ce1 : OUT STD_LOGIC;
        partial_outputfm_9_we1 : OUT STD_LOGIC;
        partial_outputfm_9_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_10_ce0 : OUT STD_LOGIC;
        partial_outputfm_10_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_10_ce1 : OUT STD_LOGIC;
        partial_outputfm_10_we1 : OUT STD_LOGIC;
        partial_outputfm_10_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_11_ce0 : OUT STD_LOGIC;
        partial_outputfm_11_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_11_ce1 : OUT STD_LOGIC;
        partial_outputfm_11_we1 : OUT STD_LOGIC;
        partial_outputfm_11_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_12_ce0 : OUT STD_LOGIC;
        partial_outputfm_12_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_12_ce1 : OUT STD_LOGIC;
        partial_outputfm_12_we1 : OUT STD_LOGIC;
        partial_outputfm_12_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_13_ce0 : OUT STD_LOGIC;
        partial_outputfm_13_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_13_ce1 : OUT STD_LOGIC;
        partial_outputfm_13_we1 : OUT STD_LOGIC;
        partial_outputfm_13_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_14_ce0 : OUT STD_LOGIC;
        partial_outputfm_14_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_14_ce1 : OUT STD_LOGIC;
        partial_outputfm_14_we1 : OUT STD_LOGIC;
        partial_outputfm_14_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_15_ce0 : OUT STD_LOGIC;
        partial_outputfm_15_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_15_ce1 : OUT STD_LOGIC;
        partial_outputfm_15_we1 : OUT STD_LOGIC;
        partial_outputfm_15_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_16_ce0 : OUT STD_LOGIC;
        partial_outputfm_16_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_16_ce1 : OUT STD_LOGIC;
        partial_outputfm_16_we1 : OUT STD_LOGIC;
        partial_outputfm_16_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_17_ce0 : OUT STD_LOGIC;
        partial_outputfm_17_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_17_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_17_ce1 : OUT STD_LOGIC;
        partial_outputfm_17_we1 : OUT STD_LOGIC;
        partial_outputfm_17_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_18_ce0 : OUT STD_LOGIC;
        partial_outputfm_18_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_18_ce1 : OUT STD_LOGIC;
        partial_outputfm_18_we1 : OUT STD_LOGIC;
        partial_outputfm_18_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_19_ce0 : OUT STD_LOGIC;
        partial_outputfm_19_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_19_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_19_ce1 : OUT STD_LOGIC;
        partial_outputfm_19_we1 : OUT STD_LOGIC;
        partial_outputfm_19_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_20_ce0 : OUT STD_LOGIC;
        partial_outputfm_20_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_20_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_20_ce1 : OUT STD_LOGIC;
        partial_outputfm_20_we1 : OUT STD_LOGIC;
        partial_outputfm_20_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_21_ce0 : OUT STD_LOGIC;
        partial_outputfm_21_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_21_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_21_ce1 : OUT STD_LOGIC;
        partial_outputfm_21_we1 : OUT STD_LOGIC;
        partial_outputfm_21_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_22_ce0 : OUT STD_LOGIC;
        partial_outputfm_22_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_22_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_22_ce1 : OUT STD_LOGIC;
        partial_outputfm_22_we1 : OUT STD_LOGIC;
        partial_outputfm_22_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_23_ce0 : OUT STD_LOGIC;
        partial_outputfm_23_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_23_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_23_ce1 : OUT STD_LOGIC;
        partial_outputfm_23_we1 : OUT STD_LOGIC;
        partial_outputfm_23_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_24_ce0 : OUT STD_LOGIC;
        partial_outputfm_24_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_24_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_24_ce1 : OUT STD_LOGIC;
        partial_outputfm_24_we1 : OUT STD_LOGIC;
        partial_outputfm_24_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_25_ce0 : OUT STD_LOGIC;
        partial_outputfm_25_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_25_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_25_ce1 : OUT STD_LOGIC;
        partial_outputfm_25_we1 : OUT STD_LOGIC;
        partial_outputfm_25_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_26_ce0 : OUT STD_LOGIC;
        partial_outputfm_26_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_26_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_26_ce1 : OUT STD_LOGIC;
        partial_outputfm_26_we1 : OUT STD_LOGIC;
        partial_outputfm_26_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_27_ce0 : OUT STD_LOGIC;
        partial_outputfm_27_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        partial_outputfm_27_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        partial_outputfm_27_ce1 : OUT STD_LOGIC;
        partial_outputfm_27_we1 : OUT STD_LOGIC;
        partial_outputfm_27_d1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        input_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_offset_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        quantized_multiplier : IN STD_LOGIC_VECTOR (31 downto 0);
        right_shift : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_w_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_w_out_full_n : IN STD_LOGIC;
        curr_layer_out_w_out_write : OUT STD_LOGIC;
        curr_layer_out_h_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_h_out_full_n : IN STD_LOGIC;
        curr_layer_out_h_out_write : OUT STD_LOGIC;
        curr_layer_out_ch_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_ch_out_full_n : IN STD_LOGIC;
        curr_layer_out_ch_out_write : OUT STD_LOGIC;
        to_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        to_out_full_n : IN STD_LOGIC;
        to_out_write : OUT STD_LOGIC;
        row_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        row_out_full_n : IN STD_LOGIC;
        row_out_write : OUT STD_LOGIC;
        col_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        col_out_full_n : IN STD_LOGIC;
        col_out_write : OUT STD_LOGIC;
        output_offset_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_offset_out_full_n : IN STD_LOGIC;
        output_offset_out_write : OUT STD_LOGIC;
        quantized_multiplier_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        quantized_multiplier_out_full_n : IN STD_LOGIC;
        quantized_multiplier_out_write : OUT STD_LOGIC;
        right_shift_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        right_shift_out_full_n : IN STD_LOGIC;
        right_shift_out_write : OUT STD_LOGIC;
        out_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        out_offset_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_offset_out_full_n : IN STD_LOGIC;
        out_offset_out_write : OUT STD_LOGIC;
        outputfm_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_0_ce0 : OUT STD_LOGIC;
        outputfm_0_we0 : OUT STD_LOGIC;
        outputfm_0_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_1_ce0 : OUT STD_LOGIC;
        outputfm_1_we0 : OUT STD_LOGIC;
        outputfm_1_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_2_ce0 : OUT STD_LOGIC;
        outputfm_2_we0 : OUT STD_LOGIC;
        outputfm_2_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_3_ce0 : OUT STD_LOGIC;
        outputfm_3_we0 : OUT STD_LOGIC;
        outputfm_3_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_4_ce0 : OUT STD_LOGIC;
        outputfm_4_we0 : OUT STD_LOGIC;
        outputfm_4_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_5_ce0 : OUT STD_LOGIC;
        outputfm_5_we0 : OUT STD_LOGIC;
        outputfm_5_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_6_ce0 : OUT STD_LOGIC;
        outputfm_6_we0 : OUT STD_LOGIC;
        outputfm_6_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_7_ce0 : OUT STD_LOGIC;
        outputfm_7_we0 : OUT STD_LOGIC;
        outputfm_7_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_8_ce0 : OUT STD_LOGIC;
        outputfm_8_we0 : OUT STD_LOGIC;
        outputfm_8_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_9_ce0 : OUT STD_LOGIC;
        outputfm_9_we0 : OUT STD_LOGIC;
        outputfm_9_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_10_ce0 : OUT STD_LOGIC;
        outputfm_10_we0 : OUT STD_LOGIC;
        outputfm_10_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_11_ce0 : OUT STD_LOGIC;
        outputfm_11_we0 : OUT STD_LOGIC;
        outputfm_11_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_12_ce0 : OUT STD_LOGIC;
        outputfm_12_we0 : OUT STD_LOGIC;
        outputfm_12_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_13_ce0 : OUT STD_LOGIC;
        outputfm_13_we0 : OUT STD_LOGIC;
        outputfm_13_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_14_ce0 : OUT STD_LOGIC;
        outputfm_14_we0 : OUT STD_LOGIC;
        outputfm_14_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_15_ce0 : OUT STD_LOGIC;
        outputfm_15_we0 : OUT STD_LOGIC;
        outputfm_15_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_16_ce0 : OUT STD_LOGIC;
        outputfm_16_we0 : OUT STD_LOGIC;
        outputfm_16_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_17_ce0 : OUT STD_LOGIC;
        outputfm_17_we0 : OUT STD_LOGIC;
        outputfm_17_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_18_ce0 : OUT STD_LOGIC;
        outputfm_18_we0 : OUT STD_LOGIC;
        outputfm_18_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_19_ce0 : OUT STD_LOGIC;
        outputfm_19_we0 : OUT STD_LOGIC;
        outputfm_19_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_20_ce0 : OUT STD_LOGIC;
        outputfm_20_we0 : OUT STD_LOGIC;
        outputfm_20_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_21_ce0 : OUT STD_LOGIC;
        outputfm_21_we0 : OUT STD_LOGIC;
        outputfm_21_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_22_ce0 : OUT STD_LOGIC;
        outputfm_22_we0 : OUT STD_LOGIC;
        outputfm_22_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_23_ce0 : OUT STD_LOGIC;
        outputfm_23_we0 : OUT STD_LOGIC;
        outputfm_23_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_24_ce0 : OUT STD_LOGIC;
        outputfm_24_we0 : OUT STD_LOGIC;
        outputfm_24_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_25_ce0 : OUT STD_LOGIC;
        outputfm_25_we0 : OUT STD_LOGIC;
        outputfm_25_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_26_ce0 : OUT STD_LOGIC;
        outputfm_26_we0 : OUT STD_LOGIC;
        outputfm_26_d0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        outputfm_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_27_ce0 : OUT STD_LOGIC;
        outputfm_27_we0 : OUT STD_LOGIC;
        outputfm_27_d0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component write_output IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        curr_layer_out_w_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_w_empty_n : IN STD_LOGIC;
        curr_layer_out_w_read : OUT STD_LOGIC;
        curr_layer_out_h_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_h_empty_n : IN STD_LOGIC;
        curr_layer_out_h_read : OUT STD_LOGIC;
        curr_layer_out_ch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        curr_layer_out_ch_empty_n : IN STD_LOGIC;
        curr_layer_out_ch_read : OUT STD_LOGIC;
        m_axi_out_r_AWVALID : OUT STD_LOGIC;
        m_axi_out_r_AWREADY : IN STD_LOGIC;
        m_axi_out_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_WVALID : OUT STD_LOGIC;
        m_axi_out_r_WREADY : IN STD_LOGIC;
        m_axi_out_r_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_out_r_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_WLAST : OUT STD_LOGIC;
        m_axi_out_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_ARVALID : OUT STD_LOGIC;
        m_axi_out_r_ARREADY : IN STD_LOGIC;
        m_axi_out_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_RVALID : IN STD_LOGIC;
        m_axi_out_r_RREADY : OUT STD_LOGIC;
        m_axi_out_r_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_out_r_RLAST : IN STD_LOGIC;
        m_axi_out_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_r_BVALID : IN STD_LOGIC;
        m_axi_out_r_BREADY : OUT STD_LOGIC;
        m_axi_out_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        out_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        out_offset_empty_n : IN STD_LOGIC;
        out_offset_read : OUT STD_LOGIC;
        to_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        to_r_empty_n : IN STD_LOGIC;
        to_r_read : OUT STD_LOGIC;
        row_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        row_empty_n : IN STD_LOGIC;
        row_read : OUT STD_LOGIC;
        col_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        col_empty_n : IN STD_LOGIC;
        col_read : OUT STD_LOGIC;
        output_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        output_offset_empty_n : IN STD_LOGIC;
        output_offset_read : OUT STD_LOGIC;
        quantized_multiplier_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        quantized_multiplier_empty_n : IN STD_LOGIC;
        quantized_multiplier_read : OUT STD_LOGIC;
        right_shift_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        right_shift_empty_n : IN STD_LOGIC;
        right_shift_read : OUT STD_LOGIC;
        outputfm_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_0_ce0 : OUT STD_LOGIC;
        outputfm_0_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_1_ce0 : OUT STD_LOGIC;
        outputfm_1_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_10_ce0 : OUT STD_LOGIC;
        outputfm_10_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_11_ce0 : OUT STD_LOGIC;
        outputfm_11_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_12_ce0 : OUT STD_LOGIC;
        outputfm_12_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_13_ce0 : OUT STD_LOGIC;
        outputfm_13_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_14_ce0 : OUT STD_LOGIC;
        outputfm_14_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_15_ce0 : OUT STD_LOGIC;
        outputfm_15_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_16_ce0 : OUT STD_LOGIC;
        outputfm_16_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_17_ce0 : OUT STD_LOGIC;
        outputfm_17_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_18_ce0 : OUT STD_LOGIC;
        outputfm_18_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_19_ce0 : OUT STD_LOGIC;
        outputfm_19_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_2_ce0 : OUT STD_LOGIC;
        outputfm_2_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_20_ce0 : OUT STD_LOGIC;
        outputfm_20_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_21_ce0 : OUT STD_LOGIC;
        outputfm_21_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_22_ce0 : OUT STD_LOGIC;
        outputfm_22_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_23_ce0 : OUT STD_LOGIC;
        outputfm_23_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_24_ce0 : OUT STD_LOGIC;
        outputfm_24_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_25_ce0 : OUT STD_LOGIC;
        outputfm_25_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_26_ce0 : OUT STD_LOGIC;
        outputfm_26_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_27_ce0 : OUT STD_LOGIC;
        outputfm_27_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_3_ce0 : OUT STD_LOGIC;
        outputfm_3_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_4_ce0 : OUT STD_LOGIC;
        outputfm_4_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_5_ce0 : OUT STD_LOGIC;
        outputfm_5_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_6_ce0 : OUT STD_LOGIC;
        outputfm_6_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_7_ce0 : OUT STD_LOGIC;
        outputfm_7_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_8_ce0 : OUT STD_LOGIC;
        outputfm_8_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        outputfm_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        outputfm_9_ce0 : OUT STD_LOGIC;
        outputfm_9_q0 : IN STD_LOGIC_VECTOR (26 downto 0);
        rounding : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dataflow_out_chanbIp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (26 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (26 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d1_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    dataflow_out_channel_U0 : component dataflow_out_channel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dataflow_out_channel_U0_ap_start,
        ap_done => dataflow_out_channel_U0_ap_done,
        ap_continue => dataflow_out_channel_U0_ap_continue,
        ap_idle => dataflow_out_channel_U0_ap_idle,
        ap_ready => dataflow_out_channel_U0_ap_ready,
        curr_layer_in_ch => curr_layer_in_ch,
        m_axi_weights_AWVALID => dataflow_out_channel_U0_m_axi_weights_AWVALID,
        m_axi_weights_AWREADY => ap_const_logic_0,
        m_axi_weights_AWADDR => dataflow_out_channel_U0_m_axi_weights_AWADDR,
        m_axi_weights_AWID => dataflow_out_channel_U0_m_axi_weights_AWID,
        m_axi_weights_AWLEN => dataflow_out_channel_U0_m_axi_weights_AWLEN,
        m_axi_weights_AWSIZE => dataflow_out_channel_U0_m_axi_weights_AWSIZE,
        m_axi_weights_AWBURST => dataflow_out_channel_U0_m_axi_weights_AWBURST,
        m_axi_weights_AWLOCK => dataflow_out_channel_U0_m_axi_weights_AWLOCK,
        m_axi_weights_AWCACHE => dataflow_out_channel_U0_m_axi_weights_AWCACHE,
        m_axi_weights_AWPROT => dataflow_out_channel_U0_m_axi_weights_AWPROT,
        m_axi_weights_AWQOS => dataflow_out_channel_U0_m_axi_weights_AWQOS,
        m_axi_weights_AWREGION => dataflow_out_channel_U0_m_axi_weights_AWREGION,
        m_axi_weights_AWUSER => dataflow_out_channel_U0_m_axi_weights_AWUSER,
        m_axi_weights_WVALID => dataflow_out_channel_U0_m_axi_weights_WVALID,
        m_axi_weights_WREADY => ap_const_logic_0,
        m_axi_weights_WDATA => dataflow_out_channel_U0_m_axi_weights_WDATA,
        m_axi_weights_WSTRB => dataflow_out_channel_U0_m_axi_weights_WSTRB,
        m_axi_weights_WLAST => dataflow_out_channel_U0_m_axi_weights_WLAST,
        m_axi_weights_WID => dataflow_out_channel_U0_m_axi_weights_WID,
        m_axi_weights_WUSER => dataflow_out_channel_U0_m_axi_weights_WUSER,
        m_axi_weights_ARVALID => dataflow_out_channel_U0_m_axi_weights_ARVALID,
        m_axi_weights_ARREADY => m_axi_weights_ARREADY,
        m_axi_weights_ARADDR => dataflow_out_channel_U0_m_axi_weights_ARADDR,
        m_axi_weights_ARID => dataflow_out_channel_U0_m_axi_weights_ARID,
        m_axi_weights_ARLEN => dataflow_out_channel_U0_m_axi_weights_ARLEN,
        m_axi_weights_ARSIZE => dataflow_out_channel_U0_m_axi_weights_ARSIZE,
        m_axi_weights_ARBURST => dataflow_out_channel_U0_m_axi_weights_ARBURST,
        m_axi_weights_ARLOCK => dataflow_out_channel_U0_m_axi_weights_ARLOCK,
        m_axi_weights_ARCACHE => dataflow_out_channel_U0_m_axi_weights_ARCACHE,
        m_axi_weights_ARPROT => dataflow_out_channel_U0_m_axi_weights_ARPROT,
        m_axi_weights_ARQOS => dataflow_out_channel_U0_m_axi_weights_ARQOS,
        m_axi_weights_ARREGION => dataflow_out_channel_U0_m_axi_weights_ARREGION,
        m_axi_weights_ARUSER => dataflow_out_channel_U0_m_axi_weights_ARUSER,
        m_axi_weights_RVALID => m_axi_weights_RVALID,
        m_axi_weights_RREADY => dataflow_out_channel_U0_m_axi_weights_RREADY,
        m_axi_weights_RDATA => m_axi_weights_RDATA,
        m_axi_weights_RLAST => m_axi_weights_RLAST,
        m_axi_weights_RID => m_axi_weights_RID,
        m_axi_weights_RUSER => m_axi_weights_RUSER,
        m_axi_weights_RRESP => m_axi_weights_RRESP,
        m_axi_weights_BVALID => ap_const_logic_0,
        m_axi_weights_BREADY => dataflow_out_channel_U0_m_axi_weights_BREADY,
        m_axi_weights_BRESP => ap_const_lv2_0,
        m_axi_weights_BID => ap_const_lv1_0,
        m_axi_weights_BUSER => ap_const_lv1_0,
        weights_offset => weights_offset,
        image_offset => image_offset,
        curr_layer_in_w => curr_layer_in_w,
        curr_layer_in_h => curr_layer_in_h,
        curr_layer_out_w => curr_layer_out_w,
        curr_layer_out_h => curr_layer_out_h,
        curr_layer_out_ch => curr_layer_out_ch,
        curr_layer_ker_w => curr_layer_ker_w,
        curr_layer_ker_h => curr_layer_ker_h,
        curr_layer_str_w => curr_layer_str_w,
        curr_layer_str_h => curr_layer_str_h,
        to_r => to_r,
        row => row,
        col => col,
        partial_outputfm_0_address0 => dataflow_out_channel_U0_partial_outputfm_0_address0,
        partial_outputfm_0_ce0 => dataflow_out_channel_U0_partial_outputfm_0_ce0,
        partial_outputfm_0_q0 => partial_outputfm_0_q0,
        partial_outputfm_0_address1 => dataflow_out_channel_U0_partial_outputfm_0_address1,
        partial_outputfm_0_ce1 => dataflow_out_channel_U0_partial_outputfm_0_ce1,
        partial_outputfm_0_we1 => dataflow_out_channel_U0_partial_outputfm_0_we1,
        partial_outputfm_0_d1 => dataflow_out_channel_U0_partial_outputfm_0_d1,
        partial_outputfm_1_address0 => dataflow_out_channel_U0_partial_outputfm_1_address0,
        partial_outputfm_1_ce0 => dataflow_out_channel_U0_partial_outputfm_1_ce0,
        partial_outputfm_1_q0 => partial_outputfm_1_q0,
        partial_outputfm_1_address1 => dataflow_out_channel_U0_partial_outputfm_1_address1,
        partial_outputfm_1_ce1 => dataflow_out_channel_U0_partial_outputfm_1_ce1,
        partial_outputfm_1_we1 => dataflow_out_channel_U0_partial_outputfm_1_we1,
        partial_outputfm_1_d1 => dataflow_out_channel_U0_partial_outputfm_1_d1,
        partial_outputfm_2_address0 => dataflow_out_channel_U0_partial_outputfm_2_address0,
        partial_outputfm_2_ce0 => dataflow_out_channel_U0_partial_outputfm_2_ce0,
        partial_outputfm_2_q0 => partial_outputfm_2_q0,
        partial_outputfm_2_address1 => dataflow_out_channel_U0_partial_outputfm_2_address1,
        partial_outputfm_2_ce1 => dataflow_out_channel_U0_partial_outputfm_2_ce1,
        partial_outputfm_2_we1 => dataflow_out_channel_U0_partial_outputfm_2_we1,
        partial_outputfm_2_d1 => dataflow_out_channel_U0_partial_outputfm_2_d1,
        partial_outputfm_3_address0 => dataflow_out_channel_U0_partial_outputfm_3_address0,
        partial_outputfm_3_ce0 => dataflow_out_channel_U0_partial_outputfm_3_ce0,
        partial_outputfm_3_q0 => partial_outputfm_3_q0,
        partial_outputfm_3_address1 => dataflow_out_channel_U0_partial_outputfm_3_address1,
        partial_outputfm_3_ce1 => dataflow_out_channel_U0_partial_outputfm_3_ce1,
        partial_outputfm_3_we1 => dataflow_out_channel_U0_partial_outputfm_3_we1,
        partial_outputfm_3_d1 => dataflow_out_channel_U0_partial_outputfm_3_d1,
        partial_outputfm_4_address0 => dataflow_out_channel_U0_partial_outputfm_4_address0,
        partial_outputfm_4_ce0 => dataflow_out_channel_U0_partial_outputfm_4_ce0,
        partial_outputfm_4_q0 => partial_outputfm_4_q0,
        partial_outputfm_4_address1 => dataflow_out_channel_U0_partial_outputfm_4_address1,
        partial_outputfm_4_ce1 => dataflow_out_channel_U0_partial_outputfm_4_ce1,
        partial_outputfm_4_we1 => dataflow_out_channel_U0_partial_outputfm_4_we1,
        partial_outputfm_4_d1 => dataflow_out_channel_U0_partial_outputfm_4_d1,
        partial_outputfm_5_address0 => dataflow_out_channel_U0_partial_outputfm_5_address0,
        partial_outputfm_5_ce0 => dataflow_out_channel_U0_partial_outputfm_5_ce0,
        partial_outputfm_5_q0 => partial_outputfm_5_q0,
        partial_outputfm_5_address1 => dataflow_out_channel_U0_partial_outputfm_5_address1,
        partial_outputfm_5_ce1 => dataflow_out_channel_U0_partial_outputfm_5_ce1,
        partial_outputfm_5_we1 => dataflow_out_channel_U0_partial_outputfm_5_we1,
        partial_outputfm_5_d1 => dataflow_out_channel_U0_partial_outputfm_5_d1,
        partial_outputfm_6_address0 => dataflow_out_channel_U0_partial_outputfm_6_address0,
        partial_outputfm_6_ce0 => dataflow_out_channel_U0_partial_outputfm_6_ce0,
        partial_outputfm_6_q0 => partial_outputfm_6_q0,
        partial_outputfm_6_address1 => dataflow_out_channel_U0_partial_outputfm_6_address1,
        partial_outputfm_6_ce1 => dataflow_out_channel_U0_partial_outputfm_6_ce1,
        partial_outputfm_6_we1 => dataflow_out_channel_U0_partial_outputfm_6_we1,
        partial_outputfm_6_d1 => dataflow_out_channel_U0_partial_outputfm_6_d1,
        partial_outputfm_7_address0 => dataflow_out_channel_U0_partial_outputfm_7_address0,
        partial_outputfm_7_ce0 => dataflow_out_channel_U0_partial_outputfm_7_ce0,
        partial_outputfm_7_q0 => partial_outputfm_7_q0,
        partial_outputfm_7_address1 => dataflow_out_channel_U0_partial_outputfm_7_address1,
        partial_outputfm_7_ce1 => dataflow_out_channel_U0_partial_outputfm_7_ce1,
        partial_outputfm_7_we1 => dataflow_out_channel_U0_partial_outputfm_7_we1,
        partial_outputfm_7_d1 => dataflow_out_channel_U0_partial_outputfm_7_d1,
        partial_outputfm_8_address0 => dataflow_out_channel_U0_partial_outputfm_8_address0,
        partial_outputfm_8_ce0 => dataflow_out_channel_U0_partial_outputfm_8_ce0,
        partial_outputfm_8_q0 => partial_outputfm_8_q0,
        partial_outputfm_8_address1 => dataflow_out_channel_U0_partial_outputfm_8_address1,
        partial_outputfm_8_ce1 => dataflow_out_channel_U0_partial_outputfm_8_ce1,
        partial_outputfm_8_we1 => dataflow_out_channel_U0_partial_outputfm_8_we1,
        partial_outputfm_8_d1 => dataflow_out_channel_U0_partial_outputfm_8_d1,
        partial_outputfm_9_address0 => dataflow_out_channel_U0_partial_outputfm_9_address0,
        partial_outputfm_9_ce0 => dataflow_out_channel_U0_partial_outputfm_9_ce0,
        partial_outputfm_9_q0 => partial_outputfm_9_q0,
        partial_outputfm_9_address1 => dataflow_out_channel_U0_partial_outputfm_9_address1,
        partial_outputfm_9_ce1 => dataflow_out_channel_U0_partial_outputfm_9_ce1,
        partial_outputfm_9_we1 => dataflow_out_channel_U0_partial_outputfm_9_we1,
        partial_outputfm_9_d1 => dataflow_out_channel_U0_partial_outputfm_9_d1,
        partial_outputfm_10_address0 => dataflow_out_channel_U0_partial_outputfm_10_address0,
        partial_outputfm_10_ce0 => dataflow_out_channel_U0_partial_outputfm_10_ce0,
        partial_outputfm_10_q0 => partial_outputfm_10_q0,
        partial_outputfm_10_address1 => dataflow_out_channel_U0_partial_outputfm_10_address1,
        partial_outputfm_10_ce1 => dataflow_out_channel_U0_partial_outputfm_10_ce1,
        partial_outputfm_10_we1 => dataflow_out_channel_U0_partial_outputfm_10_we1,
        partial_outputfm_10_d1 => dataflow_out_channel_U0_partial_outputfm_10_d1,
        partial_outputfm_11_address0 => dataflow_out_channel_U0_partial_outputfm_11_address0,
        partial_outputfm_11_ce0 => dataflow_out_channel_U0_partial_outputfm_11_ce0,
        partial_outputfm_11_q0 => partial_outputfm_11_q0,
        partial_outputfm_11_address1 => dataflow_out_channel_U0_partial_outputfm_11_address1,
        partial_outputfm_11_ce1 => dataflow_out_channel_U0_partial_outputfm_11_ce1,
        partial_outputfm_11_we1 => dataflow_out_channel_U0_partial_outputfm_11_we1,
        partial_outputfm_11_d1 => dataflow_out_channel_U0_partial_outputfm_11_d1,
        partial_outputfm_12_address0 => dataflow_out_channel_U0_partial_outputfm_12_address0,
        partial_outputfm_12_ce0 => dataflow_out_channel_U0_partial_outputfm_12_ce0,
        partial_outputfm_12_q0 => partial_outputfm_12_q0,
        partial_outputfm_12_address1 => dataflow_out_channel_U0_partial_outputfm_12_address1,
        partial_outputfm_12_ce1 => dataflow_out_channel_U0_partial_outputfm_12_ce1,
        partial_outputfm_12_we1 => dataflow_out_channel_U0_partial_outputfm_12_we1,
        partial_outputfm_12_d1 => dataflow_out_channel_U0_partial_outputfm_12_d1,
        partial_outputfm_13_address0 => dataflow_out_channel_U0_partial_outputfm_13_address0,
        partial_outputfm_13_ce0 => dataflow_out_channel_U0_partial_outputfm_13_ce0,
        partial_outputfm_13_q0 => partial_outputfm_13_q0,
        partial_outputfm_13_address1 => dataflow_out_channel_U0_partial_outputfm_13_address1,
        partial_outputfm_13_ce1 => dataflow_out_channel_U0_partial_outputfm_13_ce1,
        partial_outputfm_13_we1 => dataflow_out_channel_U0_partial_outputfm_13_we1,
        partial_outputfm_13_d1 => dataflow_out_channel_U0_partial_outputfm_13_d1,
        partial_outputfm_14_address0 => dataflow_out_channel_U0_partial_outputfm_14_address0,
        partial_outputfm_14_ce0 => dataflow_out_channel_U0_partial_outputfm_14_ce0,
        partial_outputfm_14_q0 => partial_outputfm_14_q0,
        partial_outputfm_14_address1 => dataflow_out_channel_U0_partial_outputfm_14_address1,
        partial_outputfm_14_ce1 => dataflow_out_channel_U0_partial_outputfm_14_ce1,
        partial_outputfm_14_we1 => dataflow_out_channel_U0_partial_outputfm_14_we1,
        partial_outputfm_14_d1 => dataflow_out_channel_U0_partial_outputfm_14_d1,
        partial_outputfm_15_address0 => dataflow_out_channel_U0_partial_outputfm_15_address0,
        partial_outputfm_15_ce0 => dataflow_out_channel_U0_partial_outputfm_15_ce0,
        partial_outputfm_15_q0 => partial_outputfm_15_q0,
        partial_outputfm_15_address1 => dataflow_out_channel_U0_partial_outputfm_15_address1,
        partial_outputfm_15_ce1 => dataflow_out_channel_U0_partial_outputfm_15_ce1,
        partial_outputfm_15_we1 => dataflow_out_channel_U0_partial_outputfm_15_we1,
        partial_outputfm_15_d1 => dataflow_out_channel_U0_partial_outputfm_15_d1,
        partial_outputfm_16_address0 => dataflow_out_channel_U0_partial_outputfm_16_address0,
        partial_outputfm_16_ce0 => dataflow_out_channel_U0_partial_outputfm_16_ce0,
        partial_outputfm_16_q0 => partial_outputfm_16_q0,
        partial_outputfm_16_address1 => dataflow_out_channel_U0_partial_outputfm_16_address1,
        partial_outputfm_16_ce1 => dataflow_out_channel_U0_partial_outputfm_16_ce1,
        partial_outputfm_16_we1 => dataflow_out_channel_U0_partial_outputfm_16_we1,
        partial_outputfm_16_d1 => dataflow_out_channel_U0_partial_outputfm_16_d1,
        partial_outputfm_17_address0 => dataflow_out_channel_U0_partial_outputfm_17_address0,
        partial_outputfm_17_ce0 => dataflow_out_channel_U0_partial_outputfm_17_ce0,
        partial_outputfm_17_q0 => partial_outputfm_17_q0,
        partial_outputfm_17_address1 => dataflow_out_channel_U0_partial_outputfm_17_address1,
        partial_outputfm_17_ce1 => dataflow_out_channel_U0_partial_outputfm_17_ce1,
        partial_outputfm_17_we1 => dataflow_out_channel_U0_partial_outputfm_17_we1,
        partial_outputfm_17_d1 => dataflow_out_channel_U0_partial_outputfm_17_d1,
        partial_outputfm_18_address0 => dataflow_out_channel_U0_partial_outputfm_18_address0,
        partial_outputfm_18_ce0 => dataflow_out_channel_U0_partial_outputfm_18_ce0,
        partial_outputfm_18_q0 => partial_outputfm_18_q0,
        partial_outputfm_18_address1 => dataflow_out_channel_U0_partial_outputfm_18_address1,
        partial_outputfm_18_ce1 => dataflow_out_channel_U0_partial_outputfm_18_ce1,
        partial_outputfm_18_we1 => dataflow_out_channel_U0_partial_outputfm_18_we1,
        partial_outputfm_18_d1 => dataflow_out_channel_U0_partial_outputfm_18_d1,
        partial_outputfm_19_address0 => dataflow_out_channel_U0_partial_outputfm_19_address0,
        partial_outputfm_19_ce0 => dataflow_out_channel_U0_partial_outputfm_19_ce0,
        partial_outputfm_19_q0 => partial_outputfm_19_q0,
        partial_outputfm_19_address1 => dataflow_out_channel_U0_partial_outputfm_19_address1,
        partial_outputfm_19_ce1 => dataflow_out_channel_U0_partial_outputfm_19_ce1,
        partial_outputfm_19_we1 => dataflow_out_channel_U0_partial_outputfm_19_we1,
        partial_outputfm_19_d1 => dataflow_out_channel_U0_partial_outputfm_19_d1,
        partial_outputfm_20_address0 => dataflow_out_channel_U0_partial_outputfm_20_address0,
        partial_outputfm_20_ce0 => dataflow_out_channel_U0_partial_outputfm_20_ce0,
        partial_outputfm_20_q0 => partial_outputfm_20_q0,
        partial_outputfm_20_address1 => dataflow_out_channel_U0_partial_outputfm_20_address1,
        partial_outputfm_20_ce1 => dataflow_out_channel_U0_partial_outputfm_20_ce1,
        partial_outputfm_20_we1 => dataflow_out_channel_U0_partial_outputfm_20_we1,
        partial_outputfm_20_d1 => dataflow_out_channel_U0_partial_outputfm_20_d1,
        partial_outputfm_21_address0 => dataflow_out_channel_U0_partial_outputfm_21_address0,
        partial_outputfm_21_ce0 => dataflow_out_channel_U0_partial_outputfm_21_ce0,
        partial_outputfm_21_q0 => partial_outputfm_21_q0,
        partial_outputfm_21_address1 => dataflow_out_channel_U0_partial_outputfm_21_address1,
        partial_outputfm_21_ce1 => dataflow_out_channel_U0_partial_outputfm_21_ce1,
        partial_outputfm_21_we1 => dataflow_out_channel_U0_partial_outputfm_21_we1,
        partial_outputfm_21_d1 => dataflow_out_channel_U0_partial_outputfm_21_d1,
        partial_outputfm_22_address0 => dataflow_out_channel_U0_partial_outputfm_22_address0,
        partial_outputfm_22_ce0 => dataflow_out_channel_U0_partial_outputfm_22_ce0,
        partial_outputfm_22_q0 => partial_outputfm_22_q0,
        partial_outputfm_22_address1 => dataflow_out_channel_U0_partial_outputfm_22_address1,
        partial_outputfm_22_ce1 => dataflow_out_channel_U0_partial_outputfm_22_ce1,
        partial_outputfm_22_we1 => dataflow_out_channel_U0_partial_outputfm_22_we1,
        partial_outputfm_22_d1 => dataflow_out_channel_U0_partial_outputfm_22_d1,
        partial_outputfm_23_address0 => dataflow_out_channel_U0_partial_outputfm_23_address0,
        partial_outputfm_23_ce0 => dataflow_out_channel_U0_partial_outputfm_23_ce0,
        partial_outputfm_23_q0 => partial_outputfm_23_q0,
        partial_outputfm_23_address1 => dataflow_out_channel_U0_partial_outputfm_23_address1,
        partial_outputfm_23_ce1 => dataflow_out_channel_U0_partial_outputfm_23_ce1,
        partial_outputfm_23_we1 => dataflow_out_channel_U0_partial_outputfm_23_we1,
        partial_outputfm_23_d1 => dataflow_out_channel_U0_partial_outputfm_23_d1,
        partial_outputfm_24_address0 => dataflow_out_channel_U0_partial_outputfm_24_address0,
        partial_outputfm_24_ce0 => dataflow_out_channel_U0_partial_outputfm_24_ce0,
        partial_outputfm_24_q0 => partial_outputfm_24_q0,
        partial_outputfm_24_address1 => dataflow_out_channel_U0_partial_outputfm_24_address1,
        partial_outputfm_24_ce1 => dataflow_out_channel_U0_partial_outputfm_24_ce1,
        partial_outputfm_24_we1 => dataflow_out_channel_U0_partial_outputfm_24_we1,
        partial_outputfm_24_d1 => dataflow_out_channel_U0_partial_outputfm_24_d1,
        partial_outputfm_25_address0 => dataflow_out_channel_U0_partial_outputfm_25_address0,
        partial_outputfm_25_ce0 => dataflow_out_channel_U0_partial_outputfm_25_ce0,
        partial_outputfm_25_q0 => partial_outputfm_25_q0,
        partial_outputfm_25_address1 => dataflow_out_channel_U0_partial_outputfm_25_address1,
        partial_outputfm_25_ce1 => dataflow_out_channel_U0_partial_outputfm_25_ce1,
        partial_outputfm_25_we1 => dataflow_out_channel_U0_partial_outputfm_25_we1,
        partial_outputfm_25_d1 => dataflow_out_channel_U0_partial_outputfm_25_d1,
        partial_outputfm_26_address0 => dataflow_out_channel_U0_partial_outputfm_26_address0,
        partial_outputfm_26_ce0 => dataflow_out_channel_U0_partial_outputfm_26_ce0,
        partial_outputfm_26_q0 => partial_outputfm_26_q0,
        partial_outputfm_26_address1 => dataflow_out_channel_U0_partial_outputfm_26_address1,
        partial_outputfm_26_ce1 => dataflow_out_channel_U0_partial_outputfm_26_ce1,
        partial_outputfm_26_we1 => dataflow_out_channel_U0_partial_outputfm_26_we1,
        partial_outputfm_26_d1 => dataflow_out_channel_U0_partial_outputfm_26_d1,
        partial_outputfm_27_address0 => dataflow_out_channel_U0_partial_outputfm_27_address0,
        partial_outputfm_27_ce0 => dataflow_out_channel_U0_partial_outputfm_27_ce0,
        partial_outputfm_27_q0 => partial_outputfm_27_q0,
        partial_outputfm_27_address1 => dataflow_out_channel_U0_partial_outputfm_27_address1,
        partial_outputfm_27_ce1 => dataflow_out_channel_U0_partial_outputfm_27_ce1,
        partial_outputfm_27_we1 => dataflow_out_channel_U0_partial_outputfm_27_we1,
        partial_outputfm_27_d1 => dataflow_out_channel_U0_partial_outputfm_27_d1,
        input_offset => input_offset,
        weights_offset_10 => weights_offset_9,
        output_offset => output_offset,
        quantized_multiplier => quantized_multiplier,
        right_shift => right_shift,
        curr_layer_out_w_out_din => dataflow_out_channel_U0_curr_layer_out_w_out_din,
        curr_layer_out_w_out_full_n => curr_layer_out_w_c_full_n,
        curr_layer_out_w_out_write => dataflow_out_channel_U0_curr_layer_out_w_out_write,
        curr_layer_out_h_out_din => dataflow_out_channel_U0_curr_layer_out_h_out_din,
        curr_layer_out_h_out_full_n => curr_layer_out_h_c_full_n,
        curr_layer_out_h_out_write => dataflow_out_channel_U0_curr_layer_out_h_out_write,
        curr_layer_out_ch_out_din => dataflow_out_channel_U0_curr_layer_out_ch_out_din,
        curr_layer_out_ch_out_full_n => curr_layer_out_ch_c_full_n,
        curr_layer_out_ch_out_write => dataflow_out_channel_U0_curr_layer_out_ch_out_write,
        to_out_din => dataflow_out_channel_U0_to_out_din,
        to_out_full_n => to_c_full_n,
        to_out_write => dataflow_out_channel_U0_to_out_write,
        row_out_din => dataflow_out_channel_U0_row_out_din,
        row_out_full_n => row_c_full_n,
        row_out_write => dataflow_out_channel_U0_row_out_write,
        col_out_din => dataflow_out_channel_U0_col_out_din,
        col_out_full_n => col_c_full_n,
        col_out_write => dataflow_out_channel_U0_col_out_write,
        output_offset_out_din => dataflow_out_channel_U0_output_offset_out_din,
        output_offset_out_full_n => output_offset_c_full_n,
        output_offset_out_write => dataflow_out_channel_U0_output_offset_out_write,
        quantized_multiplier_out_din => dataflow_out_channel_U0_quantized_multiplier_out_din,
        quantized_multiplier_out_full_n => quantized_multiplier_2_full_n,
        quantized_multiplier_out_write => dataflow_out_channel_U0_quantized_multiplier_out_write,
        right_shift_out_din => dataflow_out_channel_U0_right_shift_out_din,
        right_shift_out_full_n => right_shift_c_full_n,
        right_shift_out_write => dataflow_out_channel_U0_right_shift_out_write,
        out_offset => out_offset,
        out_offset_out_din => dataflow_out_channel_U0_out_offset_out_din,
        out_offset_out_full_n => out_offset_c_full_n,
        out_offset_out_write => dataflow_out_channel_U0_out_offset_out_write,
        outputfm_0_address0 => dataflow_out_channel_U0_outputfm_0_address0,
        outputfm_0_ce0 => dataflow_out_channel_U0_outputfm_0_ce0,
        outputfm_0_we0 => dataflow_out_channel_U0_outputfm_0_we0,
        outputfm_0_d0 => dataflow_out_channel_U0_outputfm_0_d0,
        outputfm_1_address0 => dataflow_out_channel_U0_outputfm_1_address0,
        outputfm_1_ce0 => dataflow_out_channel_U0_outputfm_1_ce0,
        outputfm_1_we0 => dataflow_out_channel_U0_outputfm_1_we0,
        outputfm_1_d0 => dataflow_out_channel_U0_outputfm_1_d0,
        outputfm_2_address0 => dataflow_out_channel_U0_outputfm_2_address0,
        outputfm_2_ce0 => dataflow_out_channel_U0_outputfm_2_ce0,
        outputfm_2_we0 => dataflow_out_channel_U0_outputfm_2_we0,
        outputfm_2_d0 => dataflow_out_channel_U0_outputfm_2_d0,
        outputfm_3_address0 => dataflow_out_channel_U0_outputfm_3_address0,
        outputfm_3_ce0 => dataflow_out_channel_U0_outputfm_3_ce0,
        outputfm_3_we0 => dataflow_out_channel_U0_outputfm_3_we0,
        outputfm_3_d0 => dataflow_out_channel_U0_outputfm_3_d0,
        outputfm_4_address0 => dataflow_out_channel_U0_outputfm_4_address0,
        outputfm_4_ce0 => dataflow_out_channel_U0_outputfm_4_ce0,
        outputfm_4_we0 => dataflow_out_channel_U0_outputfm_4_we0,
        outputfm_4_d0 => dataflow_out_channel_U0_outputfm_4_d0,
        outputfm_5_address0 => dataflow_out_channel_U0_outputfm_5_address0,
        outputfm_5_ce0 => dataflow_out_channel_U0_outputfm_5_ce0,
        outputfm_5_we0 => dataflow_out_channel_U0_outputfm_5_we0,
        outputfm_5_d0 => dataflow_out_channel_U0_outputfm_5_d0,
        outputfm_6_address0 => dataflow_out_channel_U0_outputfm_6_address0,
        outputfm_6_ce0 => dataflow_out_channel_U0_outputfm_6_ce0,
        outputfm_6_we0 => dataflow_out_channel_U0_outputfm_6_we0,
        outputfm_6_d0 => dataflow_out_channel_U0_outputfm_6_d0,
        outputfm_7_address0 => dataflow_out_channel_U0_outputfm_7_address0,
        outputfm_7_ce0 => dataflow_out_channel_U0_outputfm_7_ce0,
        outputfm_7_we0 => dataflow_out_channel_U0_outputfm_7_we0,
        outputfm_7_d0 => dataflow_out_channel_U0_outputfm_7_d0,
        outputfm_8_address0 => dataflow_out_channel_U0_outputfm_8_address0,
        outputfm_8_ce0 => dataflow_out_channel_U0_outputfm_8_ce0,
        outputfm_8_we0 => dataflow_out_channel_U0_outputfm_8_we0,
        outputfm_8_d0 => dataflow_out_channel_U0_outputfm_8_d0,
        outputfm_9_address0 => dataflow_out_channel_U0_outputfm_9_address0,
        outputfm_9_ce0 => dataflow_out_channel_U0_outputfm_9_ce0,
        outputfm_9_we0 => dataflow_out_channel_U0_outputfm_9_we0,
        outputfm_9_d0 => dataflow_out_channel_U0_outputfm_9_d0,
        outputfm_10_address0 => dataflow_out_channel_U0_outputfm_10_address0,
        outputfm_10_ce0 => dataflow_out_channel_U0_outputfm_10_ce0,
        outputfm_10_we0 => dataflow_out_channel_U0_outputfm_10_we0,
        outputfm_10_d0 => dataflow_out_channel_U0_outputfm_10_d0,
        outputfm_11_address0 => dataflow_out_channel_U0_outputfm_11_address0,
        outputfm_11_ce0 => dataflow_out_channel_U0_outputfm_11_ce0,
        outputfm_11_we0 => dataflow_out_channel_U0_outputfm_11_we0,
        outputfm_11_d0 => dataflow_out_channel_U0_outputfm_11_d0,
        outputfm_12_address0 => dataflow_out_channel_U0_outputfm_12_address0,
        outputfm_12_ce0 => dataflow_out_channel_U0_outputfm_12_ce0,
        outputfm_12_we0 => dataflow_out_channel_U0_outputfm_12_we0,
        outputfm_12_d0 => dataflow_out_channel_U0_outputfm_12_d0,
        outputfm_13_address0 => dataflow_out_channel_U0_outputfm_13_address0,
        outputfm_13_ce0 => dataflow_out_channel_U0_outputfm_13_ce0,
        outputfm_13_we0 => dataflow_out_channel_U0_outputfm_13_we0,
        outputfm_13_d0 => dataflow_out_channel_U0_outputfm_13_d0,
        outputfm_14_address0 => dataflow_out_channel_U0_outputfm_14_address0,
        outputfm_14_ce0 => dataflow_out_channel_U0_outputfm_14_ce0,
        outputfm_14_we0 => dataflow_out_channel_U0_outputfm_14_we0,
        outputfm_14_d0 => dataflow_out_channel_U0_outputfm_14_d0,
        outputfm_15_address0 => dataflow_out_channel_U0_outputfm_15_address0,
        outputfm_15_ce0 => dataflow_out_channel_U0_outputfm_15_ce0,
        outputfm_15_we0 => dataflow_out_channel_U0_outputfm_15_we0,
        outputfm_15_d0 => dataflow_out_channel_U0_outputfm_15_d0,
        outputfm_16_address0 => dataflow_out_channel_U0_outputfm_16_address0,
        outputfm_16_ce0 => dataflow_out_channel_U0_outputfm_16_ce0,
        outputfm_16_we0 => dataflow_out_channel_U0_outputfm_16_we0,
        outputfm_16_d0 => dataflow_out_channel_U0_outputfm_16_d0,
        outputfm_17_address0 => dataflow_out_channel_U0_outputfm_17_address0,
        outputfm_17_ce0 => dataflow_out_channel_U0_outputfm_17_ce0,
        outputfm_17_we0 => dataflow_out_channel_U0_outputfm_17_we0,
        outputfm_17_d0 => dataflow_out_channel_U0_outputfm_17_d0,
        outputfm_18_address0 => dataflow_out_channel_U0_outputfm_18_address0,
        outputfm_18_ce0 => dataflow_out_channel_U0_outputfm_18_ce0,
        outputfm_18_we0 => dataflow_out_channel_U0_outputfm_18_we0,
        outputfm_18_d0 => dataflow_out_channel_U0_outputfm_18_d0,
        outputfm_19_address0 => dataflow_out_channel_U0_outputfm_19_address0,
        outputfm_19_ce0 => dataflow_out_channel_U0_outputfm_19_ce0,
        outputfm_19_we0 => dataflow_out_channel_U0_outputfm_19_we0,
        outputfm_19_d0 => dataflow_out_channel_U0_outputfm_19_d0,
        outputfm_20_address0 => dataflow_out_channel_U0_outputfm_20_address0,
        outputfm_20_ce0 => dataflow_out_channel_U0_outputfm_20_ce0,
        outputfm_20_we0 => dataflow_out_channel_U0_outputfm_20_we0,
        outputfm_20_d0 => dataflow_out_channel_U0_outputfm_20_d0,
        outputfm_21_address0 => dataflow_out_channel_U0_outputfm_21_address0,
        outputfm_21_ce0 => dataflow_out_channel_U0_outputfm_21_ce0,
        outputfm_21_we0 => dataflow_out_channel_U0_outputfm_21_we0,
        outputfm_21_d0 => dataflow_out_channel_U0_outputfm_21_d0,
        outputfm_22_address0 => dataflow_out_channel_U0_outputfm_22_address0,
        outputfm_22_ce0 => dataflow_out_channel_U0_outputfm_22_ce0,
        outputfm_22_we0 => dataflow_out_channel_U0_outputfm_22_we0,
        outputfm_22_d0 => dataflow_out_channel_U0_outputfm_22_d0,
        outputfm_23_address0 => dataflow_out_channel_U0_outputfm_23_address0,
        outputfm_23_ce0 => dataflow_out_channel_U0_outputfm_23_ce0,
        outputfm_23_we0 => dataflow_out_channel_U0_outputfm_23_we0,
        outputfm_23_d0 => dataflow_out_channel_U0_outputfm_23_d0,
        outputfm_24_address0 => dataflow_out_channel_U0_outputfm_24_address0,
        outputfm_24_ce0 => dataflow_out_channel_U0_outputfm_24_ce0,
        outputfm_24_we0 => dataflow_out_channel_U0_outputfm_24_we0,
        outputfm_24_d0 => dataflow_out_channel_U0_outputfm_24_d0,
        outputfm_25_address0 => dataflow_out_channel_U0_outputfm_25_address0,
        outputfm_25_ce0 => dataflow_out_channel_U0_outputfm_25_ce0,
        outputfm_25_we0 => dataflow_out_channel_U0_outputfm_25_we0,
        outputfm_25_d0 => dataflow_out_channel_U0_outputfm_25_d0,
        outputfm_26_address0 => dataflow_out_channel_U0_outputfm_26_address0,
        outputfm_26_ce0 => dataflow_out_channel_U0_outputfm_26_ce0,
        outputfm_26_we0 => dataflow_out_channel_U0_outputfm_26_we0,
        outputfm_26_d0 => dataflow_out_channel_U0_outputfm_26_d0,
        outputfm_27_address0 => dataflow_out_channel_U0_outputfm_27_address0,
        outputfm_27_ce0 => dataflow_out_channel_U0_outputfm_27_ce0,
        outputfm_27_we0 => dataflow_out_channel_U0_outputfm_27_we0,
        outputfm_27_d0 => dataflow_out_channel_U0_outputfm_27_d0);

    write_output_U0 : component write_output
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => write_output_U0_ap_start,
        ap_done => write_output_U0_ap_done,
        ap_continue => write_output_U0_ap_continue,
        ap_idle => write_output_U0_ap_idle,
        ap_ready => write_output_U0_ap_ready,
        curr_layer_out_w_dout => curr_layer_out_w_c_dout,
        curr_layer_out_w_empty_n => curr_layer_out_w_c_empty_n,
        curr_layer_out_w_read => write_output_U0_curr_layer_out_w_read,
        curr_layer_out_h_dout => curr_layer_out_h_c_dout,
        curr_layer_out_h_empty_n => curr_layer_out_h_c_empty_n,
        curr_layer_out_h_read => write_output_U0_curr_layer_out_h_read,
        curr_layer_out_ch_dout => curr_layer_out_ch_c_dout,
        curr_layer_out_ch_empty_n => curr_layer_out_ch_c_empty_n,
        curr_layer_out_ch_read => write_output_U0_curr_layer_out_ch_read,
        m_axi_out_r_AWVALID => write_output_U0_m_axi_out_r_AWVALID,
        m_axi_out_r_AWREADY => m_axi_weights_AWREADY,
        m_axi_out_r_AWADDR => write_output_U0_m_axi_out_r_AWADDR,
        m_axi_out_r_AWID => write_output_U0_m_axi_out_r_AWID,
        m_axi_out_r_AWLEN => write_output_U0_m_axi_out_r_AWLEN,
        m_axi_out_r_AWSIZE => write_output_U0_m_axi_out_r_AWSIZE,
        m_axi_out_r_AWBURST => write_output_U0_m_axi_out_r_AWBURST,
        m_axi_out_r_AWLOCK => write_output_U0_m_axi_out_r_AWLOCK,
        m_axi_out_r_AWCACHE => write_output_U0_m_axi_out_r_AWCACHE,
        m_axi_out_r_AWPROT => write_output_U0_m_axi_out_r_AWPROT,
        m_axi_out_r_AWQOS => write_output_U0_m_axi_out_r_AWQOS,
        m_axi_out_r_AWREGION => write_output_U0_m_axi_out_r_AWREGION,
        m_axi_out_r_AWUSER => write_output_U0_m_axi_out_r_AWUSER,
        m_axi_out_r_WVALID => write_output_U0_m_axi_out_r_WVALID,
        m_axi_out_r_WREADY => m_axi_weights_WREADY,
        m_axi_out_r_WDATA => write_output_U0_m_axi_out_r_WDATA,
        m_axi_out_r_WSTRB => write_output_U0_m_axi_out_r_WSTRB,
        m_axi_out_r_WLAST => write_output_U0_m_axi_out_r_WLAST,
        m_axi_out_r_WID => write_output_U0_m_axi_out_r_WID,
        m_axi_out_r_WUSER => write_output_U0_m_axi_out_r_WUSER,
        m_axi_out_r_ARVALID => write_output_U0_m_axi_out_r_ARVALID,
        m_axi_out_r_ARREADY => ap_const_logic_0,
        m_axi_out_r_ARADDR => write_output_U0_m_axi_out_r_ARADDR,
        m_axi_out_r_ARID => write_output_U0_m_axi_out_r_ARID,
        m_axi_out_r_ARLEN => write_output_U0_m_axi_out_r_ARLEN,
        m_axi_out_r_ARSIZE => write_output_U0_m_axi_out_r_ARSIZE,
        m_axi_out_r_ARBURST => write_output_U0_m_axi_out_r_ARBURST,
        m_axi_out_r_ARLOCK => write_output_U0_m_axi_out_r_ARLOCK,
        m_axi_out_r_ARCACHE => write_output_U0_m_axi_out_r_ARCACHE,
        m_axi_out_r_ARPROT => write_output_U0_m_axi_out_r_ARPROT,
        m_axi_out_r_ARQOS => write_output_U0_m_axi_out_r_ARQOS,
        m_axi_out_r_ARREGION => write_output_U0_m_axi_out_r_ARREGION,
        m_axi_out_r_ARUSER => write_output_U0_m_axi_out_r_ARUSER,
        m_axi_out_r_RVALID => ap_const_logic_0,
        m_axi_out_r_RREADY => write_output_U0_m_axi_out_r_RREADY,
        m_axi_out_r_RDATA => ap_const_lv8_0,
        m_axi_out_r_RLAST => ap_const_logic_0,
        m_axi_out_r_RID => ap_const_lv1_0,
        m_axi_out_r_RUSER => ap_const_lv1_0,
        m_axi_out_r_RRESP => ap_const_lv2_0,
        m_axi_out_r_BVALID => m_axi_weights_BVALID,
        m_axi_out_r_BREADY => write_output_U0_m_axi_out_r_BREADY,
        m_axi_out_r_BRESP => m_axi_weights_BRESP,
        m_axi_out_r_BID => m_axi_weights_BID,
        m_axi_out_r_BUSER => m_axi_weights_BUSER,
        out_offset_dout => out_offset_c_dout,
        out_offset_empty_n => out_offset_c_empty_n,
        out_offset_read => write_output_U0_out_offset_read,
        to_r_dout => to_c_dout,
        to_r_empty_n => to_c_empty_n,
        to_r_read => write_output_U0_to_r_read,
        row_dout => row_c_dout,
        row_empty_n => row_c_empty_n,
        row_read => write_output_U0_row_read,
        col_dout => col_c_dout,
        col_empty_n => col_c_empty_n,
        col_read => write_output_U0_col_read,
        output_offset_dout => output_offset_c_dout,
        output_offset_empty_n => output_offset_c_empty_n,
        output_offset_read => write_output_U0_output_offset_read,
        quantized_multiplier_dout => quantized_multiplier_2_dout,
        quantized_multiplier_empty_n => quantized_multiplier_2_empty_n,
        quantized_multiplier_read => write_output_U0_quantized_multiplier_read,
        right_shift_dout => right_shift_c_dout,
        right_shift_empty_n => right_shift_c_empty_n,
        right_shift_read => write_output_U0_right_shift_read,
        outputfm_0_address0 => write_output_U0_outputfm_0_address0,
        outputfm_0_ce0 => write_output_U0_outputfm_0_ce0,
        outputfm_0_q0 => outputfm_0_t_q0,
        outputfm_1_address0 => write_output_U0_outputfm_1_address0,
        outputfm_1_ce0 => write_output_U0_outputfm_1_ce0,
        outputfm_1_q0 => outputfm_1_t_q0,
        outputfm_10_address0 => write_output_U0_outputfm_10_address0,
        outputfm_10_ce0 => write_output_U0_outputfm_10_ce0,
        outputfm_10_q0 => outputfm_10_t_q0,
        outputfm_11_address0 => write_output_U0_outputfm_11_address0,
        outputfm_11_ce0 => write_output_U0_outputfm_11_ce0,
        outputfm_11_q0 => outputfm_11_t_q0,
        outputfm_12_address0 => write_output_U0_outputfm_12_address0,
        outputfm_12_ce0 => write_output_U0_outputfm_12_ce0,
        outputfm_12_q0 => outputfm_12_t_q0,
        outputfm_13_address0 => write_output_U0_outputfm_13_address0,
        outputfm_13_ce0 => write_output_U0_outputfm_13_ce0,
        outputfm_13_q0 => outputfm_13_t_q0,
        outputfm_14_address0 => write_output_U0_outputfm_14_address0,
        outputfm_14_ce0 => write_output_U0_outputfm_14_ce0,
        outputfm_14_q0 => outputfm_14_t_q0,
        outputfm_15_address0 => write_output_U0_outputfm_15_address0,
        outputfm_15_ce0 => write_output_U0_outputfm_15_ce0,
        outputfm_15_q0 => outputfm_15_t_q0,
        outputfm_16_address0 => write_output_U0_outputfm_16_address0,
        outputfm_16_ce0 => write_output_U0_outputfm_16_ce0,
        outputfm_16_q0 => outputfm_16_t_q0,
        outputfm_17_address0 => write_output_U0_outputfm_17_address0,
        outputfm_17_ce0 => write_output_U0_outputfm_17_ce0,
        outputfm_17_q0 => outputfm_17_t_q0,
        outputfm_18_address0 => write_output_U0_outputfm_18_address0,
        outputfm_18_ce0 => write_output_U0_outputfm_18_ce0,
        outputfm_18_q0 => outputfm_18_t_q0,
        outputfm_19_address0 => write_output_U0_outputfm_19_address0,
        outputfm_19_ce0 => write_output_U0_outputfm_19_ce0,
        outputfm_19_q0 => outputfm_19_t_q0,
        outputfm_2_address0 => write_output_U0_outputfm_2_address0,
        outputfm_2_ce0 => write_output_U0_outputfm_2_ce0,
        outputfm_2_q0 => outputfm_2_t_q0,
        outputfm_20_address0 => write_output_U0_outputfm_20_address0,
        outputfm_20_ce0 => write_output_U0_outputfm_20_ce0,
        outputfm_20_q0 => outputfm_20_t_q0,
        outputfm_21_address0 => write_output_U0_outputfm_21_address0,
        outputfm_21_ce0 => write_output_U0_outputfm_21_ce0,
        outputfm_21_q0 => outputfm_21_t_q0,
        outputfm_22_address0 => write_output_U0_outputfm_22_address0,
        outputfm_22_ce0 => write_output_U0_outputfm_22_ce0,
        outputfm_22_q0 => outputfm_22_t_q0,
        outputfm_23_address0 => write_output_U0_outputfm_23_address0,
        outputfm_23_ce0 => write_output_U0_outputfm_23_ce0,
        outputfm_23_q0 => outputfm_23_t_q0,
        outputfm_24_address0 => write_output_U0_outputfm_24_address0,
        outputfm_24_ce0 => write_output_U0_outputfm_24_ce0,
        outputfm_24_q0 => outputfm_24_t_q0,
        outputfm_25_address0 => write_output_U0_outputfm_25_address0,
        outputfm_25_ce0 => write_output_U0_outputfm_25_ce0,
        outputfm_25_q0 => outputfm_25_t_q0,
        outputfm_26_address0 => write_output_U0_outputfm_26_address0,
        outputfm_26_ce0 => write_output_U0_outputfm_26_ce0,
        outputfm_26_q0 => outputfm_26_t_q0,
        outputfm_27_address0 => write_output_U0_outputfm_27_address0,
        outputfm_27_ce0 => write_output_U0_outputfm_27_ce0,
        outputfm_27_q0 => outputfm_27_t_q0,
        outputfm_3_address0 => write_output_U0_outputfm_3_address0,
        outputfm_3_ce0 => write_output_U0_outputfm_3_ce0,
        outputfm_3_q0 => outputfm_3_t_q0,
        outputfm_4_address0 => write_output_U0_outputfm_4_address0,
        outputfm_4_ce0 => write_output_U0_outputfm_4_ce0,
        outputfm_4_q0 => outputfm_4_t_q0,
        outputfm_5_address0 => write_output_U0_outputfm_5_address0,
        outputfm_5_ce0 => write_output_U0_outputfm_5_ce0,
        outputfm_5_q0 => outputfm_5_t_q0,
        outputfm_6_address0 => write_output_U0_outputfm_6_address0,
        outputfm_6_ce0 => write_output_U0_outputfm_6_ce0,
        outputfm_6_q0 => outputfm_6_t_q0,
        outputfm_7_address0 => write_output_U0_outputfm_7_address0,
        outputfm_7_ce0 => write_output_U0_outputfm_7_ce0,
        outputfm_7_q0 => outputfm_7_t_q0,
        outputfm_8_address0 => write_output_U0_outputfm_8_address0,
        outputfm_8_ce0 => write_output_U0_outputfm_8_ce0,
        outputfm_8_q0 => outputfm_8_t_q0,
        outputfm_9_address0 => write_output_U0_outputfm_9_address0,
        outputfm_9_ce0 => write_output_U0_outputfm_9_ce0,
        outputfm_9_q0 => outputfm_9_t_q0,
        rounding => rounding);

    outputfm_0_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_0_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_0_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_0_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_0_d0,
        i_q0 => outputfm_0_i_q0,
        t_address0 => write_output_U0_outputfm_0_address0,
        t_ce0 => write_output_U0_outputfm_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_0_i_full_n,
        i_write => ap_channel_done_outputfm_0,
        t_empty_n => outputfm_0_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_1_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_1_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_1_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_1_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_1_d0,
        i_q0 => outputfm_1_i_q0,
        t_address0 => write_output_U0_outputfm_1_address0,
        t_ce0 => write_output_U0_outputfm_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_1_i_full_n,
        i_write => ap_channel_done_outputfm_1,
        t_empty_n => outputfm_1_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_2_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_2_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_2_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_2_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_2_d0,
        i_q0 => outputfm_2_i_q0,
        t_address0 => write_output_U0_outputfm_2_address0,
        t_ce0 => write_output_U0_outputfm_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_2_i_full_n,
        i_write => ap_channel_done_outputfm_2,
        t_empty_n => outputfm_2_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_3_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_3_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_3_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_3_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_3_d0,
        i_q0 => outputfm_3_i_q0,
        t_address0 => write_output_U0_outputfm_3_address0,
        t_ce0 => write_output_U0_outputfm_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_3_i_full_n,
        i_write => ap_channel_done_outputfm_3,
        t_empty_n => outputfm_3_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_4_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_4_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_4_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_4_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_4_d0,
        i_q0 => outputfm_4_i_q0,
        t_address0 => write_output_U0_outputfm_4_address0,
        t_ce0 => write_output_U0_outputfm_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_4_i_full_n,
        i_write => ap_channel_done_outputfm_4,
        t_empty_n => outputfm_4_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_5_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_5_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_5_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_5_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_5_d0,
        i_q0 => outputfm_5_i_q0,
        t_address0 => write_output_U0_outputfm_5_address0,
        t_ce0 => write_output_U0_outputfm_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_5_i_full_n,
        i_write => ap_channel_done_outputfm_5,
        t_empty_n => outputfm_5_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_6_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_6_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_6_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_6_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_6_d0,
        i_q0 => outputfm_6_i_q0,
        t_address0 => write_output_U0_outputfm_6_address0,
        t_ce0 => write_output_U0_outputfm_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_6_i_full_n,
        i_write => ap_channel_done_outputfm_6,
        t_empty_n => outputfm_6_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_7_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_7_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_7_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_7_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_7_d0,
        i_q0 => outputfm_7_i_q0,
        t_address0 => write_output_U0_outputfm_7_address0,
        t_ce0 => write_output_U0_outputfm_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_7_i_full_n,
        i_write => ap_channel_done_outputfm_7,
        t_empty_n => outputfm_7_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_8_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_8_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_8_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_8_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_8_d0,
        i_q0 => outputfm_8_i_q0,
        t_address0 => write_output_U0_outputfm_8_address0,
        t_ce0 => write_output_U0_outputfm_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_8_i_full_n,
        i_write => ap_channel_done_outputfm_8,
        t_empty_n => outputfm_8_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_9_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_9_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_9_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_9_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_9_d0,
        i_q0 => outputfm_9_i_q0,
        t_address0 => write_output_U0_outputfm_9_address0,
        t_ce0 => write_output_U0_outputfm_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_9_i_full_n,
        i_write => ap_channel_done_outputfm_9,
        t_empty_n => outputfm_9_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_10_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_10_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_10_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_10_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_10_d0,
        i_q0 => outputfm_10_i_q0,
        t_address0 => write_output_U0_outputfm_10_address0,
        t_ce0 => write_output_U0_outputfm_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_10_i_full_n,
        i_write => ap_channel_done_outputfm_10,
        t_empty_n => outputfm_10_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_11_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_11_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_11_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_11_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_11_d0,
        i_q0 => outputfm_11_i_q0,
        t_address0 => write_output_U0_outputfm_11_address0,
        t_ce0 => write_output_U0_outputfm_11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_11_i_full_n,
        i_write => ap_channel_done_outputfm_11,
        t_empty_n => outputfm_11_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_12_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_12_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_12_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_12_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_12_d0,
        i_q0 => outputfm_12_i_q0,
        t_address0 => write_output_U0_outputfm_12_address0,
        t_ce0 => write_output_U0_outputfm_12_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_12_i_full_n,
        i_write => ap_channel_done_outputfm_12,
        t_empty_n => outputfm_12_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_13_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_13_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_13_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_13_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_13_d0,
        i_q0 => outputfm_13_i_q0,
        t_address0 => write_output_U0_outputfm_13_address0,
        t_ce0 => write_output_U0_outputfm_13_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_13_i_full_n,
        i_write => ap_channel_done_outputfm_13,
        t_empty_n => outputfm_13_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_14_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_14_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_14_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_14_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_14_d0,
        i_q0 => outputfm_14_i_q0,
        t_address0 => write_output_U0_outputfm_14_address0,
        t_ce0 => write_output_U0_outputfm_14_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_14_i_full_n,
        i_write => ap_channel_done_outputfm_14,
        t_empty_n => outputfm_14_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_15_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_15_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_15_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_15_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_15_d0,
        i_q0 => outputfm_15_i_q0,
        t_address0 => write_output_U0_outputfm_15_address0,
        t_ce0 => write_output_U0_outputfm_15_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_15_i_full_n,
        i_write => ap_channel_done_outputfm_15,
        t_empty_n => outputfm_15_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_16_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_16_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_16_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_16_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_16_d0,
        i_q0 => outputfm_16_i_q0,
        t_address0 => write_output_U0_outputfm_16_address0,
        t_ce0 => write_output_U0_outputfm_16_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_16_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_16_i_full_n,
        i_write => ap_channel_done_outputfm_16,
        t_empty_n => outputfm_16_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_17_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_17_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_17_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_17_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_17_d0,
        i_q0 => outputfm_17_i_q0,
        t_address0 => write_output_U0_outputfm_17_address0,
        t_ce0 => write_output_U0_outputfm_17_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_17_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_17_i_full_n,
        i_write => ap_channel_done_outputfm_17,
        t_empty_n => outputfm_17_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_18_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_18_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_18_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_18_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_18_d0,
        i_q0 => outputfm_18_i_q0,
        t_address0 => write_output_U0_outputfm_18_address0,
        t_ce0 => write_output_U0_outputfm_18_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_18_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_18_i_full_n,
        i_write => ap_channel_done_outputfm_18,
        t_empty_n => outputfm_18_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_19_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_19_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_19_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_19_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_19_d0,
        i_q0 => outputfm_19_i_q0,
        t_address0 => write_output_U0_outputfm_19_address0,
        t_ce0 => write_output_U0_outputfm_19_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_19_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_19_i_full_n,
        i_write => ap_channel_done_outputfm_19,
        t_empty_n => outputfm_19_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_20_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_20_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_20_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_20_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_20_d0,
        i_q0 => outputfm_20_i_q0,
        t_address0 => write_output_U0_outputfm_20_address0,
        t_ce0 => write_output_U0_outputfm_20_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_20_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_20_i_full_n,
        i_write => ap_channel_done_outputfm_20,
        t_empty_n => outputfm_20_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_21_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_21_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_21_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_21_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_21_d0,
        i_q0 => outputfm_21_i_q0,
        t_address0 => write_output_U0_outputfm_21_address0,
        t_ce0 => write_output_U0_outputfm_21_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_21_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_21_i_full_n,
        i_write => ap_channel_done_outputfm_21,
        t_empty_n => outputfm_21_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_22_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_22_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_22_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_22_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_22_d0,
        i_q0 => outputfm_22_i_q0,
        t_address0 => write_output_U0_outputfm_22_address0,
        t_ce0 => write_output_U0_outputfm_22_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_22_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_22_i_full_n,
        i_write => ap_channel_done_outputfm_22,
        t_empty_n => outputfm_22_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_23_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_23_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_23_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_23_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_23_d0,
        i_q0 => outputfm_23_i_q0,
        t_address0 => write_output_U0_outputfm_23_address0,
        t_ce0 => write_output_U0_outputfm_23_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_23_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_23_i_full_n,
        i_write => ap_channel_done_outputfm_23,
        t_empty_n => outputfm_23_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_24_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_24_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_24_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_24_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_24_d0,
        i_q0 => outputfm_24_i_q0,
        t_address0 => write_output_U0_outputfm_24_address0,
        t_ce0 => write_output_U0_outputfm_24_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_24_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_24_i_full_n,
        i_write => ap_channel_done_outputfm_24,
        t_empty_n => outputfm_24_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_25_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_25_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_25_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_25_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_25_d0,
        i_q0 => outputfm_25_i_q0,
        t_address0 => write_output_U0_outputfm_25_address0,
        t_ce0 => write_output_U0_outputfm_25_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_25_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_25_i_full_n,
        i_write => ap_channel_done_outputfm_25,
        t_empty_n => outputfm_25_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_26_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_26_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_26_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_26_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_26_d0,
        i_q0 => outputfm_26_i_q0,
        t_address0 => write_output_U0_outputfm_26_address0,
        t_ce0 => write_output_U0_outputfm_26_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_26_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_26_i_full_n,
        i_write => ap_channel_done_outputfm_26,
        t_empty_n => outputfm_26_t_empty_n,
        t_read => write_output_U0_ap_ready);

    outputfm_27_U : component dataflow_out_chanbIp
    generic map (
        DataWidth => 27,
        AddressRange => 999,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dataflow_out_channel_U0_outputfm_27_address0,
        i_ce0 => dataflow_out_channel_U0_outputfm_27_ce0,
        i_we0 => dataflow_out_channel_U0_outputfm_27_we0,
        i_d0 => dataflow_out_channel_U0_outputfm_27_d0,
        i_q0 => outputfm_27_i_q0,
        t_address0 => write_output_U0_outputfm_27_address0,
        t_ce0 => write_output_U0_outputfm_27_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv27_0,
        t_q0 => outputfm_27_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => outputfm_27_i_full_n,
        i_write => ap_channel_done_outputfm_27,
        t_empty_n => outputfm_27_t_empty_n,
        t_read => write_output_U0_ap_ready);

    curr_layer_out_w_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_curr_layer_out_w_out_din,
        if_full_n => curr_layer_out_w_c_full_n,
        if_write => dataflow_out_channel_U0_curr_layer_out_w_out_write,
        if_dout => curr_layer_out_w_c_dout,
        if_empty_n => curr_layer_out_w_c_empty_n,
        if_read => write_output_U0_curr_layer_out_w_read);

    curr_layer_out_h_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_curr_layer_out_h_out_din,
        if_full_n => curr_layer_out_h_c_full_n,
        if_write => dataflow_out_channel_U0_curr_layer_out_h_out_write,
        if_dout => curr_layer_out_h_c_dout,
        if_empty_n => curr_layer_out_h_c_empty_n,
        if_read => write_output_U0_curr_layer_out_h_read);

    curr_layer_out_ch_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_curr_layer_out_ch_out_din,
        if_full_n => curr_layer_out_ch_c_full_n,
        if_write => dataflow_out_channel_U0_curr_layer_out_ch_out_write,
        if_dout => curr_layer_out_ch_c_dout,
        if_empty_n => curr_layer_out_ch_c_empty_n,
        if_read => write_output_U0_curr_layer_out_ch_read);

    to_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_to_out_din,
        if_full_n => to_c_full_n,
        if_write => dataflow_out_channel_U0_to_out_write,
        if_dout => to_c_dout,
        if_empty_n => to_c_empty_n,
        if_read => write_output_U0_to_r_read);

    row_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_row_out_din,
        if_full_n => row_c_full_n,
        if_write => dataflow_out_channel_U0_row_out_write,
        if_dout => row_c_dout,
        if_empty_n => row_c_empty_n,
        if_read => write_output_U0_row_read);

    col_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_col_out_din,
        if_full_n => col_c_full_n,
        if_write => dataflow_out_channel_U0_col_out_write,
        if_dout => col_c_dout,
        if_empty_n => col_c_empty_n,
        if_read => write_output_U0_col_read);

    output_offset_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_output_offset_out_din,
        if_full_n => output_offset_c_full_n,
        if_write => dataflow_out_channel_U0_output_offset_out_write,
        if_dout => output_offset_c_dout,
        if_empty_n => output_offset_c_empty_n,
        if_read => write_output_U0_output_offset_read);

    quantized_multiplier_2_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_quantized_multiplier_out_din,
        if_full_n => quantized_multiplier_2_full_n,
        if_write => dataflow_out_channel_U0_quantized_multiplier_out_write,
        if_dout => quantized_multiplier_2_dout,
        if_empty_n => quantized_multiplier_2_empty_n,
        if_read => write_output_U0_quantized_multiplier_read);

    right_shift_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_right_shift_out_din,
        if_full_n => right_shift_c_full_n,
        if_write => dataflow_out_channel_U0_right_shift_out_write,
        if_dout => right_shift_c_dout,
        if_empty_n => right_shift_c_empty_n,
        if_read => write_output_U0_right_shift_read);

    out_offset_c_U : component fifo_w32_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_out_channel_U0_out_offset_out_din,
        if_full_n => out_offset_c_full_n,
        if_write => dataflow_out_channel_U0_out_offset_out_write,
        if_dout => out_offset_c_dout,
        if_empty_n => out_offset_c_empty_n,
        if_read => write_output_U0_out_offset_read);





    ap_reg_dataflow_out_channel_U0_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_dataflow_out_channel_U0_ap_done <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sync_done)) then 
                    ap_reg_dataflow_out_channel_U0_ap_done <= ap_const_logic_0;
                else 
                    ap_reg_dataflow_out_channel_U0_ap_done <= (dataflow_out_channel_U0_ap_done or ap_reg_dataflow_out_channel_U0_ap_done);
                end if; 
            end if;
        end if;
    end process;


    ap_reg_write_output_U0_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_write_output_U0_ap_done <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sync_done)) then 
                    ap_reg_write_output_U0_ap_done <= ap_const_logic_0;
                else 
                    ap_reg_write_output_U0_ap_done <= (write_output_U0_ap_done or ap_reg_write_output_U0_ap_done);
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_0 <= ap_sync_channel_write_outputfm_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_1 <= ap_sync_channel_write_outputfm_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_10 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_10 <= ap_sync_channel_write_outputfm_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_11 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_11 <= ap_sync_channel_write_outputfm_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_12 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_12 <= ap_sync_channel_write_outputfm_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_13 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_13 <= ap_sync_channel_write_outputfm_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_14 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_14 <= ap_sync_channel_write_outputfm_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_15 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_15 <= ap_sync_channel_write_outputfm_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_16 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_16 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_16 <= ap_sync_channel_write_outputfm_16;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_17 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_17 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_17 <= ap_sync_channel_write_outputfm_17;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_18 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_18 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_18 <= ap_sync_channel_write_outputfm_18;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_19 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_19 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_19 <= ap_sync_channel_write_outputfm_19;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_2 <= ap_sync_channel_write_outputfm_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_20 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_20 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_20 <= ap_sync_channel_write_outputfm_20;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_21 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_21 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_21 <= ap_sync_channel_write_outputfm_21;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_22 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_22 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_22 <= ap_sync_channel_write_outputfm_22;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_23 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_23 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_23 <= ap_sync_channel_write_outputfm_23;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_24 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_24 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_24 <= ap_sync_channel_write_outputfm_24;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_25 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_25 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_25 <= ap_sync_channel_write_outputfm_25;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_26 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_26 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_26 <= ap_sync_channel_write_outputfm_26;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_27 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_27 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_27 <= ap_sync_channel_write_outputfm_27;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_3 <= ap_sync_channel_write_outputfm_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_4 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_4 <= ap_sync_channel_write_outputfm_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_5 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_5 <= ap_sync_channel_write_outputfm_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_6 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_6 <= ap_sync_channel_write_outputfm_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_7 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_7 <= ap_sync_channel_write_outputfm_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_8 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_8 <= ap_sync_channel_write_outputfm_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_outputfm_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_outputfm_9 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dataflow_out_channel_U0_ap_done and dataflow_out_channel_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_outputfm_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_outputfm_9 <= ap_sync_channel_write_outputfm_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_dataflow_out_channel_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_dataflow_out_channel_U0_ap_ready <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (ap_sync_ready and ap_start))) then 
                    ap_sync_reg_dataflow_out_channel_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_dataflow_out_channel_U0_ap_ready <= ap_sync_dataflow_out_channel_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_write_output_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_write_output_U0_ap_ready <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (ap_sync_ready and ap_start))) then 
                    ap_sync_reg_write_output_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_write_output_U0_ap_ready <= ap_sync_write_output_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    dataflow_out_channel_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sync_ready) and (ap_const_logic_0 = dataflow_out_channel_U0_ap_ready))) then 
                dataflow_out_channel_U0_ap_ready_count <= std_logic_vector(unsigned(dataflow_out_channel_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_0 = ap_sync_ready) and (dataflow_out_channel_U0_ap_ready = ap_const_logic_1))) then 
                dataflow_out_channel_U0_ap_ready_count <= std_logic_vector(unsigned(dataflow_out_channel_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    write_output_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sync_ready) and (ap_const_logic_0 = write_output_U0_ap_ready))) then 
                write_output_U0_ap_ready_count <= std_logic_vector(unsigned(write_output_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = write_output_U0_ap_ready) and (ap_const_logic_0 = ap_sync_ready))) then 
                write_output_U0_ap_ready_count <= std_logic_vector(unsigned(write_output_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    ap_channel_done_outputfm_0 <= ((ap_sync_reg_channel_write_outputfm_0 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_1 <= ((ap_sync_reg_channel_write_outputfm_1 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_10 <= ((ap_sync_reg_channel_write_outputfm_10 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_11 <= ((ap_sync_reg_channel_write_outputfm_11 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_12 <= ((ap_sync_reg_channel_write_outputfm_12 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_13 <= ((ap_sync_reg_channel_write_outputfm_13 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_14 <= ((ap_sync_reg_channel_write_outputfm_14 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_15 <= ((ap_sync_reg_channel_write_outputfm_15 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_16 <= ((ap_sync_reg_channel_write_outputfm_16 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_17 <= ((ap_sync_reg_channel_write_outputfm_17 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_18 <= ((ap_sync_reg_channel_write_outputfm_18 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_19 <= ((ap_sync_reg_channel_write_outputfm_19 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_2 <= ((ap_sync_reg_channel_write_outputfm_2 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_20 <= ((ap_sync_reg_channel_write_outputfm_20 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_21 <= ((ap_sync_reg_channel_write_outputfm_21 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_22 <= ((ap_sync_reg_channel_write_outputfm_22 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_23 <= ((ap_sync_reg_channel_write_outputfm_23 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_24 <= ((ap_sync_reg_channel_write_outputfm_24 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_25 <= ((ap_sync_reg_channel_write_outputfm_25 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_26 <= ((ap_sync_reg_channel_write_outputfm_26 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_27 <= ((ap_sync_reg_channel_write_outputfm_27 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_3 <= ((ap_sync_reg_channel_write_outputfm_3 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_4 <= ((ap_sync_reg_channel_write_outputfm_4 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_5 <= ((ap_sync_reg_channel_write_outputfm_5 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_6 <= ((ap_sync_reg_channel_write_outputfm_6 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_7 <= ((ap_sync_reg_channel_write_outputfm_7 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_8 <= ((ap_sync_reg_channel_write_outputfm_8 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_channel_done_outputfm_9 <= ((ap_sync_reg_channel_write_outputfm_9 xor ap_const_logic_1) and dataflow_out_channel_U0_ap_done);
    ap_done <= ap_sync_done;
    ap_idle <= (write_output_U0_ap_idle and (outputfm_27_t_empty_n xor ap_const_logic_1) and (outputfm_26_t_empty_n xor ap_const_logic_1) and (outputfm_25_t_empty_n xor ap_const_logic_1) and (outputfm_24_t_empty_n xor ap_const_logic_1) and (outputfm_23_t_empty_n xor ap_const_logic_1) and (outputfm_22_t_empty_n xor ap_const_logic_1) and (outputfm_21_t_empty_n xor ap_const_logic_1) and (outputfm_20_t_empty_n xor ap_const_logic_1) and (outputfm_19_t_empty_n xor ap_const_logic_1) and (outputfm_18_t_empty_n xor ap_const_logic_1) and (outputfm_17_t_empty_n xor ap_const_logic_1) and (outputfm_16_t_empty_n xor ap_const_logic_1) and (outputfm_15_t_empty_n xor ap_const_logic_1) and (outputfm_14_t_empty_n xor ap_const_logic_1) and (outputfm_13_t_empty_n xor ap_const_logic_1) and (outputfm_12_t_empty_n xor ap_const_logic_1) and (outputfm_11_t_empty_n xor ap_const_logic_1) and (outputfm_10_t_empty_n xor ap_const_logic_1) and (outputfm_9_t_empty_n xor ap_const_logic_1) and (outputfm_8_t_empty_n xor ap_const_logic_1) and (outputfm_7_t_empty_n xor ap_const_logic_1) and (outputfm_6_t_empty_n xor ap_const_logic_1) and (outputfm_5_t_empty_n xor ap_const_logic_1) and (outputfm_4_t_empty_n xor ap_const_logic_1) and (outputfm_3_t_empty_n xor ap_const_logic_1) and (outputfm_2_t_empty_n xor ap_const_logic_1) and (outputfm_1_t_empty_n xor ap_const_logic_1) and (outputfm_0_t_empty_n xor ap_const_logic_1) and dataflow_out_channel_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_outputfm_0 <= ((dataflow_out_channel_U0_outputfm_0_full_n and ap_channel_done_outputfm_0) or ap_sync_reg_channel_write_outputfm_0);
    ap_sync_channel_write_outputfm_1 <= ((dataflow_out_channel_U0_outputfm_1_full_n and ap_channel_done_outputfm_1) or ap_sync_reg_channel_write_outputfm_1);
    ap_sync_channel_write_outputfm_10 <= ((dataflow_out_channel_U0_outputfm_10_full_n and ap_channel_done_outputfm_10) or ap_sync_reg_channel_write_outputfm_10);
    ap_sync_channel_write_outputfm_11 <= ((dataflow_out_channel_U0_outputfm_11_full_n and ap_channel_done_outputfm_11) or ap_sync_reg_channel_write_outputfm_11);
    ap_sync_channel_write_outputfm_12 <= ((dataflow_out_channel_U0_outputfm_12_full_n and ap_channel_done_outputfm_12) or ap_sync_reg_channel_write_outputfm_12);
    ap_sync_channel_write_outputfm_13 <= ((dataflow_out_channel_U0_outputfm_13_full_n and ap_channel_done_outputfm_13) or ap_sync_reg_channel_write_outputfm_13);
    ap_sync_channel_write_outputfm_14 <= ((dataflow_out_channel_U0_outputfm_14_full_n and ap_channel_done_outputfm_14) or ap_sync_reg_channel_write_outputfm_14);
    ap_sync_channel_write_outputfm_15 <= ((dataflow_out_channel_U0_outputfm_15_full_n and ap_channel_done_outputfm_15) or ap_sync_reg_channel_write_outputfm_15);
    ap_sync_channel_write_outputfm_16 <= ((dataflow_out_channel_U0_outputfm_16_full_n and ap_channel_done_outputfm_16) or ap_sync_reg_channel_write_outputfm_16);
    ap_sync_channel_write_outputfm_17 <= ((dataflow_out_channel_U0_outputfm_17_full_n and ap_channel_done_outputfm_17) or ap_sync_reg_channel_write_outputfm_17);
    ap_sync_channel_write_outputfm_18 <= ((dataflow_out_channel_U0_outputfm_18_full_n and ap_channel_done_outputfm_18) or ap_sync_reg_channel_write_outputfm_18);
    ap_sync_channel_write_outputfm_19 <= ((dataflow_out_channel_U0_outputfm_19_full_n and ap_channel_done_outputfm_19) or ap_sync_reg_channel_write_outputfm_19);
    ap_sync_channel_write_outputfm_2 <= ((dataflow_out_channel_U0_outputfm_2_full_n and ap_channel_done_outputfm_2) or ap_sync_reg_channel_write_outputfm_2);
    ap_sync_channel_write_outputfm_20 <= ((dataflow_out_channel_U0_outputfm_20_full_n and ap_channel_done_outputfm_20) or ap_sync_reg_channel_write_outputfm_20);
    ap_sync_channel_write_outputfm_21 <= ((dataflow_out_channel_U0_outputfm_21_full_n and ap_channel_done_outputfm_21) or ap_sync_reg_channel_write_outputfm_21);
    ap_sync_channel_write_outputfm_22 <= ((dataflow_out_channel_U0_outputfm_22_full_n and ap_channel_done_outputfm_22) or ap_sync_reg_channel_write_outputfm_22);
    ap_sync_channel_write_outputfm_23 <= ((dataflow_out_channel_U0_outputfm_23_full_n and ap_channel_done_outputfm_23) or ap_sync_reg_channel_write_outputfm_23);
    ap_sync_channel_write_outputfm_24 <= ((dataflow_out_channel_U0_outputfm_24_full_n and ap_channel_done_outputfm_24) or ap_sync_reg_channel_write_outputfm_24);
    ap_sync_channel_write_outputfm_25 <= ((dataflow_out_channel_U0_outputfm_25_full_n and ap_channel_done_outputfm_25) or ap_sync_reg_channel_write_outputfm_25);
    ap_sync_channel_write_outputfm_26 <= ((dataflow_out_channel_U0_outputfm_26_full_n and ap_channel_done_outputfm_26) or ap_sync_reg_channel_write_outputfm_26);
    ap_sync_channel_write_outputfm_27 <= ((dataflow_out_channel_U0_outputfm_27_full_n and ap_channel_done_outputfm_27) or ap_sync_reg_channel_write_outputfm_27);
    ap_sync_channel_write_outputfm_3 <= ((dataflow_out_channel_U0_outputfm_3_full_n and ap_channel_done_outputfm_3) or ap_sync_reg_channel_write_outputfm_3);
    ap_sync_channel_write_outputfm_4 <= ((dataflow_out_channel_U0_outputfm_4_full_n and ap_channel_done_outputfm_4) or ap_sync_reg_channel_write_outputfm_4);
    ap_sync_channel_write_outputfm_5 <= ((dataflow_out_channel_U0_outputfm_5_full_n and ap_channel_done_outputfm_5) or ap_sync_reg_channel_write_outputfm_5);
    ap_sync_channel_write_outputfm_6 <= ((dataflow_out_channel_U0_outputfm_6_full_n and ap_channel_done_outputfm_6) or ap_sync_reg_channel_write_outputfm_6);
    ap_sync_channel_write_outputfm_7 <= ((dataflow_out_channel_U0_outputfm_7_full_n and ap_channel_done_outputfm_7) or ap_sync_reg_channel_write_outputfm_7);
    ap_sync_channel_write_outputfm_8 <= ((dataflow_out_channel_U0_outputfm_8_full_n and ap_channel_done_outputfm_8) or ap_sync_reg_channel_write_outputfm_8);
    ap_sync_channel_write_outputfm_9 <= ((dataflow_out_channel_U0_outputfm_9_full_n and ap_channel_done_outputfm_9) or ap_sync_reg_channel_write_outputfm_9);
    ap_sync_continue <= ap_continue;
    ap_sync_dataflow_out_channel_U0_ap_ready <= (dataflow_out_channel_U0_ap_ready or ap_sync_reg_dataflow_out_channel_U0_ap_ready);
    ap_sync_done <= (ap_reg_write_output_U0_ap_done and ap_reg_dataflow_out_channel_U0_ap_done);
    ap_sync_ready <= (ap_sync_write_output_U0_ap_ready and ap_sync_dataflow_out_channel_U0_ap_ready);
    ap_sync_write_output_U0_ap_ready <= (write_output_U0_ap_ready or ap_sync_reg_write_output_U0_ap_ready);
    dataflow_out_channel_U0_ap_continue <= (ap_sync_channel_write_outputfm_9 and ap_sync_channel_write_outputfm_8 and ap_sync_channel_write_outputfm_7 and ap_sync_channel_write_outputfm_6 and ap_sync_channel_write_outputfm_5 and ap_sync_channel_write_outputfm_4 and ap_sync_channel_write_outputfm_3 and ap_sync_channel_write_outputfm_27 and ap_sync_channel_write_outputfm_26 and ap_sync_channel_write_outputfm_25 and ap_sync_channel_write_outputfm_24 and ap_sync_channel_write_outputfm_23 and ap_sync_channel_write_outputfm_22 and ap_sync_channel_write_outputfm_21 and ap_sync_channel_write_outputfm_20 and ap_sync_channel_write_outputfm_2 and ap_sync_channel_write_outputfm_19 and ap_sync_channel_write_outputfm_18 and ap_sync_channel_write_outputfm_17 and ap_sync_channel_write_outputfm_16 and ap_sync_channel_write_outputfm_15 and ap_sync_channel_write_outputfm_14 and ap_sync_channel_write_outputfm_13 and ap_sync_channel_write_outputfm_12 and ap_sync_channel_write_outputfm_11 and ap_sync_channel_write_outputfm_10 and ap_sync_channel_write_outputfm_1 and ap_sync_channel_write_outputfm_0);
    dataflow_out_channel_U0_ap_start <= ((ap_sync_reg_dataflow_out_channel_U0_ap_ready xor ap_const_logic_1) and ap_start);
    dataflow_out_channel_U0_outputfm_0_full_n <= outputfm_0_i_full_n;
    dataflow_out_channel_U0_outputfm_10_full_n <= outputfm_10_i_full_n;
    dataflow_out_channel_U0_outputfm_11_full_n <= outputfm_11_i_full_n;
    dataflow_out_channel_U0_outputfm_12_full_n <= outputfm_12_i_full_n;
    dataflow_out_channel_U0_outputfm_13_full_n <= outputfm_13_i_full_n;
    dataflow_out_channel_U0_outputfm_14_full_n <= outputfm_14_i_full_n;
    dataflow_out_channel_U0_outputfm_15_full_n <= outputfm_15_i_full_n;
    dataflow_out_channel_U0_outputfm_16_full_n <= outputfm_16_i_full_n;
    dataflow_out_channel_U0_outputfm_17_full_n <= outputfm_17_i_full_n;
    dataflow_out_channel_U0_outputfm_18_full_n <= outputfm_18_i_full_n;
    dataflow_out_channel_U0_outputfm_19_full_n <= outputfm_19_i_full_n;
    dataflow_out_channel_U0_outputfm_1_full_n <= outputfm_1_i_full_n;
    dataflow_out_channel_U0_outputfm_20_full_n <= outputfm_20_i_full_n;
    dataflow_out_channel_U0_outputfm_21_full_n <= outputfm_21_i_full_n;
    dataflow_out_channel_U0_outputfm_22_full_n <= outputfm_22_i_full_n;
    dataflow_out_channel_U0_outputfm_23_full_n <= outputfm_23_i_full_n;
    dataflow_out_channel_U0_outputfm_24_full_n <= outputfm_24_i_full_n;
    dataflow_out_channel_U0_outputfm_25_full_n <= outputfm_25_i_full_n;
    dataflow_out_channel_U0_outputfm_26_full_n <= outputfm_26_i_full_n;
    dataflow_out_channel_U0_outputfm_27_full_n <= outputfm_27_i_full_n;
    dataflow_out_channel_U0_outputfm_2_full_n <= outputfm_2_i_full_n;
    dataflow_out_channel_U0_outputfm_3_full_n <= outputfm_3_i_full_n;
    dataflow_out_channel_U0_outputfm_4_full_n <= outputfm_4_i_full_n;
    dataflow_out_channel_U0_outputfm_5_full_n <= outputfm_5_i_full_n;
    dataflow_out_channel_U0_outputfm_6_full_n <= outputfm_6_i_full_n;
    dataflow_out_channel_U0_outputfm_7_full_n <= outputfm_7_i_full_n;
    dataflow_out_channel_U0_outputfm_8_full_n <= outputfm_8_i_full_n;
    dataflow_out_channel_U0_outputfm_9_full_n <= outputfm_9_i_full_n;
    dataflow_out_channel_U0_start_full_n <= ap_const_logic_0;
    dataflow_out_channel_U0_start_write <= ap_const_logic_0;
    m_axi_weights_ARADDR <= dataflow_out_channel_U0_m_axi_weights_ARADDR;
    m_axi_weights_ARBURST <= dataflow_out_channel_U0_m_axi_weights_ARBURST;
    m_axi_weights_ARCACHE <= dataflow_out_channel_U0_m_axi_weights_ARCACHE;
    m_axi_weights_ARID <= dataflow_out_channel_U0_m_axi_weights_ARID;
    m_axi_weights_ARLEN <= dataflow_out_channel_U0_m_axi_weights_ARLEN;
    m_axi_weights_ARLOCK <= dataflow_out_channel_U0_m_axi_weights_ARLOCK;
    m_axi_weights_ARPROT <= dataflow_out_channel_U0_m_axi_weights_ARPROT;
    m_axi_weights_ARQOS <= dataflow_out_channel_U0_m_axi_weights_ARQOS;
    m_axi_weights_ARREGION <= dataflow_out_channel_U0_m_axi_weights_ARREGION;
    m_axi_weights_ARSIZE <= dataflow_out_channel_U0_m_axi_weights_ARSIZE;
    m_axi_weights_ARUSER <= dataflow_out_channel_U0_m_axi_weights_ARUSER;
    m_axi_weights_ARVALID <= dataflow_out_channel_U0_m_axi_weights_ARVALID;
    m_axi_weights_AWADDR <= write_output_U0_m_axi_out_r_AWADDR;
    m_axi_weights_AWBURST <= write_output_U0_m_axi_out_r_AWBURST;
    m_axi_weights_AWCACHE <= write_output_U0_m_axi_out_r_AWCACHE;
    m_axi_weights_AWID <= write_output_U0_m_axi_out_r_AWID;
    m_axi_weights_AWLEN <= write_output_U0_m_axi_out_r_AWLEN;
    m_axi_weights_AWLOCK <= write_output_U0_m_axi_out_r_AWLOCK;
    m_axi_weights_AWPROT <= write_output_U0_m_axi_out_r_AWPROT;
    m_axi_weights_AWQOS <= write_output_U0_m_axi_out_r_AWQOS;
    m_axi_weights_AWREGION <= write_output_U0_m_axi_out_r_AWREGION;
    m_axi_weights_AWSIZE <= write_output_U0_m_axi_out_r_AWSIZE;
    m_axi_weights_AWUSER <= write_output_U0_m_axi_out_r_AWUSER;
    m_axi_weights_AWVALID <= write_output_U0_m_axi_out_r_AWVALID;
    m_axi_weights_BREADY <= write_output_U0_m_axi_out_r_BREADY;
    m_axi_weights_RREADY <= dataflow_out_channel_U0_m_axi_weights_RREADY;
    m_axi_weights_WDATA <= write_output_U0_m_axi_out_r_WDATA;
    m_axi_weights_WID <= write_output_U0_m_axi_out_r_WID;
    m_axi_weights_WLAST <= write_output_U0_m_axi_out_r_WLAST;
    m_axi_weights_WSTRB <= write_output_U0_m_axi_out_r_WSTRB;
    m_axi_weights_WUSER <= write_output_U0_m_axi_out_r_WUSER;
    m_axi_weights_WVALID <= write_output_U0_m_axi_out_r_WVALID;
    partial_outputfm_0_address0 <= dataflow_out_channel_U0_partial_outputfm_0_address0;
    partial_outputfm_0_address1 <= dataflow_out_channel_U0_partial_outputfm_0_address1;
    partial_outputfm_0_ce0 <= dataflow_out_channel_U0_partial_outputfm_0_ce0;
    partial_outputfm_0_ce1 <= dataflow_out_channel_U0_partial_outputfm_0_ce1;
    partial_outputfm_0_d0 <= ap_const_lv27_0;
    partial_outputfm_0_d1 <= dataflow_out_channel_U0_partial_outputfm_0_d1;
    partial_outputfm_0_we0 <= ap_const_logic_0;
    partial_outputfm_0_we1 <= dataflow_out_channel_U0_partial_outputfm_0_we1;
    partial_outputfm_10_address0 <= dataflow_out_channel_U0_partial_outputfm_10_address0;
    partial_outputfm_10_address1 <= dataflow_out_channel_U0_partial_outputfm_10_address1;
    partial_outputfm_10_ce0 <= dataflow_out_channel_U0_partial_outputfm_10_ce0;
    partial_outputfm_10_ce1 <= dataflow_out_channel_U0_partial_outputfm_10_ce1;
    partial_outputfm_10_d0 <= ap_const_lv27_0;
    partial_outputfm_10_d1 <= dataflow_out_channel_U0_partial_outputfm_10_d1;
    partial_outputfm_10_we0 <= ap_const_logic_0;
    partial_outputfm_10_we1 <= dataflow_out_channel_U0_partial_outputfm_10_we1;
    partial_outputfm_11_address0 <= dataflow_out_channel_U0_partial_outputfm_11_address0;
    partial_outputfm_11_address1 <= dataflow_out_channel_U0_partial_outputfm_11_address1;
    partial_outputfm_11_ce0 <= dataflow_out_channel_U0_partial_outputfm_11_ce0;
    partial_outputfm_11_ce1 <= dataflow_out_channel_U0_partial_outputfm_11_ce1;
    partial_outputfm_11_d0 <= ap_const_lv27_0;
    partial_outputfm_11_d1 <= dataflow_out_channel_U0_partial_outputfm_11_d1;
    partial_outputfm_11_we0 <= ap_const_logic_0;
    partial_outputfm_11_we1 <= dataflow_out_channel_U0_partial_outputfm_11_we1;
    partial_outputfm_12_address0 <= dataflow_out_channel_U0_partial_outputfm_12_address0;
    partial_outputfm_12_address1 <= dataflow_out_channel_U0_partial_outputfm_12_address1;
    partial_outputfm_12_ce0 <= dataflow_out_channel_U0_partial_outputfm_12_ce0;
    partial_outputfm_12_ce1 <= dataflow_out_channel_U0_partial_outputfm_12_ce1;
    partial_outputfm_12_d0 <= ap_const_lv27_0;
    partial_outputfm_12_d1 <= dataflow_out_channel_U0_partial_outputfm_12_d1;
    partial_outputfm_12_we0 <= ap_const_logic_0;
    partial_outputfm_12_we1 <= dataflow_out_channel_U0_partial_outputfm_12_we1;
    partial_outputfm_13_address0 <= dataflow_out_channel_U0_partial_outputfm_13_address0;
    partial_outputfm_13_address1 <= dataflow_out_channel_U0_partial_outputfm_13_address1;
    partial_outputfm_13_ce0 <= dataflow_out_channel_U0_partial_outputfm_13_ce0;
    partial_outputfm_13_ce1 <= dataflow_out_channel_U0_partial_outputfm_13_ce1;
    partial_outputfm_13_d0 <= ap_const_lv27_0;
    partial_outputfm_13_d1 <= dataflow_out_channel_U0_partial_outputfm_13_d1;
    partial_outputfm_13_we0 <= ap_const_logic_0;
    partial_outputfm_13_we1 <= dataflow_out_channel_U0_partial_outputfm_13_we1;
    partial_outputfm_14_address0 <= dataflow_out_channel_U0_partial_outputfm_14_address0;
    partial_outputfm_14_address1 <= dataflow_out_channel_U0_partial_outputfm_14_address1;
    partial_outputfm_14_ce0 <= dataflow_out_channel_U0_partial_outputfm_14_ce0;
    partial_outputfm_14_ce1 <= dataflow_out_channel_U0_partial_outputfm_14_ce1;
    partial_outputfm_14_d0 <= ap_const_lv27_0;
    partial_outputfm_14_d1 <= dataflow_out_channel_U0_partial_outputfm_14_d1;
    partial_outputfm_14_we0 <= ap_const_logic_0;
    partial_outputfm_14_we1 <= dataflow_out_channel_U0_partial_outputfm_14_we1;
    partial_outputfm_15_address0 <= dataflow_out_channel_U0_partial_outputfm_15_address0;
    partial_outputfm_15_address1 <= dataflow_out_channel_U0_partial_outputfm_15_address1;
    partial_outputfm_15_ce0 <= dataflow_out_channel_U0_partial_outputfm_15_ce0;
    partial_outputfm_15_ce1 <= dataflow_out_channel_U0_partial_outputfm_15_ce1;
    partial_outputfm_15_d0 <= ap_const_lv27_0;
    partial_outputfm_15_d1 <= dataflow_out_channel_U0_partial_outputfm_15_d1;
    partial_outputfm_15_we0 <= ap_const_logic_0;
    partial_outputfm_15_we1 <= dataflow_out_channel_U0_partial_outputfm_15_we1;
    partial_outputfm_16_address0 <= dataflow_out_channel_U0_partial_outputfm_16_address0;
    partial_outputfm_16_address1 <= dataflow_out_channel_U0_partial_outputfm_16_address1;
    partial_outputfm_16_ce0 <= dataflow_out_channel_U0_partial_outputfm_16_ce0;
    partial_outputfm_16_ce1 <= dataflow_out_channel_U0_partial_outputfm_16_ce1;
    partial_outputfm_16_d0 <= ap_const_lv27_0;
    partial_outputfm_16_d1 <= dataflow_out_channel_U0_partial_outputfm_16_d1;
    partial_outputfm_16_we0 <= ap_const_logic_0;
    partial_outputfm_16_we1 <= dataflow_out_channel_U0_partial_outputfm_16_we1;
    partial_outputfm_17_address0 <= dataflow_out_channel_U0_partial_outputfm_17_address0;
    partial_outputfm_17_address1 <= dataflow_out_channel_U0_partial_outputfm_17_address1;
    partial_outputfm_17_ce0 <= dataflow_out_channel_U0_partial_outputfm_17_ce0;
    partial_outputfm_17_ce1 <= dataflow_out_channel_U0_partial_outputfm_17_ce1;
    partial_outputfm_17_d0 <= ap_const_lv27_0;
    partial_outputfm_17_d1 <= dataflow_out_channel_U0_partial_outputfm_17_d1;
    partial_outputfm_17_we0 <= ap_const_logic_0;
    partial_outputfm_17_we1 <= dataflow_out_channel_U0_partial_outputfm_17_we1;
    partial_outputfm_18_address0 <= dataflow_out_channel_U0_partial_outputfm_18_address0;
    partial_outputfm_18_address1 <= dataflow_out_channel_U0_partial_outputfm_18_address1;
    partial_outputfm_18_ce0 <= dataflow_out_channel_U0_partial_outputfm_18_ce0;
    partial_outputfm_18_ce1 <= dataflow_out_channel_U0_partial_outputfm_18_ce1;
    partial_outputfm_18_d0 <= ap_const_lv27_0;
    partial_outputfm_18_d1 <= dataflow_out_channel_U0_partial_outputfm_18_d1;
    partial_outputfm_18_we0 <= ap_const_logic_0;
    partial_outputfm_18_we1 <= dataflow_out_channel_U0_partial_outputfm_18_we1;
    partial_outputfm_19_address0 <= dataflow_out_channel_U0_partial_outputfm_19_address0;
    partial_outputfm_19_address1 <= dataflow_out_channel_U0_partial_outputfm_19_address1;
    partial_outputfm_19_ce0 <= dataflow_out_channel_U0_partial_outputfm_19_ce0;
    partial_outputfm_19_ce1 <= dataflow_out_channel_U0_partial_outputfm_19_ce1;
    partial_outputfm_19_d0 <= ap_const_lv27_0;
    partial_outputfm_19_d1 <= dataflow_out_channel_U0_partial_outputfm_19_d1;
    partial_outputfm_19_we0 <= ap_const_logic_0;
    partial_outputfm_19_we1 <= dataflow_out_channel_U0_partial_outputfm_19_we1;
    partial_outputfm_1_address0 <= dataflow_out_channel_U0_partial_outputfm_1_address0;
    partial_outputfm_1_address1 <= dataflow_out_channel_U0_partial_outputfm_1_address1;
    partial_outputfm_1_ce0 <= dataflow_out_channel_U0_partial_outputfm_1_ce0;
    partial_outputfm_1_ce1 <= dataflow_out_channel_U0_partial_outputfm_1_ce1;
    partial_outputfm_1_d0 <= ap_const_lv27_0;
    partial_outputfm_1_d1 <= dataflow_out_channel_U0_partial_outputfm_1_d1;
    partial_outputfm_1_we0 <= ap_const_logic_0;
    partial_outputfm_1_we1 <= dataflow_out_channel_U0_partial_outputfm_1_we1;
    partial_outputfm_20_address0 <= dataflow_out_channel_U0_partial_outputfm_20_address0;
    partial_outputfm_20_address1 <= dataflow_out_channel_U0_partial_outputfm_20_address1;
    partial_outputfm_20_ce0 <= dataflow_out_channel_U0_partial_outputfm_20_ce0;
    partial_outputfm_20_ce1 <= dataflow_out_channel_U0_partial_outputfm_20_ce1;
    partial_outputfm_20_d0 <= ap_const_lv27_0;
    partial_outputfm_20_d1 <= dataflow_out_channel_U0_partial_outputfm_20_d1;
    partial_outputfm_20_we0 <= ap_const_logic_0;
    partial_outputfm_20_we1 <= dataflow_out_channel_U0_partial_outputfm_20_we1;
    partial_outputfm_21_address0 <= dataflow_out_channel_U0_partial_outputfm_21_address0;
    partial_outputfm_21_address1 <= dataflow_out_channel_U0_partial_outputfm_21_address1;
    partial_outputfm_21_ce0 <= dataflow_out_channel_U0_partial_outputfm_21_ce0;
    partial_outputfm_21_ce1 <= dataflow_out_channel_U0_partial_outputfm_21_ce1;
    partial_outputfm_21_d0 <= ap_const_lv27_0;
    partial_outputfm_21_d1 <= dataflow_out_channel_U0_partial_outputfm_21_d1;
    partial_outputfm_21_we0 <= ap_const_logic_0;
    partial_outputfm_21_we1 <= dataflow_out_channel_U0_partial_outputfm_21_we1;
    partial_outputfm_22_address0 <= dataflow_out_channel_U0_partial_outputfm_22_address0;
    partial_outputfm_22_address1 <= dataflow_out_channel_U0_partial_outputfm_22_address1;
    partial_outputfm_22_ce0 <= dataflow_out_channel_U0_partial_outputfm_22_ce0;
    partial_outputfm_22_ce1 <= dataflow_out_channel_U0_partial_outputfm_22_ce1;
    partial_outputfm_22_d0 <= ap_const_lv27_0;
    partial_outputfm_22_d1 <= dataflow_out_channel_U0_partial_outputfm_22_d1;
    partial_outputfm_22_we0 <= ap_const_logic_0;
    partial_outputfm_22_we1 <= dataflow_out_channel_U0_partial_outputfm_22_we1;
    partial_outputfm_23_address0 <= dataflow_out_channel_U0_partial_outputfm_23_address0;
    partial_outputfm_23_address1 <= dataflow_out_channel_U0_partial_outputfm_23_address1;
    partial_outputfm_23_ce0 <= dataflow_out_channel_U0_partial_outputfm_23_ce0;
    partial_outputfm_23_ce1 <= dataflow_out_channel_U0_partial_outputfm_23_ce1;
    partial_outputfm_23_d0 <= ap_const_lv27_0;
    partial_outputfm_23_d1 <= dataflow_out_channel_U0_partial_outputfm_23_d1;
    partial_outputfm_23_we0 <= ap_const_logic_0;
    partial_outputfm_23_we1 <= dataflow_out_channel_U0_partial_outputfm_23_we1;
    partial_outputfm_24_address0 <= dataflow_out_channel_U0_partial_outputfm_24_address0;
    partial_outputfm_24_address1 <= dataflow_out_channel_U0_partial_outputfm_24_address1;
    partial_outputfm_24_ce0 <= dataflow_out_channel_U0_partial_outputfm_24_ce0;
    partial_outputfm_24_ce1 <= dataflow_out_channel_U0_partial_outputfm_24_ce1;
    partial_outputfm_24_d0 <= ap_const_lv27_0;
    partial_outputfm_24_d1 <= dataflow_out_channel_U0_partial_outputfm_24_d1;
    partial_outputfm_24_we0 <= ap_const_logic_0;
    partial_outputfm_24_we1 <= dataflow_out_channel_U0_partial_outputfm_24_we1;
    partial_outputfm_25_address0 <= dataflow_out_channel_U0_partial_outputfm_25_address0;
    partial_outputfm_25_address1 <= dataflow_out_channel_U0_partial_outputfm_25_address1;
    partial_outputfm_25_ce0 <= dataflow_out_channel_U0_partial_outputfm_25_ce0;
    partial_outputfm_25_ce1 <= dataflow_out_channel_U0_partial_outputfm_25_ce1;
    partial_outputfm_25_d0 <= ap_const_lv27_0;
    partial_outputfm_25_d1 <= dataflow_out_channel_U0_partial_outputfm_25_d1;
    partial_outputfm_25_we0 <= ap_const_logic_0;
    partial_outputfm_25_we1 <= dataflow_out_channel_U0_partial_outputfm_25_we1;
    partial_outputfm_26_address0 <= dataflow_out_channel_U0_partial_outputfm_26_address0;
    partial_outputfm_26_address1 <= dataflow_out_channel_U0_partial_outputfm_26_address1;
    partial_outputfm_26_ce0 <= dataflow_out_channel_U0_partial_outputfm_26_ce0;
    partial_outputfm_26_ce1 <= dataflow_out_channel_U0_partial_outputfm_26_ce1;
    partial_outputfm_26_d0 <= ap_const_lv27_0;
    partial_outputfm_26_d1 <= dataflow_out_channel_U0_partial_outputfm_26_d1;
    partial_outputfm_26_we0 <= ap_const_logic_0;
    partial_outputfm_26_we1 <= dataflow_out_channel_U0_partial_outputfm_26_we1;
    partial_outputfm_27_address0 <= dataflow_out_channel_U0_partial_outputfm_27_address0;
    partial_outputfm_27_address1 <= dataflow_out_channel_U0_partial_outputfm_27_address1;
    partial_outputfm_27_ce0 <= dataflow_out_channel_U0_partial_outputfm_27_ce0;
    partial_outputfm_27_ce1 <= dataflow_out_channel_U0_partial_outputfm_27_ce1;
    partial_outputfm_27_d0 <= ap_const_lv27_0;
    partial_outputfm_27_d1 <= dataflow_out_channel_U0_partial_outputfm_27_d1;
    partial_outputfm_27_we0 <= ap_const_logic_0;
    partial_outputfm_27_we1 <= dataflow_out_channel_U0_partial_outputfm_27_we1;
    partial_outputfm_2_address0 <= dataflow_out_channel_U0_partial_outputfm_2_address0;
    partial_outputfm_2_address1 <= dataflow_out_channel_U0_partial_outputfm_2_address1;
    partial_outputfm_2_ce0 <= dataflow_out_channel_U0_partial_outputfm_2_ce0;
    partial_outputfm_2_ce1 <= dataflow_out_channel_U0_partial_outputfm_2_ce1;
    partial_outputfm_2_d0 <= ap_const_lv27_0;
    partial_outputfm_2_d1 <= dataflow_out_channel_U0_partial_outputfm_2_d1;
    partial_outputfm_2_we0 <= ap_const_logic_0;
    partial_outputfm_2_we1 <= dataflow_out_channel_U0_partial_outputfm_2_we1;
    partial_outputfm_3_address0 <= dataflow_out_channel_U0_partial_outputfm_3_address0;
    partial_outputfm_3_address1 <= dataflow_out_channel_U0_partial_outputfm_3_address1;
    partial_outputfm_3_ce0 <= dataflow_out_channel_U0_partial_outputfm_3_ce0;
    partial_outputfm_3_ce1 <= dataflow_out_channel_U0_partial_outputfm_3_ce1;
    partial_outputfm_3_d0 <= ap_const_lv27_0;
    partial_outputfm_3_d1 <= dataflow_out_channel_U0_partial_outputfm_3_d1;
    partial_outputfm_3_we0 <= ap_const_logic_0;
    partial_outputfm_3_we1 <= dataflow_out_channel_U0_partial_outputfm_3_we1;
    partial_outputfm_4_address0 <= dataflow_out_channel_U0_partial_outputfm_4_address0;
    partial_outputfm_4_address1 <= dataflow_out_channel_U0_partial_outputfm_4_address1;
    partial_outputfm_4_ce0 <= dataflow_out_channel_U0_partial_outputfm_4_ce0;
    partial_outputfm_4_ce1 <= dataflow_out_channel_U0_partial_outputfm_4_ce1;
    partial_outputfm_4_d0 <= ap_const_lv27_0;
    partial_outputfm_4_d1 <= dataflow_out_channel_U0_partial_outputfm_4_d1;
    partial_outputfm_4_we0 <= ap_const_logic_0;
    partial_outputfm_4_we1 <= dataflow_out_channel_U0_partial_outputfm_4_we1;
    partial_outputfm_5_address0 <= dataflow_out_channel_U0_partial_outputfm_5_address0;
    partial_outputfm_5_address1 <= dataflow_out_channel_U0_partial_outputfm_5_address1;
    partial_outputfm_5_ce0 <= dataflow_out_channel_U0_partial_outputfm_5_ce0;
    partial_outputfm_5_ce1 <= dataflow_out_channel_U0_partial_outputfm_5_ce1;
    partial_outputfm_5_d0 <= ap_const_lv27_0;
    partial_outputfm_5_d1 <= dataflow_out_channel_U0_partial_outputfm_5_d1;
    partial_outputfm_5_we0 <= ap_const_logic_0;
    partial_outputfm_5_we1 <= dataflow_out_channel_U0_partial_outputfm_5_we1;
    partial_outputfm_6_address0 <= dataflow_out_channel_U0_partial_outputfm_6_address0;
    partial_outputfm_6_address1 <= dataflow_out_channel_U0_partial_outputfm_6_address1;
    partial_outputfm_6_ce0 <= dataflow_out_channel_U0_partial_outputfm_6_ce0;
    partial_outputfm_6_ce1 <= dataflow_out_channel_U0_partial_outputfm_6_ce1;
    partial_outputfm_6_d0 <= ap_const_lv27_0;
    partial_outputfm_6_d1 <= dataflow_out_channel_U0_partial_outputfm_6_d1;
    partial_outputfm_6_we0 <= ap_const_logic_0;
    partial_outputfm_6_we1 <= dataflow_out_channel_U0_partial_outputfm_6_we1;
    partial_outputfm_7_address0 <= dataflow_out_channel_U0_partial_outputfm_7_address0;
    partial_outputfm_7_address1 <= dataflow_out_channel_U0_partial_outputfm_7_address1;
    partial_outputfm_7_ce0 <= dataflow_out_channel_U0_partial_outputfm_7_ce0;
    partial_outputfm_7_ce1 <= dataflow_out_channel_U0_partial_outputfm_7_ce1;
    partial_outputfm_7_d0 <= ap_const_lv27_0;
    partial_outputfm_7_d1 <= dataflow_out_channel_U0_partial_outputfm_7_d1;
    partial_outputfm_7_we0 <= ap_const_logic_0;
    partial_outputfm_7_we1 <= dataflow_out_channel_U0_partial_outputfm_7_we1;
    partial_outputfm_8_address0 <= dataflow_out_channel_U0_partial_outputfm_8_address0;
    partial_outputfm_8_address1 <= dataflow_out_channel_U0_partial_outputfm_8_address1;
    partial_outputfm_8_ce0 <= dataflow_out_channel_U0_partial_outputfm_8_ce0;
    partial_outputfm_8_ce1 <= dataflow_out_channel_U0_partial_outputfm_8_ce1;
    partial_outputfm_8_d0 <= ap_const_lv27_0;
    partial_outputfm_8_d1 <= dataflow_out_channel_U0_partial_outputfm_8_d1;
    partial_outputfm_8_we0 <= ap_const_logic_0;
    partial_outputfm_8_we1 <= dataflow_out_channel_U0_partial_outputfm_8_we1;
    partial_outputfm_9_address0 <= dataflow_out_channel_U0_partial_outputfm_9_address0;
    partial_outputfm_9_address1 <= dataflow_out_channel_U0_partial_outputfm_9_address1;
    partial_outputfm_9_ce0 <= dataflow_out_channel_U0_partial_outputfm_9_ce0;
    partial_outputfm_9_ce1 <= dataflow_out_channel_U0_partial_outputfm_9_ce1;
    partial_outputfm_9_d0 <= ap_const_lv27_0;
    partial_outputfm_9_d1 <= dataflow_out_channel_U0_partial_outputfm_9_d1;
    partial_outputfm_9_we0 <= ap_const_logic_0;
    partial_outputfm_9_we1 <= dataflow_out_channel_U0_partial_outputfm_9_we1;
    write_output_U0_ap_continue <= ap_continue;
    write_output_U0_ap_start <= (outputfm_9_t_empty_n and outputfm_8_t_empty_n and outputfm_7_t_empty_n and outputfm_6_t_empty_n and outputfm_5_t_empty_n and outputfm_4_t_empty_n and outputfm_3_t_empty_n and outputfm_2_t_empty_n and outputfm_27_t_empty_n and outputfm_26_t_empty_n and outputfm_25_t_empty_n and outputfm_24_t_empty_n and outputfm_23_t_empty_n and outputfm_22_t_empty_n and outputfm_21_t_empty_n and outputfm_20_t_empty_n and outputfm_1_t_empty_n and outputfm_19_t_empty_n and outputfm_18_t_empty_n and outputfm_17_t_empty_n and outputfm_16_t_empty_n and outputfm_15_t_empty_n and outputfm_14_t_empty_n and outputfm_13_t_empty_n and outputfm_12_t_empty_n and outputfm_11_t_empty_n and outputfm_10_t_empty_n and outputfm_0_t_empty_n and (ap_sync_reg_write_output_U0_ap_ready xor ap_const_logic_1) and ap_start);
    write_output_U0_start_full_n <= ap_const_logic_0;
    write_output_U0_start_write <= ap_const_logic_0;
end behav;
