

================================================================
== Vivado HLS Report for 'dataflow_out_channel'
================================================================
* Date:           Tue Nov 28 10:42:25 2017

* Version:        2017.3 (Build 2018833 on Wed Oct 04 20:30:40 MDT 2017)
* Project:        Prova_casa
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      9.63|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+-------+------+-------+---------+
    |    Latency   |   Interval   | Pipeline|
    |  min |  max  |  min |  max  |   Type  |
    +------+-------+------+-------+---------+
    |  1196|  27078|  1196|  27078|   none  |
    +------+-------+------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+------+-------+-------------+-----------+-----------+-------+----------+
        |           |    Latency   |  Iteration  |  Initiation Interval  |  Trip |          |
        | Loop Name |  min |  max  |   Latency   |  achieved |   target  | Count | Pipelined|
        +-----------+------+-------+-------------+-----------+-----------+-------+----------+
        |- ti_loop  |  1160|  27042| 1160 ~ 9014 |          -|          -| 1 ~ 3 |    no    |
        +-----------+------+-------+-------------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 38
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / (!tmp_66)
38 --> 
	37  / true

* FSM state operations: 

 <State 1> : 6.69ns
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%curr_layer_in_ch_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_in_ch)"
ST_1 : Operation 40 [1/1] (2.55ns)   --->   "%tmp = add i32 %curr_layer_in_ch_rea, 2"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [36/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 2> : 4.13ns
ST_2 : Operation 42 [35/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 3> : 4.13ns
ST_3 : Operation 43 [34/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 4> : 4.13ns
ST_4 : Operation 44 [33/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 5> : 4.13ns
ST_5 : Operation 45 [32/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 6> : 4.13ns
ST_6 : Operation 46 [31/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 7> : 4.13ns
ST_7 : Operation 47 [30/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 8> : 4.13ns
ST_8 : Operation 48 [29/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 9> : 4.13ns
ST_9 : Operation 49 [28/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 4.13ns
ST_10 : Operation 50 [27/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 11> : 4.13ns
ST_11 : Operation 51 [26/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 12> : 4.13ns
ST_12 : Operation 52 [25/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 13> : 4.13ns
ST_13 : Operation 53 [24/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 14> : 4.13ns
ST_14 : Operation 54 [23/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 15> : 4.13ns
ST_15 : Operation 55 [22/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 16> : 4.13ns
ST_16 : Operation 56 [21/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 17> : 4.13ns
ST_17 : Operation 57 [20/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 18> : 4.13ns
ST_18 : Operation 58 [19/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 19> : 4.13ns
ST_19 : Operation 59 [18/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 20> : 4.13ns
ST_20 : Operation 60 [17/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 21> : 4.13ns
ST_21 : Operation 61 [16/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 22> : 4.13ns
ST_22 : Operation 62 [15/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 23> : 4.13ns
ST_23 : Operation 63 [14/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 24> : 4.13ns
ST_24 : Operation 64 [13/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 25> : 4.13ns
ST_25 : Operation 65 [12/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 26> : 4.13ns
ST_26 : Operation 66 [11/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 27> : 4.13ns
ST_27 : Operation 67 [10/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 28> : 4.13ns
ST_28 : Operation 68 [9/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 29> : 4.13ns
ST_29 : Operation 69 [8/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 30> : 4.13ns
ST_30 : Operation 70 [7/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 31> : 4.13ns
ST_31 : Operation 71 [6/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 32> : 4.13ns
ST_32 : Operation 72 [5/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 33> : 4.13ns
ST_33 : Operation 73 [4/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 34> : 4.13ns
ST_34 : Operation 74 [3/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 35> : 4.13ns
ST_35 : Operation 75 [2/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 36> : 6.69ns
ST_36 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_w_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_w_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_h_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_h_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_ch_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_ch_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %to_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %to_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %row_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %row_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 90 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %col_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 91 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %col_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 92 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %output_offset_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 93 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %output_offset_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 94 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %quantized_multiplier_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 95 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %quantized_multiplier_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 96 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %right_shift_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 97 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %right_shift_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 98 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %out_offset_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 99 [1/1] (0.00ns)   --->   "%out_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %out_offset)"
ST_36 : Operation 100 [1/1] (0.00ns)   --->   "%right_shift_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %right_shift)"
ST_36 : Operation 101 [1/1] (0.00ns)   --->   "%quantized_multiplier_4 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %quantized_multiplier)"
ST_36 : Operation 102 [1/1] (0.00ns)   --->   "%output_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %output_offset)"
ST_36 : Operation 103 [1/1] (0.00ns)   --->   "%weights_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %weights_offset_10)"
ST_36 : Operation 104 [1/1] (0.00ns)   --->   "%input_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %input_offset)"
ST_36 : Operation 105 [1/1] (0.00ns)   --->   "%col_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %col)"
ST_36 : Operation 106 [1/1] (0.00ns)   --->   "%row_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %row)"
ST_36 : Operation 107 [1/1] (0.00ns)   --->   "%to_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %to_r)"
ST_36 : Operation 108 [1/1] (0.00ns)   --->   "%curr_layer_str_h_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_str_h)"
ST_36 : Operation 109 [1/1] (0.00ns)   --->   "%curr_layer_str_w_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_str_w)"
ST_36 : Operation 110 [1/1] (0.00ns)   --->   "%curr_layer_ker_h_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_ker_h)"
ST_36 : Operation 111 [1/1] (0.00ns)   --->   "%curr_layer_ker_w_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_ker_w)"
ST_36 : Operation 112 [1/1] (0.00ns)   --->   "%curr_layer_out_ch_re = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_out_ch)"
ST_36 : Operation 113 [1/1] (0.00ns)   --->   "%curr_layer_out_h_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_out_h)"
ST_36 : Operation 114 [1/1] (0.00ns)   --->   "%curr_layer_out_w_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_out_w)"
ST_36 : Operation 115 [1/1] (0.00ns)   --->   "%curr_layer_in_h_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_in_h)"
ST_36 : Operation 116 [1/1] (0.00ns)   --->   "%curr_layer_in_w_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %curr_layer_in_w)"
ST_36 : Operation 117 [1/1] (0.00ns)   --->   "%image_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %image_offset)"
ST_36 : Operation 118 [1/1] (0.00ns)   --->   "%weights_offset_read_34 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %weights_offset)"
ST_36 : Operation 119 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %out_offset_out, i32 %out_offset_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_w_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_h_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 124 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_ch_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 125 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %to_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 126 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %row_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 127 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %col_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 128 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %output_offset_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 129 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %quantized_multiplier_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 130 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %right_shift_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 131 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_27, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 132 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_26, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_25, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_24, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 135 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_23, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 136 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_22, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_21, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_20, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_19, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_18, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_17, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 142 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_16, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_15, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_14, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_13, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_12, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_11, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_10, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_9, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 150 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_8, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 151 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_7, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 152 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_6, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 153 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_5, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 154 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_4, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_3, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_2, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_1, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 158 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([999 x i27]* %partial_outputfm_0, [1 x i8]* @p_str, [12 x i8]* @p_str24, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 160 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %weights, [6 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 102400, [5 x i8]* @p_str19, [6 x i8]* @p_str20, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 161 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_w_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 162 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %curr_layer_out_w_out, i32 %curr_layer_out_w_rea)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 163 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_h_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 164 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %curr_layer_out_h_out, i32 %curr_layer_out_h_rea)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 165 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %curr_layer_out_ch_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 166 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %curr_layer_out_ch_out, i32 %curr_layer_out_ch_re)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 167 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %to_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 168 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %to_out, i32 %to_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 169 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %row_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 170 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %row_out, i32 %row_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 171 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %col_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 172 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %col_out, i32 %col_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 173 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %output_offset_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 174 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %output_offset_out, i32 %output_offset_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 175 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %quantized_multiplier_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 176 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %quantized_multiplier_out, i32 %quantized_multiplier_4)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 177 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %right_shift_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_36 : Operation 178 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %right_shift_out, i32 %right_shift_read)"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 1> <FIFO>
ST_36 : Operation 179 [1/36] (4.13ns)   --->   "%tmp_64 = srem i32 %tmp, 3"   --->   Core 24 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 4.13> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 180 [1/1] (2.55ns)   --->   "%tmp_65 = sub i32 %tmp, %tmp_64"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 181 [1/1] (1.76ns)   --->   "br label %0" [Prova_casa/src/zhang_convolution_quant.c:280]

 <State 37> : 2.55ns
ST_37 : Operation 182 [1/1] (0.00ns)   --->   "%ti_i_i_i_i_i = phi i32 [ 0, %entry ], [ %ti, %1 ]"
ST_37 : Operation 183 [1/1] (2.47ns)   --->   "%tmp_66 = icmp eq i32 %ti_i_i_i_i_i, %tmp_65" [Prova_casa/src/zhang_convolution_quant.c:280]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 184 [1/1] (0.00ns)   --->   "br i1 %tmp_66, label %.exit, label %1" [Prova_casa/src/zhang_convolution_quant.c:280]
ST_37 : Operation 185 [2/2] (0.00ns)   --->   "call fastcc void @dataflow_in_channels(i8* %weights, i32 %weights_offset_read_34, i32 %image_offset_read, i32 %curr_layer_in_w_read, i32 %curr_layer_in_h_read, i32 %curr_layer_out_w_rea, i32 %curr_layer_out_h_rea, i32 %curr_layer_in_ch_rea, i32 %curr_layer_out_ch_re, i32 %curr_layer_ker_w_rea, i32 %curr_layer_ker_h_rea, i32 %curr_layer_str_w_rea, i32 %curr_layer_str_h_rea, i32 %to_read, i32 %ti_i_i_i_i_i, i32 %row_read, i32 %col_read, [999 x i27]* %partial_outputfm_0, [999 x i27]* %partial_outputfm_1, [999 x i27]* %partial_outputfm_2, [999 x i27]* %partial_outputfm_3, [999 x i27]* %partial_outputfm_4, [999 x i27]* %partial_outputfm_5, [999 x i27]* %partial_outputfm_6, [999 x i27]* %partial_outputfm_7, [999 x i27]* %partial_outputfm_8, [999 x i27]* %partial_outputfm_9, [999 x i27]* %partial_outputfm_10, [999 x i27]* %partial_outputfm_11, [999 x i27]* %partial_outputfm_12, [999 x i27]* %partial_outputfm_13, [999 x i27]* %partial_outputfm_14, [999 x i27]* %partial_outputfm_15, [999 x i27]* %partial_outputfm_16, [999 x i27]* %partial_outputfm_17, [999 x i27]* %partial_outputfm_18, [999 x i27]* %partial_outputfm_19, [999 x i27]* %partial_outputfm_20, [999 x i27]* %partial_outputfm_21, [999 x i27]* %partial_outputfm_22, [999 x i27]* %partial_outputfm_23, [999 x i27]* %partial_outputfm_24, [999 x i27]* %partial_outputfm_25, [999 x i27]* %partial_outputfm_26, [999 x i27]* %partial_outputfm_27, i32 %input_offset_read, i32 %weights_offset_read)" [Prova_casa/src/zhang_convolution_quant.c:283]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_37 : Operation 186 [1/1] (2.55ns)   --->   "%ti = add nsw i32 %ti_i_i_i_i_i, 3" [Prova_casa/src/zhang_convolution_quant.c:280]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 187 [1/1] (0.00ns)   --->   "ret void"

 <State 38> : 0.00ns
ST_38 : Operation 188 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str17) nounwind" [Prova_casa/src/zhang_convolution_quant.c:280]
ST_38 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_53_i_i_i_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str17)" [Prova_casa/src/zhang_convolution_quant.c:280]
ST_38 : Operation 190 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 3, i32 2, [1 x i8]* @p_str) nounwind" [Prova_casa/src/zhang_convolution_quant.c:281]
ST_38 : Operation 191 [1/2] (0.00ns)   --->   "call fastcc void @dataflow_in_channels(i8* %weights, i32 %weights_offset_read_34, i32 %image_offset_read, i32 %curr_layer_in_w_read, i32 %curr_layer_in_h_read, i32 %curr_layer_out_w_rea, i32 %curr_layer_out_h_rea, i32 %curr_layer_in_ch_rea, i32 %curr_layer_out_ch_re, i32 %curr_layer_ker_w_rea, i32 %curr_layer_ker_h_rea, i32 %curr_layer_str_w_rea, i32 %curr_layer_str_h_rea, i32 %to_read, i32 %ti_i_i_i_i_i, i32 %row_read, i32 %col_read, [999 x i27]* %partial_outputfm_0, [999 x i27]* %partial_outputfm_1, [999 x i27]* %partial_outputfm_2, [999 x i27]* %partial_outputfm_3, [999 x i27]* %partial_outputfm_4, [999 x i27]* %partial_outputfm_5, [999 x i27]* %partial_outputfm_6, [999 x i27]* %partial_outputfm_7, [999 x i27]* %partial_outputfm_8, [999 x i27]* %partial_outputfm_9, [999 x i27]* %partial_outputfm_10, [999 x i27]* %partial_outputfm_11, [999 x i27]* %partial_outputfm_12, [999 x i27]* %partial_outputfm_13, [999 x i27]* %partial_outputfm_14, [999 x i27]* %partial_outputfm_15, [999 x i27]* %partial_outputfm_16, [999 x i27]* %partial_outputfm_17, [999 x i27]* %partial_outputfm_18, [999 x i27]* %partial_outputfm_19, [999 x i27]* %partial_outputfm_20, [999 x i27]* %partial_outputfm_21, [999 x i27]* %partial_outputfm_22, [999 x i27]* %partial_outputfm_23, [999 x i27]* %partial_outputfm_24, [999 x i27]* %partial_outputfm_25, [999 x i27]* %partial_outputfm_26, [999 x i27]* %partial_outputfm_27, i32 %input_offset_read, i32 %weights_offset_read)" [Prova_casa/src/zhang_convolution_quant.c:283]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_38 : Operation 192 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str17, i32 %tmp_53_i_i_i_i_i)" [Prova_casa/src/zhang_convolution_quant.c:286]
ST_38 : Operation 193 [1/1] (0.00ns)   --->   "br label %0" [Prova_casa/src/zhang_convolution_quant.c:280]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 6.69ns
The critical path consists of the following:
	wire read on port 'curr_layer_in_ch' [219]  (0 ns)
	'add' operation ('tmp') [280]  (2.55 ns)
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 2>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 3>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 4>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 5>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 6>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 7>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 8>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 9>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 10>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 11>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 12>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 13>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 14>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 15>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 16>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 17>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 18>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 19>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 20>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 21>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 22>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 23>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 24>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 25>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 26>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 27>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 28>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 29>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 30>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 31>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 32>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 33>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 34>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 35>: 4.13ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)

 <State 36>: 6.69ns
The critical path consists of the following:
	'srem' operation ('tmp_64') [281]  (4.13 ns)
	'sub' operation ('tmp_65') [282]  (2.55 ns)

 <State 37>: 2.55ns
The critical path consists of the following:
	'phi' operation ('ti') with incoming values : ('ti', Prova_casa/src/zhang_convolution_quant.c:280) [285]  (0 ns)
	'add' operation ('ti', Prova_casa/src/zhang_convolution_quant.c:280) [294]  (2.55 ns)

 <State 38>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
